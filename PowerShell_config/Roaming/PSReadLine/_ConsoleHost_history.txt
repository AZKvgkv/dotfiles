python
julia
pip3 install -U radian
radian
where radian
tex -v
 & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.20.0\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '63054' '--' 'd:\~代码区\LATEX文档区\py2.py' 
& D:/Python/Python312/python.exe d:/~代码区/LATEX文档区/py2.py
 & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.20.0\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '52660' '--' 'd:\vs code-code\ACODE\demo.py' 
Get-ChildItem env: | Out-File "C:\Users\AZK19\AppData\Local\Temp\tmp-3460bJyEpKkLQJrh.txt"
JAVA
JAVAC
java -version
javac -version
go version
julia
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day01/第一天及相关提示.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day02/cetigrade.py"
200
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day02/cetigrade.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day02/circle.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day02/leap.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/dis.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day07_字符串和常用数据结构/yanghui.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/access.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/access.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/access.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/access.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/clock.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/distance.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/rect.py"
clear
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/rect.py"
& D:/Python/Python312/python.exe "d:/vs code-code/MEMS/numerical_cal.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/demo.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/demo.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/demo.py"
& D:/Python/Python312/python.exe "d:/vs code-code/1.py"
& D:/Python/Python312/python.exe "d:/vs code-code/12.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day01/第一天及相关提示.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day02/circle.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/circle.py"
clear
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day08_面向对象的基础/circle.py"
go run test.go
go run test
go run test.go
cls
go version
go env
go mod init Demo
set GO111MODULE = on
set GO111MODULE=on
go env
set GO111MODULE= on
go env
rust -V
rustc -V
cargo -V
rusts -V
rustc -V
cargo -V
rustc -V
rustup update
rustc -V
rustup self uninstall
ls
rustdoc --version
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day09_面向对象的进阶/diamond.py"
cls
why
ls
& D:/Python/Python312/python.exe "d:/vs code-code/demo.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day09_面向对象的进阶/diamond.py"
 & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.20.0\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '56294' '--' 'd:\vs code-code\ACODE\Python_100天_练习\Part 1-Python语言基础\Day09_面向对象的进阶\diamond.py' 
 d:; cd 'd:\vs code-code'; & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.20.0\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '56302' '--' 'D:\vs code-code\ACODE\Python_100天_练习\Part 1-Python语言基础\Day09_面向对象的进阶\diamond.py' 
 d:; cd 'd:\vs code-code'; & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.20.0\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '56309' '--' 'D:\vs code-code\ACODE\Python_100天_练习\Part 1-Python语言基础\Day09_面向对象的进阶\diamond.py' 
 d:; cd 'd:\vs code-code'; & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.20.0\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '56315' '--' 'D:\vs code-code\ACODE\Python_100天_练习\Part 1-Python语言基础\Day09_面向对象的进阶\diamond.py' 
& D:/Python/Python312/python.exe "d:/vs code-code/MEMS/demo.py"
& D:/Python/Python312/python.exe "d:/vs code-code/12.py"
& D:/Python/Python312/python.exe "d:/vs code-code/MEMS/demo.py"
& D:/Python/Python312/python.exe "d:/vs code-code/12.py"
& D:/Python/Python312/python.exe "d:/vs code-code/MEMS/demo.py"
& D:/Python/Python312/python.exe "d:/vs code-code/01.py"
& D:/Python/Python312/python.exe "d:/vs code-code/02.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/Test/demo.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/Test/demo.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/Test/demo.py"
cls
pip install PySpice
cls
& D:/Python/Python312/python.exe "d:/vs code-code/MEMS/test.py"
clear
ipython
python
vim
 cd C:/Users/AZK19/Desktop
python 222.py`

vim 222.py
& D:/Python/Python312/python.exe "d:/vs code-code/test.py"
cls
vim demo.py
vim demo.md
 & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.22.0\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '2000' '--' 'D:\vs code-code\Test\Julia-learn\cal.jl' 
 d:; cd 'd:\vs code-code'; & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.22.0\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '2011' '--' 'D:\vs code-code\Test\Julia-learn\cal.jl' 
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/PYTHON_01/正则表达式/demo1.py"
cls
nvim --version
echo :$VIM
:echo $VIM
nvim
pip install tensorflow
python
python312
set TF_ENABLE_ONEDNN_OPTS=0
python
pwsh -Update
python
python -3.6
py -3.6
py -3.12
python
julia
julia> ENV["JULIA_DEPOT_PATH"]
julia
& D:/Python/Python312/python.exe "d:/vs code-code/%py_100/Python-100-Days/Day01-15/code/Day11/file2.py"
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day12_字符串和正则表达式/example1.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day12_字符串和正则表达式/example1.py"
clear()
clear
& D:/Python/Python312/python.exe "d:/vs code-code/test.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/test.py"
100
cls
& D:/Python/Python312/python.exe "d:/vs code-code/test.py"
clear()
clear
cls
& D:/Python/Python312/python.exe "d:/vs code-code/ACODE/Python_100天_练习/Part 1-Python语言基础/Day12_字符串和正则表达式/example2.py"
cls
cd ..
cargo new variable
cargo new datatype
cargo new conditions
cargo new Loop
cargo new loop
cargo new funtion
python
pip install pandas
pip install numpy
pip install scipy
python
pip install opencv-python==3.4.15.0
PYTHON
pip install opencv-python==3.4.15.0
python -3.6
py -3.6
python
pip install opencv-python==3.4.15.0
python
py -3.12
cargo new tuple
cargo new array
& D:/Python/Python312/python.exe "d:/vs code-code/MEMS/demo.py"
cargo
rustup
rustup doc --book
rustup update
rustc -V
cargo -V
cd test_rust
cargo new hello_world
cd hello_world
cargo run
 & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.22.1\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '13102' '--' 'D:\vs code-code\test_rust\hello_world\src\main.rs' 
cargo new hello_world
go version
go -update
go -version
go version
where go
go
go env
go install github.com/google/gops@latest
cls
cargo new ownership_move
& D:/Python/Python312/python.exe "d:/vs code-code/01test.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/01test.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/01/小组作业.py"
D:/anaconda3/Scripts/activate
conda activate base
& D:/anaconda3/python.exe c:/Users/AZK19/OneDrive/桌面/01/7.py
D:/anaconda3/Scripts/activate
conda activate base
& D:/anaconda3/python.exe c:/Users/AZK19/OneDrive/桌面/01/7.py
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/01/7.py
julia
julai
julia
which julia
echo $JULIA_PREFIX
mkdir CLRust
ls
cd clrust
cargo new hello
julia
& D:/Python/Python312/python.exe "d:/vs code-code/测试.py"
cls
& D:/Python/Python312/python.exe "d:/vs code-code/测试.py"
cargo new borrow
cd rustrover
cargo new borrow
ruby -v
dart -v
dart --version
ruby
rust
zig run hello.zig
cls
zig run main.zig
cd //
cd ..
mkdir Vlang_project
ls
cd Vlang_project
ls
cd ..
mkdir test_shell
cd test_shell
ls
julia
zig init
mkdir code_test
ls
cd code_test
zig init
mkdir codeTest
ls
cd codetest
zig init
cd ..
cd codetest
zig build test
zig run main
cd src
zig run main
zig run main.zig
cd....
cd..
cls
zls --version
zig --version
zls --version
zig --version
zig version
zls version
zig version
zig
zig version
v run "d:\IdeaCProjects\Vlang_project\demo\main.v"
cls
V: Run current file
cls
v run "d:\IdeaCProjects\Vlang_project\demo\main.v"
v run "d:\IdeaCProjects\Vlang_project\test_shell\01.vsh"
cls
v run "d:\IdeaCProjects\Vlang_project\test_shell\type2.vsh"
v run "d:\IdeaCProjects\Vlang_project\test_shell\01.vsh"
v up
where v
v
v --version
vls --version
curl -o install.vsh https://raw.githubusercontent.com/v-analyzer/v-analyzer/main/install.vsh; v run install.vsh; del install.vsh
v-analyzer up --nightly
v-analyzer up 
v-analyzer
curl -o install.vsh https://raw.githubusercontent.com/v-analyzer/v-analyzer/main/install.vsh; v run install.vsh; del install.vsh
v run "d:\IdeaCProjects\Vlang_project\test_shell\datatype.vsh"
V UP
v up
v -prod "d:\IdeaCProjects\Vlang_project\test_shell\datatype.vsh"
v run "d:\vs code-code\hello.v"
cls
v run "d:\IdeaCProjects\Vlang_project\main.v"
dart --version
scala --version
scala -version
cs --version
scala
java
javac
scala
javac -version
java -version
ls
mkdir 555
rm 555
ls
v run d:\IdeaCProjects\Vlang_project\main.v
v run "d:\IdeaCProjects\Vlang_project\main.v"
zig init
zig init-exe
cd rustrover
cargo new slice
julia
Python
py-3.12
python -3.12
python -312
pip install pipenv
 python.exe -m pip install --upgrade pip
tsc hello.ts
cd fronntend
cd frontend
ls
cd demo
tsc app.ts
node app
npm -v
npm install -g typescript
cd ..
tsc -v
cd ..
cd frontend
tsc app.ts
cd demo
tsc app.ts
node app.js
julia
Get-ChildItem env: | Out-File "C:\Users\AZK19\AppData\Local\Temp\tmp-17028L0h9aFbh6MlV.txt"
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
v run d:\IdeaCProjects\Vlang_project
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
v run d:\IdeaCProjects\Vlang_project\main.v
v run d:\IdeaCProjects\Vlang_project\main.v
cd vlang_project
mkdir 999
ls
cd 999
v init
cd..
rm 999
cls
cd..
v --version
mkdir 007
ls
cd 007
ls
z init
v init
cls
cd ..
mkdir 008\
cd 008
ls
v new abc
cd ..
mkdir Vlang_basic_project
ls
cd vlang_basic_project
v new base
cd base
ls
cd ..
mkdir demo
ls
cd demo
v init
v run d:\IdeaCProjects\Vlang_project
v run d:\IdeaCProjects\Vlang_project\hello.v
v run d:\IdeaCProjects\Vlang_project\part 01\hello.v
v run d:\IdeaCProjects\Vlang_project\part 01
mkdir part01
cd part01
run hello.v
.hello.v
v run hello.v
v run d:\IdeaCProjects\Vlang_project\part01\hello.v
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
cls
v run d:\IdeaCProjects\Vlang_project\part01\hello.v
v run d:\IdeaCProjects\Vlang_project\part01\Types.v
d
dmd
dmd --version
v run d:\IdeaCProjects\Vlang_project\part01\type_numbers.v
v run d:\IdeaCProjects\Vlang_project\part01
cls
v run d:\IdeaCProjects\Vlang_project\part01\type_numbers.v
cls
v run d:\IdeaCProjects\Vlang_project\part01\type_numbers.v
cls
clear()
cls
v run d:\IdeaCProjects\Vlang_project\part01\type_numbers.v
cls
v run d:\IdeaCProjects\Vlang_project\part01\array.v
csl
cls
v run d:\IdeaCProjects\Vlang_project\part01\array.v
cls
v run d:\IdeaCProjects\Vlang_project\part01\array.v
cls
v run d:\IdeaCProjects\Vlang_project\part01\array.v
v run d:\IdeaCProjects\Vlang_project\part01\array.v
cls
v run d:\IdeaCProjects\Vlang_project\part01\array.v
v run d:\IdeaCProjects\Vlang_project\part01\example_array.v
cls
v run d:\IdeaCProjects\Vlang_project\part01\multi_arrays.v
cls
v run d:\IdeaCProjects\Vlang_project\part01\multi_arrays.v
cls
v run d:\IdeaCProjects\Vlang_project\part01\multi_arrays.v
cls
v run d:\IdeaCProjects\Vlang_project\part01\multi_arrays.v
nim
choosenim show
Versions
choosenim Versions
cd 007
nim c hello.nim
nim c -r hello.nim
nim hello.nim
choosenim show
cls
cd 
cls
cd 007
nim c hello
cd D:\vs code-code\007
nim c hello.nim
choosenim show
cd 007
nim c hello.nim
mkdir 01
ls
nim c 2
nim c 2.nim
ls
cd 01
nim c hello.nim
cd 007
cd 01
nim c hello.nim
mkdir 999
lls
ls
cd 999
touch hello.nim
cd 999
ls
nim c -r hello.nim
cd 999
ls
nim c hello.nim
cls
nim c hello.nim
nim c -r hello.nim
ls
nim c -r hello.nim
cd demo
ls
nim c -r hello.nim
cls
nim c -r "c:\Users\AZK19\OneDrive\桌面\demo\hello.nim"
ls
run hello.exe
mkdir test01
ls
cd test01
ls
mkdir src
mkdir out
nim --version
cd d
cd d:
cls
ls
cd ~代码区
ls
cd Nim_project
ls
cd test01
ls
cd src
ls
nim c -r main.nim
cls
v run d:\IdeaCProjects\Vlang_project\part01\hello.v
ls
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
& D:/Python/Python312/python.exe "d:/vs code-code/Test/demo.py"
mkdir Julia_project
ls
cd julia_project
ls
mkdir TODO
cd todo
go -version
go version
sw_vers
go env -w GOPROXY
go env
go env -w GO111MODULE=on
go env -w GOPROXY=https://goproxy.io,direct
go env
cls
mkdir hello
ls
cd hello
go mod init hello
ls
cls
go main.go
go run main.go
csl
cls
mkdir hello
go mod init hello
cd hello
go mod init hello
go mod tidy
go run main.go
cls
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:13284' 
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:13498' 
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
& D:/Python/Python312/python.exe "d:/vs code-code/Test/90.py"
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
DISM.exe /online /cleanup-image /scanhealth
DISM.exe /online /cleanup-image /checkhealth
DISM.exe /online /cleanup-image /restorehealth
sfc /scannow
cd rustrover
ls
cargo new struct
cargo new structure
ls
cargo new practice
ls
cls
mkdir practice
ls 
cls
cd practice
ls
cargo new basic-types
cls
vim 1.py
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:3384' 
 D:; cd 'D:\~代码区\Go_project\hello'; ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:3396' 
cd ai-base
ls
v run d:\IdeaCProjects\Vlang_basic_project\demo\src\main.v
python
python -312
python 312
$PSVersionTable.PSVersion
winget search Microsoft.PowerShell
python 312
python -3.12
python3.12
py -3.12
python
Get-Command powershell | Select-Object -ExandProperty Path
 Get-Command powershell | Select-Object -ExpandProperty Path
python
pip install dash
python
D:\Python\Python312\python.exe -m pip install --upgrade pip
cd..
ls
cd src
ls
mkdir oopProject
ls
cd oopproject
ls
go init
go help
go build
go init build
mkdir src
ls
cd src
ls
mkdir bin
mkdir pkg
cd src
ls
go build
go help
cls
go mod
go mod init
csl
cls
go mod init src
cd ..
go mod initoopProject
cd..
cd oopproject
go mod init oopProject
cls
cd ..
ls
rm oopproject
ls
cls
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
diSM.exe /online /cleanup-image /scanhealth
diSM.exe /online /cleanup-image /checkhealth
diSM.exe /online /cleanup-image /restorehealth
diSM.exe /online /cleanup-image /scanhealth
diSM.exe /online /cleanup-image /checkhealth
diSM.exe /online /cleanup-image /restorehealth
sfc /scannow
mkdir myFirst-JS-project
ls
cd myfirst-js-project
ls
touch index.js
cls
node hello.js
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
node hello.js
cls
cd myfirst-js-project
node hello.js
cd myfirst-js-project
node hello.js
cls
cd myfirst-js-project
node index.js
node datatype.js
cd myfirst-js-project
node datatype.js
cls
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
cd myfirst-js-project
ls
node hello.js
cd myfirst-js-project
ls
node hello.js
ls
cd ..\
ls
dotnet --version
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
.\node_inject.exe
.\license-gen.exe
.\node_inject.exe
.\license-gen.exe
ls
.\node_inject.exe
.\license-gen.exe
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
node "d:\~Code\JavaScript-code\myFirst-JS-project\000.js"
node "d:\~Code\JavaScript-code\myFirst-JS-project\90.js"
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
cls
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
CLEAR()
clear
node "d:\~Code\JavaScript-code\myFirst-JS-project\tempCodeRunnerFile.js"
cls
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
cls
ls
cls
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
echo Hello
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
cls
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
cls
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
cls
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
cls
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
cls
node "d:\~Code\JavaScript-code\myFirst-JS-project\demo.js"
cls
 & 'D:\Java\jdk-21\bin\java.exe' '--enable-preview' '-XX:+ShowCodeDetailsInExceptionMessages' '-cp' 'C:\Users\AZK19\AppData\Roaming\Code\User\workspaceStorage\a9c864ed3badc80c4eb5c8b095b1990e\redhat.java\jdt_ws\javasepro_299e0014\bin' 'com.itazvgkv.hello.array.Def' 
 d:; cd 'd:\IdeaProjects\javasepro'; & 'D:\Java\jdk-21\bin\java.exe' '--enable-preview' '-XX:+ShowCodeDetailsInExceptionMessages' '-cp' 'C:\Users\AZK19\AppData\Roaming\Code\User\workspaceStorage\a9c864ed3badc80c4eb5c8b095b1990e\redhat.java\jdt_ws\javasepro_299e0014\bin' 'com.itazvgkv.hello.array.Def' 
 & 'D:\Java\jdk-21\bin\java.exe' '--enable-preview' '-XX:+ShowCodeDetailsInExceptionMessages' '-cp' 'C:\Users\AZK19\AppData\Roaming\Code\User\workspaceStorage\a9c864ed3badc80c4eb5c8b095b1990e\redhat.java\jdt_ws\javasepro_299e0014\bin' 'com.itazvgkv.hello.array.define' 
 & 'D:\Java\jdk-21\bin\java.exe' '--enable-preview' '-XX:+ShowCodeDetailsInExceptionMessages' '-cp' 'C:\Users\AZK19\AppData\Roaming\Code\User\workspaceStorage\a9c864ed3badc80c4eb5c8b095b1990e\redhat.java\jdt_ws\javasepro_299e0014\bin' 'com.itazvgkv.hello.array.dy_test' 
 d:; cd 'd:\IdeaProjects\javasepro'; & 'D:\Java\jdk-21\bin\java.exe' '--enable-preview' '-XX:+ShowCodeDetailsInExceptionMessages' '-cp' 'C:\Users\AZK19\AppData\Roaming\Code\User\workspaceStorage\a9c864ed3badc80c4eb5c8b095b1990e\redhat.java\jdt_ws\javasepro_299e0014\bin' 'com.itazvgkv.hello.array.dy_test' 
 & 'D:\Java\jdk-21\bin\java.exe' '--enable-preview' '-XX:+ShowCodeDetailsInExceptionMessages' '-cp' 'C:\Users\AZK19\AppData\Roaming\Code\User\workspaceStorage\a9c864ed3badc80c4eb5c8b095b1990e\redhat.java\jdt_ws\javasepro_299e0014\bin' 'com.itazvgkv.hello.array.random_ranking' 
cd "d:\IdeaProjects\Others\kotlin_project\demo\src\com\azvgkv\basic\" ; if ($?) { kotlinc base01.kt -include-runtime -d base01.jar } ; if ($?) { java -jar base01.jar }
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
cd "d:\IdeaProjects\Others\kotlin_project\demo\src\com\azvgkv\basic\" ; if ($?) { kotlinc basictypes.kt -include-runtime -d basictypes.jar } ; if ($?) { java -jar basictypes.jar }
node "d:\~Code\JavaScript-code\myFirst-JS-project\90.js"
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
python -u "d:\vs code-code\Test\007\demo.py"
cls
cls
ls
cls
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
python -u "d:\Python-projects\99.py"
cls
python -u "d:\Python-projects\99.py"
ls
node "d:\~Code\JavaScript-code\myFirst-JS-project\array.js"
cls
ls
cd myfirst-js-project
ls
dir
cls
ckls
cls
ls
python
ipython
cd myfirst-js-project
node object.js
cls
npm init -y
npm install --save-dev prettier
npm install express
cls
ls
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:12995' 
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:13002' 
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:13057' 
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
cls
ls
dir
cd julia-project
cd Julia-project
cd Julia_project
ls
cd julia-learn
ls
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
cls
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
cls
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
cd ..
mkdir TypeScript
ls
cd typescript-code
ls
tsc -v
tsc hello.ts
ls
rm hello.ts
re hello.js
rm hello.js
ls
dir
cls
mkdir hello
ls
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
 & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.22.1\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '5348' '--' 'd:\Python-projects\34.py' 
 d:; cd 'd:\Python-projects'; & 'D:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.python-2023.22.1\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '5358' '--' 'D:\Python-projects\34.py' 
 d:; cd 'd:\Python-projects'; & 'd:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.debugpy-2023.3.13341008-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '5369' '--' 'D:\Python-projects\34.py' 
 & 'd:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.debugpy-2023.3.13341008-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '5386' '--' 'D:\Python-projects\34.py' 
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
v 
v --version
v up
v --version
v up
v --version
v symlink
v --version
v run d:\IdeaCProjects\Vlang_basic_project\base\src\main.v
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
v
v help
v -analyzer
v-analyzer
v
v-analyzer up
v-analyzer up --nightly
git clone https://github.com/onerbs/sublime-v V
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
cls
ls
cls
ls
ls
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
python
ipython
                                                                                                     powercfg /h off
powercfg /h off
disM.exe /online /cleanup-image /scanhealth
disM.exe /online /cleanup-image /checkhealth
notepad $profile
oh-my-posh init pwsh | Invoke-Expression
Get-PoshThemes
notepad $profile
oh-my-posh init pwsh --config 'C:\Users\AZK19\AppData\Local\Programs\oh-my-posh\themes\clean-detailed.omp.json' | Invoke-Expression
ls
notepad $profile
oh-my-posh init pwsh | Invoke-Expression
oh-my-posh init pwsh --config 'C:\Users\AZK19\AppData\Local\Programs\oh-my-posh\themes\clean-detailed.omp.json' | Invoke-Expression
dir
cd d 
cd d:
ls
cd ~代码区
ls
notepad $profile
$profile
C:\Users\AZK19\OneDrive\文档\PowerShell\Microsoft.PowerShell_profile.ps1
$profile
mkdir C:\Users\AZK19\OneDrive\文档\PowerShell\Microsoft.PowerShell_profile.ps1
notepad $profile
ls
cd d:
ls
cd zig
ls
cls
where julia
which julia
julia help
cls
Get-PoshThemes
notepad $profile
ls
dir
julia
cls
julia
ls
cd 01
ls
cls
ls
winget
winget install Helix.Helix
cls
winget install Helix.Helixwinget install Helix.Helixcls
winget install Helix.Helix
cls
scoop
cls
winget install Helix.Helix
cls
helix
hx
hx-ls
hx
ls
cd demo
ls
hx 'hello'
vim hello
ls
hx 'hello.py'
ls
vim hello
ls
vim hello.py
ls]
ls
cargo new hxtest
ls
cd hxtest
ls
cd ..
ls
hx hxtest
vim hxtest
hx
ls
cd demo
ls
vim ntest
ls
mkdir ntest
ls
cd ntest
vim hello.py
ls
vim hello.py
cd ..
nvim ntest
vim --version
vim $HOME\_vimrc
vim "$HOME\_vimrc"
vim --version
vim $HOME\_vimrc
nvim
cd C:\Users\AZK19\AppData\Local
ls
mkdir -p .config/nvim
cd  .config/nvim.
cd  .config/nvim/
touch init.lua
cd  .config/nvim/
la
ls
nvim init.lua
nvim
ls
mkdir lua
cd lua
mkdir core
cd ..
ls
git clone https://github.com/eggtoopain/Neovim-Configuration-Tutorial.git
cls
ls
cd lua
ls
cd core
ls
nvim options.lua
ls
cd ..
ls
cd ..
ls
nvim init.lua
nvim
vim ~/.config/nvim/init.vim
cd ..
nvim --version
cd $VIM\sysinit.vim
cd..
$VIM\sysinit.vim
vim $VIM\sysinit.vim
cd $VIM\sysinit.vim
cls
mkdir -p .config/nvim
ls
cd  .config/nvim/
ls
echo. init.lua
echo init.lua
ls
echo. > init,lua
echo. > init.lua
type nul>init.lua
ni init.lua
nvim init.lua
cls
ls
vim init.lua
nvim init.lua
ls
cd nvim
;s
ls
nvim init.lua
ls
cd d:
ls
cd neovim
ls
cd lua
cd core
cd keymaps.lua
ls
vim keymaps.lua
ls
nvim packer_compiled.lua
ls
nvim
vim 99.txt
vim 99.py
nvim 99.py
mkdir -p .config/nvim
cd .config/nvim
ni init.lua
nvim init.lua
mkdir lua
cd lua
mkdir core
cd core
ni options.lua
nvim options.lua
cd ..
ls
nvim init.lua
cd C:\Users\AZK19\AppData\Local\.config\nvim\lua\core
ls
nvim options.lua
cd ..
nvim init.lua
mkdir -p .config/nvim
cd .config/nvim
ls
nvim init.lua
ls
nvim options.lua
nvim
nvim --version
echo $VIM
nvim
ls
cd ..
ls
nvim init.lua
ls
nvim options.lua
ls
mkdir -p /nvim
mkdir nvim
cd nvim
ls
ni init.lua
nvim init.lua
mkdir lua
cd lua
mkdir core
cd core
ni options.lua
nvim options.lua
cd ..
cd..
ls
nvim init.lua
git --version
lazygit
lazygit --version
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\nvim
Remove-Item $env:LOCALAPPDATA\nvim\.git -Recurse -Force
nvim
vim 99.py
nvim 99.py
nvim
nvim 99.py
python 99.py
get-PoshThemes
cls
nvim
fd
fd -h
rg --version
nvim
nim
nvim
rg
rg --version
nvim
https://github.com/bryant-video/neovim-tutorial.git
git clone https://github.com/bryant-video/neovim-tutorial.git
nvim
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\nvim
Remove-Item $env:LOCALAPPDATA\nvim\.git -Recurse -Force
nvim
.code
code
nvim
python
python 3.12
python
pip install neovim
python.exe -m pip install --upgrade pip
nvim
fd -h
fd --version
nvim
python
pip install rich
nvim
vim
cd demo
la
ls
vim 5.py
cd demo
la
ls
python 5.py
date
echo hello
bash
echo $path
echo $PATH
WHICH echo
which echo
where echo
cls
vim hello
nvim hello.pyu
vim hello.py
nvim hello.py
foo=bar
echo $foo`
foo=bar
foo=bar`
echo $foo
ls -l
ls
cd demo
ls
cd dash
ls
cd .
cd..
nvim 99.py
ls
ls -help
ls --help
ls
cd demo
nvim
code
fd
fd msvc
gcc -v
msvc -v
winget install Microsoft.VisualStudio.2022.BuildTools --force --override "--wait --passive --add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.Windows11SDK.22000"
cls
gcc -v
msvc -v
clang
c1
cl
cl --version
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.18.5-win32-x64\debugAdapters\vsdbg\bin\VsDebugConsole.exe' '\\.\pipe\Microsoft-VisualStudio-Debug-Console-{CF46AF29-5707-4AC9-AF5E-B5BB300F3F73}' 'Local\{CF46AF29-5707-4AC9-AF5E-B5BB300F3F73}' '/AutoExit' 
code
gcc -v
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.18.5-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-fzsqrg4v.ss5' '--stdout=Microsoft-MIEngine-Out-d2yxgof0.zvy' '--stderr=Microsoft-MIEngine-Error-felkftwi.hsc' '--pid=Microsoft-MIEngine-Pid-jsu2bijg.2sx' '--dbgExe=D:\@more\mingw64\bin\gdb.exe' '--interpreter=mi' 
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.18.5-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-wze1dm4t.ili' '--stdout=Microsoft-MIEngine-Out-vi1xyuvi.y1a' '--stderr=Microsoft-MIEngine-Error-y0ncxgkw.jgr' '--pid=Microsoft-MIEngine-Pid-x1trph02.guw' '--dbgExe=D:\@more\mingw64\bin\gdb.exe' '--interpreter=mi' 
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.18.5-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-suaoaet1.edw' '--stdout=Microsoft-MIEngine-Out-l420bsjw.xqh' '--stderr=Microsoft-MIEngine-Error-iumdslhc.e35' '--pid=Microsoft-MIEngine-Pid-lk4eqoys.ngn' '--dbgExe=D:\@more\mingw64\bin\gdb.exe' '--interpreter=mi' 
cls
code
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.18.5-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-e0c0byok.k4p' '--stdout=Microsoft-MIEngine-Out-1isdejld.awm' '--stderr=Microsoft-MIEngine-Error-fer2azwj.t2q' '--pid=Microsoft-MIEngine-Pid-zgbs1eod.hrc' '--dbgExe=D:\@more\mingw64\bin\gdb.exe' '--interpreter=mi' 
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.18.5-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-hp0eox32.juc' '--stdout=Microsoft-MIEngine-Out-yzmkakqf.0ou' '--stderr=Microsoft-MIEngine-Error-vnpvgl5l.rsn' '--pid=Microsoft-MIEngine-Pid-tnt1f2q0.3sq' '--dbgExe=D:\@more\mingw64\bin\gdb.exe' '--interpreter=mi' 
cls
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.18.5-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-i1jveiqr.5h3' '--stdout=Microsoft-MIEngine-Out-sy51xg3r.ioa' '--stderr=Microsoft-MIEngine-Error-lqjwbkei.3wf' '--pid=Microsoft-MIEngine-Pid-dgq25fgh.y0r' '--dbgExe=D:\@more\mingw64\bin\gdb.exe' '--interpreter=mi' 
nvim
cd d:
ls
cd %First_pro
ls
cd cs-self-learning
ls
cd 02_cs50x
ls
cd Clang
ls
nvim
cd Clang
nvim test.c
disM.exe /online /cleanup-image /scanhealth
disM.exe /online /cleanup-image /checkhealth
disM.exe /online /cleanup-image /scanhealth
disM.exe /online /cleanup-image /checkhealth
disM.exe /online /cleanup-image /restorehealth
sfc /scannow
cd d:
cd %First_pro
ls
cd cs-self-learning
cd clang
ls
cd 02_cs50x
cd clang
ls
code
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.18.5-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-vdmeofhq.m44' '--stdout=Microsoft-MIEngine-Out-5hg5la4l.rkx' '--stderr=Microsoft-MIEngine-Error-vlrqm20g.xor' '--pid=Microsoft-MIEngine-Pid-jj5m2qfs.h3s' '--dbgExe=D:\@more\mingw64\bin\gdb.exe' '--interpreter=mi' 
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.18.5-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-bnn4aay2.xir' '--stdout=Microsoft-MIEngine-Out-hb15wv5t.b5l' '--stderr=Microsoft-MIEngine-Error-oua0vm0y.hul' '--pid=Microsoft-MIEngine-Pid-dw4hg02p.omu' '--dbgExe=D:\@more\mingw64\bin\gdb.exe' '--interpreter=mi' 
git clone https://github.com/code50/153256707.git
vim
$vim
echo $PATH
dcho $vim
vim --version
VIM\vimrc
cd $VIM\vimrc
vim --version
vim "$HOME\_vimrc"
wget http://upos-sz-staticcos.bilivideo.com/appstaticboss/vim-vide-20200812.tgz && tar xvf ./vim-vide-20200812.tgz -C ~
winget http://upos-sz-staticcos.bilivideo.com/appstaticboss/vim-vide-20200812.tgz && tar xvf ./vim-vide-20200812.tgz -C ~
wget http://upos-sz-staticcos.bilivideo.com/appstaticboss/vim-vide-20200812.tgz && tar xvf ./vim-vide-20200812.tgz -C ~
wget --help
vim "$HOME\_vimrc"
vim 77.py
vim "$HOME\_vimrc"
nvim
vi --version
emacs --version
winget install Helix.Helix
winget uninstall Helix.Helix
winget install Helix.Helix
hx
hx TODO
nvim TODO
hx demo
hx
hx demo
hx
hx ls
helix ls
hx pwd
cls
hx
helix --health python
hx --health python
vim "$HOME\_vimrc"
git clone https://gist.github.com/1aab5f9aa5b47afa651c7fc84b8e9875.git
vim "$HOME\_vimrc"
vim vim-bak.txt
git clone https://gist.github.com/1aab5f9aa5b47afa651c7fc84b8e9875.git
vim newvim.txt
vim "$HOME\_vimrc"
vim --version
vim "$HOME\_vimrc"
vim
 vim "$HOME\_vimrc"
vim "$HOME\_vimrc"
nvim
hx
scoop
scoop --version
$env:SCOOP='D:\Applications\Scoop'
$env:SCOOP='D:\%Applications\Scoop'
[Environment]::SetEnvironmentVariable('SCOOP', $env:SCOOP, 'User')
iwr -useb get.scoop.sh | iex
scoop --version
scoop bucket add .oki https://github.com/okibcn/Bucket  # Optional: the changes are propagated faster this way
scoop install nano
scoop uninstall nano
scoop install nano
scoop config proxy 127.0.0.1:7890
scoop install nano
nano
scoop update nano
scoop status
ls
cd demo
ls
nano 99.py
ls
cd OneDrive
ls
cd 桌面
ls
cd demo
hx 99.py
ls
hx _vimrc
hx 99.py
scoop uninstall nano
vim 99.py
ls
vim 12.txt
ls
vim
nvim
vim
vim "$HOME\_vimrc"
vim
ls
vim --version
vim $HOME\_vimrc
vim --version
vim $VIM\vimrc
vim $HOME\_exrc
pwd
vim $HOME\_exrc
vim $HOME\_vimrc
vim
vim $HOME\_vimrc
vim
vim $HOME\_vimrc
gvim
cd demo
ls
gvim 99.py
vim $HOME\_vimrc
gvim
vim
vim --version
vim
vi
vim
vim --version
echo $VIM\vimrc
nvim
vim --version
vim "$VIM\vimrc"
vim $HOME\_vimrc
vim "$HOME\vimfiles\vimrc"
vim --version
vim "$HOME\_vimrc"
vim --version
gvim
vim "$HOME\_vimrc"
gvim
vim
hx todo.md
vim
vim --version
vim "$HOME\_vimrc"
ls
vim _vimrc
vim "$HOME\_vimrc"
nvim
hx
gvim
vim "$HOME\_vimrc"
gv
gvim
vim "$HOME\_vimrc"
pwsh -c "`$LV_BRANCH='release-1.3/neovim-0.9'; iwr https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.ps1 -UseBasicParsing | iex"
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
proxy
porxy
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
lvim
 C:\Users\AZK19\.local\bin\lvim.ps1
lvim.ps1
echo . $PROFILE
lvim
nvim
ls
lvim
vim todo.md
lvim todo.md
nvim todo.md
lvim 
code test.py
& D:/Python/Python312/python.exe d:/%First_pro/cs-self-learning/02_cs50x/test.py
code
 & 'd:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.debugpy-2024.1.10471005-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '6147' '--' 'D:\vs code-code\12.py' 
cls
 d:; cd 'd:\vs code-code'; & 'd:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.debugpy-2024.1.10471005-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '6154' '--' 'd:\vs code-code\12.py' 
& D:/Python/Python312/python.exe "d:/vs code-code/12.py"
 & 'd:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.debugpy-2024.1.10471005-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '6162' '--' 'd:\vs code-code\12.py' 
 d:; cd 'd:\vs code-code'; & 'd:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.debugpy-2024.1.10471005-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '6170' '--' 'd:\vs code-code\12.py' 
cls
 & 'd:\Python\Python312\python.exe' 'c:\Users\AZK19\.vscode\extensions\ms-python.debugpy-2024.1.10471005-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '6257' '--' 'D:\Python-projects\pythonProject03-mosh\12.py' 
& D:/Python/Python312/python.exe d:/Python-projects/pythonProject03-mosh/12.py
hx
hx demo
ls
hx
lvim
rm -r ~/.emacs.d/
git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
rm -r ~/.emacs.d/
git clone https://github.com/syl20bnr/spacemacs $HOME/.emacs.d
spacemacs
git clone https://github.com/syl20bnr/spacemacs $env:APPDATA/.emacs.d
emacs
spacemacs
scoop bucket add extras && scoop install lite-xl
python 99.py
scoop uninstall lite-xl
scoop --version
vim
vim 22.py
hx 22.py
nvim 22.py
lvim 22.py
 cd C:/Users/AZK19/OneDrive/桌面/demo
python 99.py`

ipython
cls
git clone https://github.com/AZKvgkv/First_pro.git
ls
ls -a
ls -l
ls --help
ls -help
ls ?
???
git status
git commit
git status
git push
git add turing_python
git status
git commit
git status
code
get-PoshThemes
notepad $profile
ls
touch init.lua
get-PoshThemes
notepad $profile
vim
vim -u NONE
vim
gvim
vim $HOME\_vimrc
vim
vim
vim $HOME\_vimrc
gvim
gvim
vim
vim $HOME\_vimrc
vim $HOME\.viminfo
vim $HOME\_.sn
vim $HOME\_.swn
vim
vim --version
vim
ls
vim
fd demo
fd
gvim
vim
vim --version
vim "$HOME\_vimrc"
vim
gvim
hx
nvim
lvim
gvim
vim
vim "$HOME\_vimrc"
gvim
vim "$HOME\_vimrc"
gvim
vim
vim "$HOME\_vimrc"
vide
vim "$HOME\_vimrc"
gvim
vim "$HOME\_vimrc"
gvim
vim "$HOME\_vimrc"
gvim
vim
vim --version
vim "$HOME\_vimrc"
vim plug.vim
pwd
cd .vimfile
cd vimfile
cd vimfiles
ls
cd autoload
ls
vim plug.vim
vim "$HOME\_vimrc"
vim plug.vim
pwd
cd vimfiles
cd autoload
ls
vim plug.vim
pwd
cd ..
pwd
vim "$HOME\_vimrc"
nvim
vim "$HOME\_vimrc"
vim
ls
vim
vim "$HOME\_vimrc"
ls
vim 99.py
cd my-repo
la
ls
vim
vim turing_python
vim "$HOME\_vimrc"
Invoke-WebRequest https://raw.githubusercontent.com/Shougo/dein-installer.vim/master/installer.ps1 -OutFile installer.ps1
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
./installer.ps1 ~/.cache/dein
vim "$HOME\_vimrc"
fd dein
fd
ls
vim "$HOME\_vimrc"
vim
v --version
git status
git bash
git remote add origin https://github.com/AZKvgkv/Vlang-project.git
git push -u origin main
git push
git add Vlang_project
git status
git commit
git s
git status
git commit Vlang_project
cls
git push -u origin main
echo "# Vlang-project" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZKvgkv/Vlang-project.git
git push -u origin main
vim README.md
git add README.md
git commit -m "添加文件的来源"
git push
git push --set-upstream origin main
git add Vlang_project
git commit -m "官方文档"
git push -u origin main
git add Vlang_basic_project
cd ..
ls
git add Vlang_basic_project
git commit -m "自学文档"
git push -u origin main
get-PoshThemes
notepad $profile
nvim
vim
vim "$HOME\_vimrc"
nvim
fzf.exe --version
telescop
nvim
git clone https://github.com/LintaoAmons/CoolStuffes.git
lvim
nvim
lvim
nvim
hx
lvim
nvim
vim "$HOME\_vimrc"
nvim
go -version
go --version
go version
cls
ls
fd
fd demo 99.py
fd demo
ls 
fd
 cd C:/Users/AZK19/OneDrive/桌面/demo
kate
cls
clear
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=12970' 
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=13227' 
nvim
git init
ls
git add README.md
ls
cls
echo "# Julia first project" >> README.md
git add README.md
git commit -m "julia的自学笔记"
git branch -M main
git remote add origin https://github.com/AZKvgkv/Julia.git
git push -u origin main
ls
ni first
ls
mkdir first
ls
git add  first
git push -u origin main
cls
git init
echo "# Rlang first project test from vscode" >> README.md
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZKvgkv/R.git
git push
git push -u origin main
cls
git add Test-r-first
git commit -m "my first rlang test commit"
git add .vscode
git commit -m "vscode 的配置文件"
git status
git push -u origin main
cla
cls
cd ..
ls
cd a-code-repo
ls
cls
echo "# python now conclude ai and others" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZKvgkv/acode.git
git add MEMS
git commit -m "commit for mems"
git add ACODE
git commit -m "commit for acode"
git add AIPython
git commit -m "commit for ai-python"
git push -u origin main
cls
git status
git push -u origin main
cls
get-PoshThemes
git push -u origin main
cls
get-PoshThemes
notepad $profile
git init
git add MEMS
git commit -m "commit for mems"
git push -u origin main
cls
git branch -M main
git remote add origin https://github.com/AZKvgkv/acode.git
git push -u origin main
git add README.md
git commit -m "my first commit"
git add AIPython
git commit -m "first commit for ai-python"
git push -u origin main
git status
git add ACODE
git commit -m "first commit for acode"
git push -u origin main
cls
git status
git clean -fd
git status
cls
git init
git add ACODE
git commit -m "first commit for acode"
git remote add origin https://github.com/AZKvgkv/acode.git
git push -u origin main
git branch -M main
git push -u origin main
cls
git clone https://github.com/AZKvgkv/acode.git
cls
git clone https://github.com/AZKvgkv/acode.git
csl
echo "# python now conclude ai and others" >> README.md
git push-u
git push
git status
git commit -m "first commit"
cls
git add README.md
git status
git commit -m "first commit"
git push
git add ACODE
git commit -m "first commit for acode"
git push
git status
tree
cls
git push -u origin main
csl
ls
git add ACODE
git commit -m "first commit for acode just mkdir"
git status
git push -u origin main
cls
git status
git clone https://github.com/AZKvgkv/acode.git
ni test.txt
lvim test.txt
git add test.txt
git commit -m "just ni test.txt for test"
git push -u origin main
mkdir code-v
git add code-v
git commit -m "mkdir a folder for ACODE"
git push -u origin main
cls
git status
git add code-v
git commit code-v
git push -u origin main
cls
ls
cd code-v
ls
git add Python_100days
git commit Python_100days
git push -u origin main
cls
git add PYTHON_01
git commit PYTHON_01
git push -u origin main
cls
git add Py-Study
git commit Py-Study
git push -u origin main
cls
git add L_learn
git commit L_learn
git push -u origin main
vim
git add .vscode .idea
git commit .vscode
git commit .idea
git push -u origin main
git status
cls
git push
git st
git status
cls
git push -u origin main
cls
git add .vscode
git commit .vscode
git push -u origin main
mkdir aipython
cd aipython
ls
cd ..
ls
mkdir aipython
git add aipython
git commit aipython
git status
cls
git add aipython\
git commit aipython
git push -u origin main
cls
git add AI-OP-DL
git commit AI-OP-DL
git push -u origin main
cls
git add Python-计算机视觉
git commit Python-计算机视觉
git push -u origin main
vim
nvim
lvim
ls
cd todo
ls
vim todo.md
csl
cls
nvim
v --version
v up
lvim
vim 8.py
python
cls
ipython
lvim
lazygit --version
lazygit
cls
lvim
get-PoshThemes
notepad $profile
cls
get-PoshThemes
notepad $profile
vim
vim "$HOME\_vimrc"
vim
nvim
vim
ls
./install.py --help
./install.py --clangd-completer
python install.py
vim "$HOME\_vimrc"
ls
cd ..
ls
cd .vim
ls
cd plugged
ls
cd YouCompleteMe
ls
vim install.py
vim "$HOME\_vimrc"
git clone https://github.com/syl20bnr/spacemacs $HOME/.emacs.d
rm -r ~/.emacs.d/
cls
git clone https://github.com/syl20bnr/spacemacs $HOME/.emacs.d
rm -r ~/.emacs.d/
git clone https://github.com/syl20bnr/spacemacs $HOME/.emacs.d
emacs --version
emacs
git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
git clone https://github.com/syl20bnr/spacemacs $env:APPDATA/.emacs.d
ls
hx
ls
cd demo
ls
hx demo
hx
hx --health go
hx --health rust
hx --health go
hx --health python
cls
hx
hx --health
hx demo
nvim demo
hx demo
hx
hx mnist.py
hxx
hx
lvim
ls
cd ..
ls
fd python
lvim
ls
lvim demo
lvim
ls
lvim
nvim
lvim
nvim
lvim
nvim
lvim
get-PoshThemes
notepad $profile
lvim
ls
lvim
nvim
lvim
nvim
lvim
cls
lvim
nvim
lvim
get-PoshThemes
notepad $profile
lvim
q
cls
lvim
nvim
vim
hx
fd shada
Invoke-WebRequest https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/uninstall.ps1 -UseBasicParsing | Invoke-Expression
lvim
nvim
pwsh -c "`$LV_BRANCH='release-1.3/neovim-0.9'; iwr https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.ps1 -UseBasicParsing | iex"
lvim
Invoke-WebRequest https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/uninstall.ps1 -UseBasicParsing | Invoke-Expression
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
notepad $profile
lvim
emacs
cls
vim
vim "$HOME\_vimrc"
pwd
vim test.py
rm test.py
vim "$HOME\_vimrc"
gvim
vim
gvim
vim "$HOME\_vimrc"
vim "$HOME\_vimrc"
arc
ls
cd demo
ls
ok
cls
powercfg -s 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c
disM.exe /online /cleanup-image /scanhealth
disM.exe /online /cleanup-image /checkhealth
disM.exe /online /cleanup-image /restorehealth
sfc /scannow
Python
cls
vim "$HOME\_vimrc"
get-PoshThemes
notepad $profile
cls
vim
vim "$HOME\_vimrc"
nvim
lvim
nvim
get-PoshThemes
notepad $profile
ls
cls
Install-Module oh-my-posh -Scope CurrentUser
note
notepad $profile
scoop install https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/oh-my-posh.json
notepad $profile
lvim
nvim
lvim
:wq
nvim
lvim
vim
:q
vim "$HOME\_vimrc"
cls
vim "$HOME\_vimrc"
nvim
yarn --version
npm -v
yarn -v
cls
pwd
ls
cd demo
ls
cd demo
ls
npm create vite@latest
cd vite-project
npm install
npm run dev
lss
ls -l
ls
cd demo
ls
rm vite-project
cls
get-PoshThemes
notepad $profile
cls
ls
pwd
cd ..
ls
rm vite-project
ls
lvim
pwd
;s
ls
cd    OneDrive
ls
cd d:
ls
cd python-projects
ls
lvim pythonproject_01
vim "$HOME\_vimrc"
cls
vim "$HOME\_vimrc"
ls
cd d:\vs code-code\007
cd d:
ls
cd python-projects
ls
vim pythonproject00
vim
vim 99.py
nvim 99.py
lvim 99.py
vim "$HOME\_vimrc"
ls
vim
ls
vim 99.py
vim "$HOME\_vimrc"
vim
cls
nvim
vim
lvim
nvim
python
cls
ipython
ls
cd demo
mkdir 01
ls
cd 01
ni 00.py
code 00.py
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/01/00.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/01/00.py
cls
python
ipython
vim
ls
cls
ipython
git init
echo "# Python程序设计" >> README.md
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZ08867/Python.git
git push -u origin main
cls
git remote add origin https://github.com/AZ08867/Python.git
cls
git init
echo "# Python程序设计" >> README.md
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZ08867/Python.git
git pus
git push
 git push --set-upstream origin main
ni 2.py
git init
ls
nvim config
git init
git config -l
git init
git branch -M main
cls
git init
echo "# Python程序设计" >> README.md
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZ08867/Python.git
git push -u origin main
echo "# Python_project" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZKvgkv/Python_project.git
git push -u origin main
git add README.md
git commit -m "commit about dash-folder"
git push
git add dash
git commit -m "the first dash-folder-01"
git add dashBase
git commit -m "the first dash-folder-02"
git push
git add pythonProject00
git commit -m "base"
git add pythonProject_01
git commit -m "base-pro"
git add pythonProject03-test
git commit -m "base-test"
git push
git push -u origin main
git add pythonProject03-test
git commit -m "base-test"
tree
cls
git add README.md
git commit -m "the two python Projects clarification"
git push -u origin main
git add __pycache__
git commit __pycache__
git commit
git commit -m "the special python Project 的vscode配置文件"
echo "# Python" >> README.md
git init
git add README.md
git commit -m "the first commit"
git branch -M main
git remote add origin https://github.com/AZ08867/Python.git
git push -u origin main
cls
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:AZ08867/Python.git
git push -u origin main
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZ08867/Python.git
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZ08867/Python.git
git push -u origin main
cls
git init
git branch -M main
git remote add origin https://github.com/AZ08867/Py_Project.git
git push -u origin main
echo "# Py_Project" >> README.md
git add README.md
git commit -m "first commit"
git push -u origin main
cls
git pull
ni matchStatement
cls
code
& D:/Python/Python312/python.exe d:/!Workbenches/00/01_Python/python-doc/control-tools/matchStatement.py
cls
get-PoshThemes
notepad $profile
ipython
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/99.py
cls
pip install rich
& D:/Python/Python310/python.exe c:/Users/AZK19/OneDrive/桌面/demo/99.py
pwd
ls
cd oneDrive
cd todo
cd 桌面
cd todo
ls
vim
nvim
bun --version
scoop bucket add versions
scoop install bun-canary
bun --version
bun upgrade
zsh
cls
npm install --global yarn
yarn -v
yarn --version
npm install --global yarn
yarn --version
yarn global add windows-build-tools
npm install --global yarn
yarn global add windows-build-tools
scoop install yarn
yarn --version
npm unstall --global yarn
npm unstall yarn
npm uninstall --global yarn
yarn --version
yarn global add windows-build-tools
yarn
hyper
hyper i hyper-material-theme
scoop install https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/oh-my-posh.json
scoop update oh-my-posh
hyper i hyper-material-theme
get-PoshThemes
notepad $profile
cls
ls
get-PoshThemes
hyper
hyper i hyper-material-theme
notepad $profile
cls
ls
cls
hyper i hyper-material-theme
hyper
cmd
cld
cls
yarn
yarn global add windows-build-tools
yarn global remove  windows-build-tools
cls
npm uninstall yarn
cls
yarn
yarn --version
npm uninstall yarn
yarn
scoop uninstall yarn
npm uninstall --global yarn
yarn
npm uninstall -g yarn
yarn --version
get-PoshThemes
notepad $profile
npm uninstall -g yarn
hyper
npm install --global yarn
yarn --version
hyper
python
ipython
julia
yarn --version
npm i yarn -g
yarn --version
npm uninstall -g yarn
scoop install yarn
yarn install nvs
hyper
hyper i hyper-native
hyper
hyper i hyper-native
hyper i hyper-material-theme
vim
hyper i hyper-night-owl
hyper i hypercwd
hyper i hyper-search
hyper i hyper-pane
hyper i hyper-highlight-active-pane
scoop update oh-my-posh
python
scoop update oh-my-posh
get-poshtheme
pwd
ls
cd pythonproject_01
ls -l
ls
cd azk
ls
cd hm_python
cd part_1
ls
cd 第八章
ls
cd ..
ls
python set.py
py
nvim
ncim
lvim
hx
helix
Move-Item $env:LOCALAPPDATA\nvim $env:LOCALAPPDATA\nvim.bak
Move-Item $env:LOCALAPPDATA\nvim-data $env:LOCALAPPDATA\nvim-data.bak
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\nvim
Remove-Item $env:LOCALAPPDATA\nvim\.git -Recurse -Force
nvim
vim
lvim
nvim
echo $path
echo $PATH
nvim
lvim
nvim
nvim --version
nvim
hx
scoop install helix
hx
vim
gvim
vim
vim "$HOME\_vimrc"
gvim
vim
hx demo
hx todo
scoop bucket add .oki https://github.com/okibcn/Bucket  # Optional: the changes are propagated faster this way
scoop install nano
nano
pwd
nano demo
get
get-poshtheme
Get-poshtheme
cls
Get-PoshThemes
notepad $profile
scoop update oh-my-posh
get-PoshThemes
notepad $profile
get-PoshThemes
notepad $profile
hx
nano
lua --version
lua -v
 & 'c:/Users/AZK19/.vscode/extensions/actboy168.lua-debug-2.0.4-win32-x64/runtime/win32-x64/lua54/lua.exe' '-e' 'dofile[[c:/Users/AZK19/.vscode/extensions/actboy168.lua-debug-2.0.4-win32-x64/script/launch.lua]];DBG[[8948-ansi]]' 'c:\Users\AZK19\OneDrive\桌面\demo\hello.lua' 
 & 'c:/Users/AZK19/.vscode/extensions/actboy168.lua-debug-2.0.4-win32-x64/runtime/win32-x64/lua54/lua.exe' '-e' 'dofile[[c:/Users/AZK19/.vscode/extensions/actboy168.lua-debug-2.0.4-win32-x64/script/launch.lua]];DBG[[19540-ansi]]' 'c:\Users\AZK19\OneDrive\桌面\demo\hello.lua' 
hx
cls
hx
git clone https://github.com/catppuccin/helix.git
hx
git clone https://github.com/catppuccin/sublime-text.git Catppuccin
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
cls
vim "$HOME\_vimrc"
cls
vim "$HOME\_vimrc"
nvim
lvim
nvim
cls
nvim
vim
nvim
vim "$HOME\_vimrc"
printf "\x1b[38;2;255;100;0mTRUECOLOR\x1b[0m\n"
vim "$HOME\_vimrc"
git clone https://github.com/joshdick/onedark.vim.git
vim "$HOME\_vimrc"
vim\
vim "$HOME\_vimrc"
gvim
vim "$HOME\_vimrc"
cls
vim "$HOME\_vimrc"
cls
vim "$HOME\_vimrc"
nvim
vim
get-PoshThemes
notepad $profile
nvim --version
Move-Item $env:LOCALAPPDATA\nvim $env:LOCALAPPDATA\nvim.bak
Move-Item $env:LOCALAPPDATA\nvim-data $env:LOCALAPPDATA\nvim-data.bak
git clone --depth 1 https://github.com/AstroNvim/AstroNvim $env:LOCALAPPDATA\nvim
nvimgit clone --depth 1 https://github.com/AstroNvim/AstroNvim $env:LOCALAPPDATA\nvim
nvim
nvim
notepad $profile
nvim
notepad $profile
nvim
cls
avim
astronvim
Anvim
notepad $profile
lazynvim
lazyvim
nvim
lvim
nvim
git clone https://github.com/AZKvgkv/astronvim_config.git
cls
git clone https://github.com/AZKvgkv/astronvim_config.git
git clone gh repo clone AZKvgkv/astronvim_config
gh repo clone AZKvgkv/astronvim_config
git clone https://github.com/AZKvgkv/astronvim_config.git
get-PoshThemes
notepad $profile
cls
git clone https://github.com/AZKvgkv/astronvim_config.git
cls
nvim
gcc --version
g++ --version
node -v
npm -v
v
cls
git clone https://github.com/AZKvgkv/astronvim_config.git
GET-PoshThemes
NOTEpad $profile
git clone https://github.com/AZKvgkv/astronvim_config.git
nvim
pwd
nvim
lvim
nvim
vim "$HOME\_vimrc"
nvim
lvim
nvim
pip install -U ipykernel
git clone --depth 1 https://github.com/AstroNvim/AstroNvim $env:LOCALAPPDATA\AstroNvim
nvim
git clone --depth 1 https://github.com/AstroNvim/AstroNvim $env:LOCALAPPDATA\AstroNvim
nvim
git clone --depth 1 https://github.com/AstroNvim/AstroNvim $env:LOCALAPPDATA\AstroNvim
nvim
notepad $profile
Astronvim
nvim-astro
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\Lazyvim
notepad $profile
nvim-lazy
git clone https://github.com/NvChad/NvChad $ENV:USERPROFILE\AppData\Local\NvChad --depth 1
nvim-chad
nvim
nvim-chad
notepad $profile
nvim
nvims
fzf
fzf.exe --version
nvims
fzf
scoop install fzf
nvims
notepad $profile
nvims
nvimx
nvims
nvim-chad
nvimx
nvims
cls
nvims
vim
pwd
ls
vim
vim "$HOME\_vimrc"
gvim
get-PoshThemes
notepad $profile
scoop update oh-my-posh
scoop status
get-PoshThemes
notepad $profile
nvims
cls
nvims
vim
nvims
nvim-astro
pwd
fd
pwd
ls
cd OneDrive
ls
cd 桌面
ls
cd demo
tree
cd ..
tree
nvims
python
cls
python312
dart --version
git clone https://github.com/krahets/hello-algo.git
vim
& D:/Python/Python310/python.exe d:/!Workbenches/00/02test-gitee/code/python/01_computational_complexity/iteration.py
cls
pwd
cls
get-PoshThemes
notepad $profile
& D:/Python/Python310/python.exe d:/!Workbenches/00/02test-gitee/code/python/01_computational_complexity/iteration.py
cls
& D:/Python/Python310/python.exe d:/!Workbenches/00/02test-gitee/code/python/01_computational_complexity/iteration.py
vim "$HOME\_vimrc"
vim
vim test.py
vim "$HOME\_vimrc"
vim test.py
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
pwd
vim
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
pwd
cd oneDrive
cd 桌面
cd demo
ls
vim
vim "$HOME\_vimrc"
cd oneDrive
vim
VIM "$HOME\_vimrc"
vim
VIM "$HOME\_vimrc"
nvims
nvim-lazy
python
julia
nvims
nvim-astro
nvim-chad
nvims
nvim-chad
nvims
nvim-chad
git clone https://github.com/NvChad/NvChad $ENV:USERPROFILE\AppData\Local\NvChad --depth 1
nvim-chad
nvim-astro
nvim-chad
git clone https://github.com/NvChad/NvChad $ENV:USERPROFILE\AppData\Local\NvChad --depth 1
nvim-chad
git clone https://github.com/NvChad/NvChad $ENV:USERPROFILE\AppData\Local\NvChad --depth 1
nvims
git clone https://github.com/NvChad/NvChad $ENV:USERPROFILE\AppData\Local\NvChad --depth 1
nvims
vim
cls
ls
cls
nvims
cls
nvim
nvim-lazy
cls
scoop --version
scoop install colortool
scoop --version
cls
scoop install colortool
colortool -s
cls
colortool GitHub Dark.itermcolors
colortool GitHubDark.itermcolors
colortool GitHub Dark
colortool Guezwhoz.itermcolors
colortool Guezwhoz
colortool -s
colortool OneHalfDark
colortool OneHalfDark.itermcolors
colortool Atom.itermcolors
colortool Atom.ini
colortool Atom
cls
scoop uninstall colortool
cls
oh my posh --version
python
oh my posh --version
oh_my_posh --version
scoop update oh-my-posh
get-PoshThemes
notepad $profile
cls
notepad $profile
dir
cls
dir
cls
cd oneDrive
ls
cd vomm
cd 桌面
ls
cd demo
ls
cls
git clone https://github.com/nvim-lua/kickstart.nvim.git $env:USERPROFILE\AppData\Local\Kickstart\
notepad $profile
nvim-kick
nvims
notepad $profile
nvim-kick
nvims
pwd
cls
vim
cls
nvims
nvim-kick
nvims
vim
nvims
cls
ls
pwd
vim
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
vim
nvims
vim
git push -u origin main
git push
dir
v up
cls
v --version
& D:/Python/Python310/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
cls
& D:/Python/Python310/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
D
CLS
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
cls
python 123.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
d
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/123.py
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/456.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/456.py
cls
./ 456.py
python 456.py
cls
python 456.py
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/456.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/456.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/456.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/456.py
cls
python 456.py
cls
python 456.py
python 789.py
cls
python 789.py
cls
python 789.py
python 91.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/92.py
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/92.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/92.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/92.py
julia
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/92.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/90/92.py
cls
mkdir code
cd code
ls
cls
git init 
touch README.md
git add README.md
ni readME.md
git add README.md
git commit -m "first commit"
cls
git add readME.md
git status
git commit -m "first commit"
git remote add origin https://gitee.com/az08867/python_practice.git
git push -u origin "master"
v --version
v
cla
cls
v up
cls
scoop update oh-my-posh
cls
v --version
gleam
gleam -h
gleam.exe -h
gleam
gleam.exe add
gleam.exe
gleam.exe update
mkdir gleam_test
cd gleam_test
ls
cls
gleam.exe 
gleam.exe --help
gleam.exe -V
gleam.exe add
gleam.exe build
gleam.exe new
cls
gleam.exe new 01
gleam.exe new hello
cd hello
gleam test
get-PoshThemes
gleam
notepad $profile
cls
vim "$HOME\_vimrc"
nvims
nvim-lazy
scoop install erlang
erlang --version
scoop install elixir
scoop uninstall elixir
gleam
gleam new hello
cd hello
gleam test
gleam
cls
npm run compile-watch
npm run
npm run hello.gleam
pwd
cd src
ls
npm run hello.gleam
gleam
cd ..
gleam run
cls
pwd
python 99.py
cls
gleam run
cls
gleam run
gleam run fb
cls
gleam run
cls
 & 'D:\Java\jdk-21\bin\java.exe' '--enable-preview' '-XX:+ShowCodeDetailsInExceptionMessages' '-cp' 'C:\Users\AZK19\AppData\Roaming\Code\User\workspaceStorage\a9c864ed3badc80c4eb5c8b095b1990e\redhat.java\jdt_ws\javasepro_299e0014\bin' 'com.itazvgkv.hello.array.define' 
 d:; cd 'd:\IdeaProjects\javasepro'; & 'D:\Java\jdk-21\bin\java.exe' '--enable-preview' '-XX:+ShowCodeDetailsInExceptionMessages' '-cp' 'C:\Users\AZK19\AppData\Roaming\Code\User\workspaceStorage\a9c864ed3badc80c4eb5c8b095b1990e\redhat.java\jdt_ws\javasepro_299e0014\bin' 'com.itazvgkv.hello.array.define' 
cls
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:2446' 
cls
jdk --version
java -version
cls
nvim-lazy
nvims
npm install htmx.org --save
hx --health markdown
hx
scoop install marksman
hx --health markdown
hx todo.md
npm --version
node -v
npm init slidev
 & 'D:\Java\jdk-21\bin\java.exe' '-agentlib:jdwp=transport=dt_socket,server=n,suspend=y,address=localhost:14050' '--enable-preview' '-XX:+ShowCodeDetailsInExceptionMessages' '-cp' 'C:\Users\AZK19\AppData\Roaming\Code\User\workspaceStorage\a9c864ed3badc80c4eb5c8b095b1990e\redhat.java\jdt_ws\javasepro_299e0014\bin' 'com.itazvgkv.hello.method.CasePrime' 
npm run dev
npm install && npm run slidev_test
npm uninstall slidev
npm install slidev
cls
npm
npm init slidev
cd slidev
ls
cls
pwd
cls
yarn
yarn --version
where yarn
which yarn
yarn global bin
yarn add jquery
jquery --version
jquery
cls
cd "d:\IdeaProjects\javasepro\hlao-app\src\com\itazvgkv\hello\method\" ; if ($?) { javac CasePrime.java } ; if ($?) { java CasePrime }
 & 'D:\Java\jdk-21\bin\java.exe' '--enable-preview' '-XX:+ShowCodeDetailsInExceptionMessages' '-cp' 'C:\Users\AZK19\AppData\Roaming\Code\User\workspaceStorage\a9c864ed3badc80c4eb5c8b095b1990e\redhat.java\jdt_ws\javasepro_299e0014\bin' 'com.itazvgkv.hello.method.CasePrime' 
kotlin -version
java -version
cd "d:\IdeaProjects\Others\kotlin_project\demo\src\com\azvgkv\basic\" ; if ($?) { kotlinc base01_practice.kt -include-runtime -d base01_practice.jar } ; if ($?) { java -jar base01_practice.jar }
java -version
kotlin -version
where jdk
cls
kotlin -version
kotlin
cd "d:\IdeaProjects\Others\kotlin_project\demo\src\com\azvgkv\basic\" ; if ($?) { kotlinc base01.kt -include-runtime -d base01.jar } ; if ($?) { java -jar base01.jar }
kotlinc
kotlin -version
kotlinc -version
java -version
kotlin -version
kotlinc -version
kotlin -v
java -version
cd "d:\IdeaProjects\Others\kotlin_project\demo\src\com\azvgkv\basic\" ; if ($?) { kotlinc base01.kt -include-runtime -d base01.jar } ; if ($?) { java -jar base01.jar }
javase
java -version
javac -version
kotlin
kotlinc
javac -version
cd "d:\IdeaProjects\Others\kotlin_project\demo\src\com\azvgkv\basic\" ; if ($?) { kotlinc base01.kt -include-runtime -d base01.jar } ; if ($?) { java -jar base01.jar }
cls
pwd
cd C:\Users\AZK19\OneDrive\桌面
ls
cd C:\Users\AZK19\OneDrive\桌面
ls
re 12.kt hello.kt
cd C:\Users\AZK19\OneDrive\桌面
kotlinc hello.kt -include-runtime -d hello.jar
kotlinc
kotlinc -version
kotlinc
kotlic
kotlin
kotlinc
cls
groovy
kotlinc hello.kt -include-runtime -d hello.jar
java -jar hello.jar
cls
cd "c:\Users\AZK19\OneDrive\桌面\" ; if ($?) { kotlinc hello.kt -include-runtime -d hello.jar } ; if ($?) { java -jar hello.jar }
kotlinc
java -version
kotlinc
cd "d:\IdeaProjects\Others\kotlin_project\demo\src\com\azvgkv\basic\" ; if ($?) { kotlinc base01.kt -include-runtime -d base01.jar } ; if ($?) { java -jar base01.jar }
kotlinc
cls
cd "d:\IdeaProjects\Others\kotlin_project\demo\src\com\azvgkv\basic\" ; if ($?) { kotlinc Collections.kt -include-runtime -d Collections.jar } ; if ($?) { java -jar Collections.jar }
cls
scoop bucket add nerd-fonts && scoop install LXGWWenKaiMono
groovy "d:\IdeaProjects\Others\groovy_project\demo\src\Main.groovy"
code
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.19.8-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-ldgqjhuq.u1t' '--stdout=Microsoft-MIEngine-Out-e5wcdgcu.3dh' '--stderr=Microsoft-MIEngine-Error-wsgkmztc.x10' '--pid=Microsoft-MIEngine-Pid-nflttkri.r5t' '--dbgExe=D:\@more\mingw64\bin\gdb.exe' '--interpreter=mi' 
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.19.8-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-xyhatopw.mqc' '--stdout=Microsoft-MIEngine-Out-qnyjgeyz.3cb' '--stderr=Microsoft-MIEngine-Error-dcinuht2.jcj' '--pid=Microsoft-MIEngine-Pid-0tjcirwo.eig' '--dbgExe=D:\@more\mingw64\bin\gdb.exe' '--interpreter=mi' 
hx
cls
hx
hx --health rust
which lldb-vscode
where lldb-vscode
echo $PATH
where lldb-vscode
rust -analyzer
rust-analyzer
rust-analyzer --version
rustup component add rust-analyzer
rust-analyzer --version
hx --health rust
rust-analyzer --version
rustup update
gleam run
cls
vite 
vite -version
rustup component add rust-analyzer
rust-analyzer --version
scoop update oh-my-posh
bun upgrade
rust-analyzer --version
bun --version
scoop uninstall bun
npm uninstall bun
curl -fsSL https://bun.sh/install | bash
# WARNING: No stability is guaranteed on the experimental Windows builds
scoop bucket add versions
scoop install bun-canary
scoop bucket add versions
scoop bucket rm versions
scoop bucket add versions
scoop install bun-canary
scoop update bun-canary
nvims
nvim-chad
bun --version
bun install vite
bun create vite
cls
pwd
nvim-chad
bun create vite
nvim-chad
lvim
lvim 99.py
nvims
vim "$HOME\_vimrc"
nvims
nvim-lazy
# install via cargo
cargo install ast-grep
cls
pwd
nvim
code
cargo uninstall ast-grep
# install via npm
npm i @ast-grep/cli -g
python -u "d:\!Workbenches\code\315\10.py"
cls
python -u "d:\!Workbenches\code\315\10.py"
& D:/Python/Python312/python.exe d:/!Workbenches/code/315/10.py
cls
cls
python -u "d:\!Workbenches\code\315\10.py"
cls
python -u "d:\!Workbenches\code\315\10.py"
cls
python -u "d:\!Workbenches\code\315\10.py"
& D:/Python/Python312/python.exe d:/!Workbenches/code/315/10.py
nst-grep
sg --help
# install via npm
npm i @ast-grep/cli -g
sg
ast-grep
npm i @ast-grep/cli -g
npm uninstall -g @ast-grep/cli
cargo install ast-grep
pip install ast-grep-cli
PYTHON
pip install latexify-py
ipython
cls
pip install numpy
ipython
cls
python
cls
python
ipython
pip install PyPy
pypy3 -m ensurepip
pypy3 -mpip install numpy
pypy 99.py
pypy3 -mpip install rich
pypy3.exe -m pip install --upgrade pip
cls
pypy 99.py
pypy test.py
vim test.py
pypy test.py
rustc --version
git clone https://github.com/RustPython/RustPython
cd RustPython
cargo run --release demo_closures.py
cls
cargo run --release demo_closures.py
cargo run --release test.py
cargo build --release 09.py
cargo build --release
mkdir rustpython_test
cd rustpython_test
ls
cls
python3 --version
python --version
PYTHon --version
python
cls
cd demo
ls
pypy test.py
pypy
pypy3
pypy3 -mpip install pip
pypy3 test.py
cargo run --release
 rustpython
python
cls
pip install numba
pypy3 -mpip install pip
python
hx
hx test.py
pypy3
pypy test.py
pypy3 test.py
cls
hx test.py
python --version
ni script.py
hx script.py
python script.py
pypy script.py
lvim
python -u "c:\Users\AZK19\OneDrive\桌面\demo\script.py"
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/script.py
pypy script.py
cls
pwd
cd C:\Users\AZK19\OneDrive\桌面\demo
pypy script.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/script.py
python -u "c:\Users\AZK19\OneDrive\桌面\demo\script.py"
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/script.py
lua "c:\Users\AZK19\OneDrive\桌面\demo\hello.lua"
python -u "c:\Users\AZK19\OneDrive\桌面\demo\test.py"
python
pip install numba
 python.exe -m pip install --upgrade pip
pip install wasmer
cargo add wasmer
scoop install wasmer
wasmer run cowsay "hello world"
git remote add origin https://github.com/AZKvgkv/gleam-repo.git
git branch -M main
git push -u origin main
git push
git push --set-upstream origin main
git push -u origin main
git remote add origin https://github.com/AZKvgkv/gleam-repo.git
git branch -M main
git init
git branch -M main
git remote add origin https://github.com/AZKvgkv/gleam-repo.git
git push -u origin main
pwd
cd gleam_project
;s
ls
cls
ls
gleam run
gleam run hello.gleam
gleam
cls
gleam new hello
cd hello
gleam
gleam test
gleam run
gleam update
gleam -h
gleam -v
gleam.exe --v
cls
gleam run hello.gleam
cd ..
gleam run hello.gleam\
gleam run hello.gleam
pwd
ls
gleam run 0.gleam
hx
python -u "d:\!Workbenches\00\02test-gitee\code\python\01_computational_complexity\time_complexity.py"
lvim
nvims
python -u "d:\!Workbenches\00\02test-gitee\code\python\01_computational_complexity\time_complexity.py"
nvim-astro
cls
python -u "d:\!Workbenches\00\02test-gitee\code\python\01_computational_complexity\time_complexity.py"
python -u "c:\Users\AZK19\OneDrive\桌面\0.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\0.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\0.py"
python test.py
pypy test.py
python test.py
pypy test.py
python --version
pypy3 test.py
python --version
python test.py
cls
pypy3 -mpip install pip
pypy3
cd C:\Users\AZK19\OneDrive\桌面\demo
pypy test.py
lvim
python -u "d:\!Workbenches\00\02test-gitee\code\python\01_computational_complexity\worst_best_time_complexity.py"
& D:/Python/Python312/python.exe d:/!Workbenches/00/02test-gitee/code/python/01_computational_complexity/worst_best_time_complexity.py
python -u "d:\!Workbenches\00\02test-gitee\code\python\01_computational_complexity\worst_best_time_complexity.py"
git status
git push
git pull
git push
nano 
nvims
code
vim
& D:/Python/Python312/python.exe d:/!Workbenches/00/02test-gitee/code/python/01_computational_complexity/space_complexity.py
pip install modules
cls
rustup update
rustup -version
rustup --version
cls
rustc --version
go run "d:\~代码区\Go_project\hello\main.go"
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:1795' 
zig run "d:\CLionProjects\Zig_project\main.zig"
echo "# rust-project" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZKvgkv/rust-project.git
git push -u origin main
cls
git push -u origin main
git push
git clone https://github.com/AZKvgkv/rust-project.git
git push
git add RustRover
git commit -m "mkdir a project"
git push
git clone https://github.com/AZKvgkv/rust-project.git
git add array
ls
git push
git clone https://github.com/AZKvgkv/rust-project.git
git push
lazygit
echo "# go-project" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZKvgkv/go-project.git
git push -u origin main
cargo install cargo-edit
cls
pwd
rustup -show
rustup show
git clone https://gitlab.com/azk2/First-repo-lab.git
pwd
mkdir ch01
ls
cls
cd ch01
ls
cargo new ch1_variables
cargo new ch2_const_static
cargo new ch3_simple_type
cargo new ch4_tuple_array
cls
cd "d:\%First_pro\rust-project\First-repo-lab\ch01\ch1_variables\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
cargo run
cls
pwd
cls
npm update -g npm
npm fund
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:10361' 
 D:; cd 'D:\~代码区\Go_project\hello'; ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:10364' 
go run golang.org/x/telemetry/cmd/gotelemetry@latest on
cls
go run golang.org/x/telemetry/cmd/gotelemetry@latest on
go run golang.org/x/telemetry/cmd/gotelemetry@latest view
cls
pwd
ls
cls
go run "d:\~代码区\Go_project\hello\main.go"
cd hello
go run main.go
go run "d:\~代码区\Go_project\hello\main.go"
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:12986' 
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:12997' 
 D:; cd 'D:\~代码区\Go_project\hello'; ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:13012' 
cls
pip
pip  --proxy
pip --proxy
py -3.13
vim
bython 1.py
pip install bython
bython 1.py
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/1.py
ls
cd OneDrive
cd 桌面
ls
bython 1.py
cls
pip uninstall bython
cls
pip3 uninstall bython
pip3 install bython
bython -h
pip3 uninstall bython
ni 6.by
pip3 install bython
bython 6.by
pip3 uninstall bython
pip3 install bython
python
bython 666.by
cls
pip3 uninstall bython
vim "$HOME\_vimrc"
python
vim "$HOME\_vimrc"
pwd
vim test.py
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
vim
vim "$HOME\_vimrc"
cls
pwd
ls
cls
go init hello
go help
cls
go build hello
cls
go init
cls
ls
mkdir ch01
cd ch01
ls
go mod init hello
cls
cd ..
ls
rm ch01
ls
cls
mkdir ch01_hello
cd ch01_hello
go mod init ch01_hello
go build
cls
go init
go init ch01_hello
cls
go
cls
ls
cls
mkdir ch01_hello
cd ch01_hello
go mod init ch01_hello
ls
ni main.go
go fmt main.go
pwd
cls
go build
./ ch01_hello
cls
go run "d:\%pro_git\Go-repo\Go_project\ch01_hello\main.go"
go init
go help
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:13054' 
go fmt
cls
git push
ls
mkdir ch02
ls
mkdir ch1_ownership_introduce
cls
cargo new ch1_ownership_introduce
cls
cargo run
ls
cd ch1_ownership_introduce
ls
cls
cargo run
cls
ls
cd ch01_hello
cls
ls
go fmt
go run main.go
go run "d:\%pro_git\Go-repo\Go_project\ch01_hello\main.go"
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:4242' 
cls
go run "d:\%pro_git\Go-repo\Go_project\ch01_hello\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\ch01_hello\main.go"
cls
cd ..
ls
cd ch02
ls
cls
ls
cargo new ch2_string_str
get-PoshThemes
notepad $profile
cls
p
cls
notepad $profile
scoop update oh-my-posh
Get-Module -Name PSReadLine -ListAvailable
notepad $profile
p
python
cls
cls
cd "d:\%First_pro\rust-project\First-repo-lab\ch02\ch2_string_str\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
cls
pwd
vim
lvim
hx
get-poshThemes
notepad $profile
cls
ls
csl
get-poshThemes
notepad $profile
ls
cd .\demo\
ls
vim 99.py
nvim
cls
groovy
jupyter notebook --version
jupyter notebook
pip install jupyter-collaboration
jupyter notebook
jupyter notebook --version
cls
nano 99.py
dart --version
python 99.py
cls
code
python -u "d:\!Workbenches\ANNProject\test.py"
cls
python -u "d:\!Workbenches\ANNProject\test.py"
cls
vim
python -u "d:\!Workbenches\ANNProject\test.py"
cls
python -u "d:\!Workbenches\ANNProject\test.py"
cls
hx test.py
nvims
lvim
python -u "d:\!Workbenches\ANNProject\test.py"
cls
python -u "d:\!Workbenches\ANNProject\test.py"
python -u "d:\!Workbenches\ANNProject\test copy.py"
cls
python -u "d:\!Workbenches\ANNProject\test copy.py"
python -u "d:\!Workbenches\ANNProject\test.py"
cls
python -u "d:\!Workbenches\ANNProject\555.py"
& D:/Python/Python312/python.exe c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\printEnvVariablesToFile.py c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\deactivate\powershell\envVars.txt
python -u "d:\!Workbenches\ANNProject\323.py"
cls
python -u "d:\!Workbenches\ANNProject\323_basic.py"
python -u "d:\!Workbenches\ANNProject\323.py"
python -u "d:\!Workbenches\ANNProject\323_k.py"
python -u "d:\!Workbenches\ANNProject\323_basic.py"
cls
python -u "d:\!Workbenches\ANNProject\323.py"
python -u "d:\!Workbenches\ANNProject\323_basic.py"
python -u "d:\!Workbenches\ANNProject\test copy.py"
cat
cls
cd ..
ls
cargo new ch3_enum
get-poshThemes
notepad $profile
cls
ls
cd ..
ls
cls
ls
cls
ls
cargo new ch4_struct
d --version
& D:/Python/Python312/python.exe c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\printEnvVariablesToFile.py c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\deactivate\powershell\envVars.txt
python -u "d:\!Workbenches\ANNProject\test copy.py"
python -u "d:\!Workbenches\ANNProject\3.17BP.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17BP.py"
python -u "d:\!Workbenches\ANNProject\3.17BP copy.py"
python -u "d:\!Workbenches\ANNProject\323_basic.py"
python -u "d:\!Workbenches\ANNProject\3.17BP copy.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17BP copy.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17BP copy.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17BP copy.py"
python -u "d:\!Workbenches\ANNProject\test.py"
python -u "d:\!Workbenches\ANNProject\test copy.py"
python -u "d:\!Workbenches\ANNProject\3.17bp_test.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17BP copy.py"
cls
& D:/Python/Python312/python.exe c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\printEnvVariablesToFile.py c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\deactivate\powershell\envVars.txt
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
get-poshThemes
notepad $profile
& D:/Python/Python312/python.exe c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\printEnvVariablesToFile.py c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\deactivate\powershell\envVars.txt
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323_basic.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323_k.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323.py"
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323_basic.py"
cls
& D:/Python/Python312/python.exe c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\printEnvVariablesToFile.py c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\deactivate\powershell\envVars.txt
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323_basic.py"
mingw
cmake --version
g++ --version
gcc --version
cd "c:\Users\AZK19\OneDrive\桌面\demo\cmake-test\include\" ; if ($?) { g++ hello.h -o hello } ; if ($?) { .\hello }
zig run "d:\CLionProjects\Zig_project\learning_basic\premiumType.zig"
cd "d:\~代码区\~Rust_vscode\hello_world\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
cargo run --release
cls
cargo run
cargo run --release
g++ --version
cargo install cargo-generate
pip install pre-commit
cargo install --locked cargo-deny
pre-commit install
cargo install typos-cli
cargo install git-cliff
cargo install cargo-nextest --locked
python -m pip install 'python-lsp-server[all]'
python -m pip install git+https://github.com/tomv564/pyls-mypy.git
scoop update oh-my-posh
scoop install https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/oh-my-posh.json
scoop update oh-my-posh
scoop status
$env:Path += ";C:\Users\user\AppData\Local\Programs\oh-my-posh\bin"
notepad $profile
scoop uninstall oh-my-posh
scoop install https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/oh-my-posh.json
(Get-Command oh-my-posh).Source
get-poshThemes
notepad $profile
get-poshThemes
cd "d:\~代码区\~Rust_vscode\hello_world\src\"
ls
get-poshThemes
notepad $profile
get-poshThemes
notepad $profile
ls
hx
vim
nvim-astro
nvims
lazyvim
notepad $profile
nvim
lvim
hx
vm
vim
nvim
nvima
nvims
nvim
scoop bucket add main
scoop install neovim
nvim
nvims
lvim
nvims
nvim
nvims
notepad $profile
lvim
Invoke-WebRequest https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/uninstall.ps1 -UseBasicParsing | Invoke-Expression
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
lvim
scoop uninstall neovim
nvim
nvims
lvim
nvim-astro
nvims
nvim-lazy
nvim
nvims
lvim
vim
nvim
vim
nvim
git clone https://gitee.com/houdunwang/nvim.git
nvim
iwr -useb https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim |``
    ni "$(@($env:XDG_DATA_HOME, $env:LOCALAPPDATA)[$null -eq $env:XDG_DATA_HOME])/nvim-data/site/autoload/plug.vim" -Force
nvim
python -m pip install pynvim
pip3 install --user --upgrade neovim
pip3 install ranger-fm
nvim
cls
nvims
npm i intelephense -g
vim
cd ~/.vim/plugged/bracey.vim
cls
npm uninstall intelephense -g
nvim
vim
nvim
cd ~/Appdata
ls
cd local
ls
cd nvim
ls
vim init.vim
nvim
cd ~/Appdata
cd local
cd nvim
ls
nvim init.lvim
nvim init.vim
pwd
ls -l
tree
ls -LiteralPath
cls
notepad $profile
ls -l
Get-ChildItem | Format-Table Mode, LastWriteTime, Length, Name -AutoSize
ls -l
cls
Get-ChildItem | Format-Table Mode, LastWriteTime, Length, Name -AutoSize
ls
cls
cd hello
ls
ni hello.go
cls
dlv version
cls
cd ..
ni readME.md
ls
cd hello
ls
cls
go fmt
ls
cd hello
go run hello.go
cls
vim
node "d:\!Workbenches\Pythagora\gpt-pilot\workspace\First-agora-project_\models\User.js"
ls
cd ch02
cls
ls
cargo new ch5_ownership_struct
cls
ls
cd ch02
ls
cd ch5
cd ch5_ownership_struct
ls
cls
cargo check
cls
ls
cargo new ch6_box
cargo new ch6_copy_move
cd ..
ls
mkdir ch03
ls
cargo new ch1_if_match
git push
git status
git commit -m "first commit"
git push -u origin main
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323_basic.py"
& D:/Python/Python312/python.exe c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\printEnvVariablesToFile.py c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\deactivate\powershell\envVars.txt
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323.py"
python -u "d:\!Workbenches\ANNProject\323ml.py"
cls
& D:/anaconda3/python.exe d:/!Workbenches/ANNProject/323ml.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/323ml.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/323.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/323ml.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/323.py
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/323.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/323sample.py
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323sample.py"
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/0.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/323sample.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/0.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/323_basic.py
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/1.py
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/1.py
get-poshThemes
notepad $profile
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/1.py
get-poshThemes
notepad $profile
cd ..
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/wen.py
get-poshThemes
notepad $profile
ni test.m
nvim test.m
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/323gc.py
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323gc.py"
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/323gc.py
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/323gc.py
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/1.py
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/1.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/2.py
& D:/Python/Python312/python.exe c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\printEnvVariablesToFile.py c:\Users\AZK19\.vscode\extensions\ms-python.python-2024.2.1\pythonFiles\deactivate\powershell\envVars.txt
& D:/anaconda3/python.exe d:/!Workbenches/ANNProject/BP_anticipate/2.py
cls
cd "d:\!Workbenches\ANNProject\" ; if ($?) { gcc -framework Cocoa 90.m -o 90 } ; if ($?) { .\90 }
& D:/anaconda3/python.exe d:/!Workbenches/ANNProject/BP_anticipate/2.py
& D:/anaconda3/python.exe d:/!Workbenches/ANNProject/2.py
cls
& D:/anaconda3/python.exe d:/!Workbenches/ANNProject/BP_anticipate/2_pro.py
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/2_pro.py
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/2_pro.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/2.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/2_pro.py
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\tempCodeRunnerFile.py"
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323gc.py"
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro_plus.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\tempCodeRunnerFile.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro_plus.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\tempCodeRunnerFile.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro_plus.py"
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro_plus.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro copy.py"
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/2_pro.py
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro copy.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323_basic.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\1.py"
python -u "d:\!Workbenches\ANNProject\2&232.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323_basic.py"
nvim 1.py
vim 1.py
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
python -u "c:\Users\AZK19\OneDrive\桌面\666.py"
cls
cargo new 555
cargo new test
cls
cargo new ann
cd ann
cls
ls
cd ..
rm ann
mkdir 000
cd 000
ls
go init
go mod init
go mod init main
ni main.go
cls
go run "c:\Users\AZK19\OneDrive\桌面\demo\000\main.go"
cls
go get github.com/ahmetb/go-linq/v3
go install github.com/ahmetb/go-linq/v3
go install github.com/ahmetb/go-linq/v3@latest
cls
get-poshThemes
notepad $profile
cls
ls
cd ch03
cls
ls
cargo new ch2_loop_iter
Get-ChildItem env: | Out-File "C:\Users\AZK19\AppData\Local\Temp\tmp-23624C9gIvgXK7Jen.txt"
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=3019' 
cls
ls
cargo run --release
cls
cargo run --release
ls
cargo run --release
cls
cargo run --release
cls
python -u "C:\Users\AZK19\AppData\Local\Temp\tempCodeRunnerFile.python"
cls
python -u "C:\Users\AZK19\AppData\Local\Temp\tempCodeRunnerFile.python"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\ai.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\ai.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\ai.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
Install-Module -Name Terminal-Icons -Repository PSGallery
python -u "c:\Users\AZK19\OneDrive\桌面\ceui.py"
python -u "c:\Users\AZK19\OneDrive\桌面\ceui.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\ceui.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\ceui.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\ceui.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\2_sig_tanh_9.py"
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
python -u "c:\Users\AZK19\OneDrive\桌面\2_sig_tanh_9.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
python -u "c:\Users\AZK19\OneDrive\桌面\2_sig_tanh_9.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\2_sig_tanh_9.py"
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/1.py
python -u "c:\Users\AZK19\OneDrive\桌面\2_sig_tanh_9.py"
pwd
cls
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
cls
scoop install starship
scoop install clink
nvim startship.lua
cmd
starship
notepad $profile
clink autorun install
clink autorun --help
clink
scoop install clink
scoop update clink
scoop uninstall clink
clink
clink autorun --help
clink
cd ~
pwd
nvim startship.toml
pwd
nvim
ni 1.go
ni 2.rs
ni 3.java
ni 4.cs
ni 4.c
ni 6.cpp
ni 7.v
ni 8.zig
cls
ls
pwd
cls
cd oneDrive
cd desktop
cd 桌面
cls
ls
cd demo
ls
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
python -u "c:\Users\AZK19\OneDrive\桌面\2_sig_tanh_9.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\323_basic.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\2_pro.py"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\1.py"
cls
python -u "d:\!Workbenches\ANNProject\BP_anticipate\1.py"
cls
git status
git push
git commit -m "first commit"
git remote add origin https://gitlab.com/azk2/rust-repo.git
git branch -M main
git push -uf origin main
cls
git push -uf origin main
git clone https://gitlab.com/yzzy/rust_project.git
cls
cargo new ch3_fn
cls
pwd
cls
ls
cd ..
cls
ls
cargo new ch4_fn_move_borrow_mut
cargo new ch5_fn_back
cargo new ch6_higher_func
cls
jkj
pwd
hx
pwd
cd .\OneDrive\
cd 桌面
cls
hx
hx --health rust
cls
hx --health python
vim 
hx --health python
hx
pwd
cd 桌面
cd .\OneDrive\
cd 桌面
cls
ls
cd demo
ls
cls
python 99.py
nvim
:q
c;s
cls
hx
nvim
ls
cls
cargo new ch1_error
cargo new ch2_questio_unwrap
cargo new ch3_custom_err
cd "d:\%First_pro\first-repo-lab\ch04\ch1_error\src\" ; if ($?) { rustc tempCodeRunnerFile.rs } ; if ($?) { .\tempCodeRunnerFile }
cls
py -m pip install jupyter matplotlib plotly
scoop update oh-my-posh
cls
pip install plotly
cd d:
cls
ls
cd !Workbenches
ls
quarto render hello.qmd
python
cls
nvims
nvim-kick
lvim
nvims
:q
cls
nvim
nvims
:q
cls
nvim
:q
cls
nvims
vim
python
py 313
pip install ultimate-notion
cls
python
hx
nvims
cls
nvims
cargo run --release
ls
nvims
pip install debugpy
hx
pip install debugpy
lvim -health python
lvim
cls
ls
cls
cargo run --release
cls
cargo run --release
cls
cd "d:\%First_pro\first-repo-lab\ch04\ch3_custom_err\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
cls
cd "d:\%First_pro\first-repo-lab\ch04\ch3_custom_err\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
hx
scoop update oh-my-posh
ls
mkdir ch05
ls
cargo new ch1_borrow_check
cd "d:\%First_pro\first-repo-lab\ch05\ch1_borrow_check\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
cls
scoop bucket add extras
scoop install wezterm
scoop bucket add extras
scoop install wezterm
cls
scoop uninstall wezterm
git clone https://github.com/QianSong1/wezterm-config.git
cls
ls
vim
cls
cd d:
ls
pwd
cls
cd .\OneDrive\
cd vomm
cd 桌面
ls
cls
cd ..
cd c:\Users\AZK19\OneDrive\桌面\demo\
ls
cd demo
nvim 99.py
cls
python 99.py
C:\Users\AZK19\OneDrive\桌面\rust_project
cd c:\Users\AZK19\OneDrive\桌面\demo\
cls
cd C:\Users\AZK19\OneDrive\桌面\rust_project
ls
cd ch02
cd cd2
cd ch2
ls
cd ch1_variables
ls
cd src
ls
vim main.rs
ls
cargo run --release
cls
git clone https://github.com/s632533290/xhs.git
echo file.go
cls
pwd
cls
hx
cls
ls
cd Zig_project
ls
hx --health zig
where lldb-vscode
lldb-vscode --version
lldb --version
hx --health zig
hx --health rust
codelldb --version
hx --health rust
llvm --version
LLVM --version
LLDB --version
llvm-config --version
lldb-vscode --version
hx --health rust
hx --health zig
lldb-vscode
lldb-vscode --version
cls
lldb-vscode --version
hx --health zig
fzf
nvims
cls
vim
nvim
cls
nvim-kick
nvim-lazy
nvims
cls
vim
nvim
cls
nvims
cls
nvims
cls
nvims
cls
vim
vim "$HOME\_vimrc"
nvim
mkdir uiua_test
cd uiua_test
cls
uiua init
nvim main.ua
uiua run
cls
quarto preview c:/Users/AZK19/OneDrive/桌面/demo/walkthrough.qmd --no-browser --no-watch-inputs
pwd
cls
cargo new ch2_func
nvim-astro
cla
cls
nvims
cls
nvims
lvim
ls
uiua run
vim main.ua
uiua run
cls
uiua run
cls
uiua
uiua help
uiua lsp
vim
ls
cd ..
ls
cargo new ch3_struct
vim "$HOME\_vimrc"
vim
uiua run
uiua fmt
uiua run
cls
uiua run
cls
lobster
ls
cd lobster_test
ls
cls
ls
lobster run
lobster run hello
lobster hello.lobster
cls
vim "$HOME\_vimrc"
\vim "$HOME\_vimrc"
vim "$HOME\_vimrc"
cls
vim "$HOME\_vimrc"
cls
mkdir ch06
vim
nvim
cd "d:\%First_pro\first-repo-lab\ch06\ch1_generic_struct\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
cls
ls
cd ..
ls
cd ..
ls
cd ch2_func
ls
cd src
cls
cargo run --release
cls
pip install open-interpreter
interpreter
pip uninstall open-interpreter
cls
ls
cls
notepad $profile
cls
python
cls
notepad $profile
python -u "d:\!Workbenches\ANNProject\3.18\demo1.py"
cls
julia "d:\!Workbenches\ANNProject\3.18\demo.jl"
cls
julia
julia "d:\!Workbenches\ANNProject\3.18\demo.jl"
julia
julia "d:\%pro_git\Julia-repo\first\Julia_project\Julia-learn\cal.jl"
python -u "d:\!Workbenches\ANNProject\3.18\demo1.py"
julia "d:\!Workbenches\ANNProject\hello.jl"
python -u "d:\!Workbenches\ANNProject\3.18\demo1.py"
julia "d:\!Workbenches\ANNProject\hello.jl"
cls
julia
julia "d:\!Workbenches\ANNProject\hello.jl"
python -u "d:\!Workbenches\ANNProject\3.18\demo1.py"
python -u "d:\!Workbenches\ANNProject\3.18\demo.py"
julia "d:\!Workbenches\ANNProject\3.18\hello.jl"
python -u "d:\!Workbenches\ANNProject\3.18\demo2.py"
cls
python -u "d:\!Workbenches\ANNProject\3.18\demo2.py"
cls
cd .\OneDrive\
cd 桌面
ls
cd demo
ls
python 99.py
cls
vim
git clone https://github.com/Shaobin-Jiang/IceNvim "$env:LOCALAPPDATA\IceNvim"
code $profile
nvim-ice
nvim
nvims
nvim
git clone https://github.com/Shaobin-Jiang/IceNvim "$env:LOCALAPPDATA\nvim"
nvim
nvims
nvim
nvims
cls
hx
:q
cls
scoop bucket add extras
scoop install vscodium
cls
& D:/Python/Python313/python.exe c:/Users/AZK19/OneDrive/桌面/demo/99.py
cls
& D:/anaconda3/python.exe c:/Users/AZK19/OneDrive/桌面/demo/99.py
cls
julia "d:\%pro_git\Julia-repo\first\Julia_project\Julia-learn\cal.jl"
julia
notepad
notepad $profile
zig run "d:\CLionProjects\Zig_project\codeTest\src\main.zig"
zig run "d:\CLionProjects\Zig_project\main.zig"
cls
zig run "d:\CLionProjects\Zig_project\main.zig"
v run "d:\%pro_git\v-lang-project\Vlang_project\part01\example_array.v"
cls
gleam run 
gleam run hello.gleam
gleam
gleam update
cls
gleam update
zig run "d:\CLionProjects\Zig_project\study01.zig"
zig run "d:\CLionProjects\Zig_project\main.zig"
julia "d:\!Workbenches\ANNProject\3.18\hello.jl"
cls
onyx
onyx version
cls
onyx
onyx new hello
onyx new
onyx init hello
cls
onyx
cls
onyx run
onyx run hello
cls
mkdir my-onyx-project
cd my-onyx-project
cls
onyx package init
onyx run main.onyx
cls
\onyx run main.onyx
onyx run main.onyx
cls
 ${env:NODE_OPTIONS}=' --require d:/%Applications/Scoop/apps/vscodium/1.87.2.24072/resources/app/extensions/ms-vscode.js-debug/src/bootloader.js  --inspect-publish-uid=http'; ${env:VSCODE_INSPECTOR_OPTIONS}=':::{"inspectorIpc":"\\\\.\\pipe\\node-cdp.15116-c192231b-1.sock","deferredMode":false,"waitForDebugger":"","execPath":"D:\\nodejs\\node.exe","onlyEntrypoint":false,"autoAttachMode":"always","fileCallback":"C:\\Users\\AZK19\\AppData\\Local\\Temp\\node-debug-callback-5f53d42e17317aa8"}'; & 'D:\!Workbenches\20\dist\onyx.exe' 'run' 'C:\Users\AZK19\OneDrive\桌面\demo\onyx_project\my-onyx-project\main.onyx/.onyx' 
 ${env:NODE_OPTIONS}=' --require d:/%Applications/Scoop/apps/vscodium/1.87.2.24072/resources/app/extensions/ms-vscode.js-debug/src/bootloader.js  --inspect-publish-uid=http'; ${env:VSCODE_INSPECTOR_OPTIONS}=':::{"inspectorIpc":"\\\\.\\pipe\\node-cdp.15116-7e7ed86c-3.sock","deferredMode":false,"waitForDebugger":"","execPath":"D:\\nodejs\\node.exe","onlyEntrypoint":false,"autoAttachMode":"always","fileCallback":"C:\\Users\\AZK19\\AppData\\Local\\Temp\\node-debug-callback-a0d1cb3ec5c6bd1c"}'; & 'D:\!Workbenches\20\dist\onyx.exe' 'run' 'C:\Users\AZK19\OneDrive\桌面\demo\onyx_project\my-onyx-project\main.onyx' 
 ${env:NODE_OPTIONS}=' --require d:/%Applications/Scoop/apps/vscodium/1.87.2.24072/resources/app/extensions/ms-vscode.js-debug/src/bootloader.js  --inspect-publish-uid=http'; ${env:VSCODE_INSPECTOR_OPTIONS}=':::{"inspectorIpc":"\\\\.\\pipe\\node-cdp.15116-460cdb02-5.sock","deferredMode":false,"waitForDebugger":"","execPath":"D:\\nodejs\\node.exe","onlyEntrypoint":false,"autoAttachMode":"always","fileCallback":"C:\\Users\\AZK19\\AppData\\Local\\Temp\\node-debug-callback-dfa153a5f8d301e6"}'; & 'D:\!Workbenches\20\dist\onyx.exe' 'run' 'C:\Users\AZK19\OneDrive\桌面\demo\onyx_project\my-onyx-project\main.onyx' 
 ${env:NODE_OPTIONS}=' --require d:/%Applications/Scoop/apps/vscodium/1.87.2.24072/resources/app/extensions/ms-vscode.js-debug/src/bootloader.js  --inspect-publish-uid=http'; ${env:VSCODE_INSPECTOR_OPTIONS}=':::{"inspectorIpc":"\\\\.\\pipe\\node-cdp.15116-7e311896-7.sock","deferredMode":false,"waitForDebugger":"","execPath":"D:\\nodejs\\node.exe","onlyEntrypoint":false,"autoAttachMode":"always","fileCallback":"C:\\Users\\AZK19\\AppData\\Local\\Temp\\node-debug-callback-d4e4ae43ca72ca85"}'; & 'D:\!Workbenches\20\dist\onyx.exe' 'run' 'C:\Users\AZK19\OneDrive\桌面\demo\onyx_project\my-onyx-project\main.onyx' 
 ${env:NODE_OPTIONS}=' --require d:/%Applications/Scoop/apps/vscodium/1.87.2.24072/resources/app/extensions/ms-vscode.js-debug/src/bootloader.js  --inspect-publish-uid=http'; ${env:VSCODE_INSPECTOR_OPTIONS}=':::{"inspectorIpc":"\\\\.\\pipe\\node-cdp.11676-8711a7f2-1.sock","deferredMode":false,"waitForDebugger":"","execPath":"D:\\nodejs\\node.exe","onlyEntrypoint":false,"autoAttachMode":"always","fileCallback":"C:\\Users\\AZK19\\AppData\\Local\\Temp\\node-debug-callback-70299136cb4db2fb"}'; & 'D:\!Workbenches\20\dist\onyx.exe' 'run' 'C:\Users\AZK19\OneDrive\桌面\demo\onyx_project\.vscode\launch.json' 
onyx run 1.onyx
onyx run 1
onyx -V
onyx version
cls
mkdir aoc-2024
cd aoc-2024
ls
cls
onyx package init
cls
onyx run day0
cls
cd solution
cd solutions
cls
onyx run day0
cls
onyx package sync
onyx package build
cls
$ onyx package sync
$ onyx package build
onyx package sync
cls
onyx lsp init
onyx package sync
cls
cls
onyx run day0
cls
onyx run day0
cls
onyx run day0
cd solutions
cls
onyx run day0
cls
onyx run day0
cls
onyx run day0
cls
onyx run day0
cls
v-analyzer
v run d:\%pro_git\v-lang-project\Vlang_project\part01\example_array.v
cls
cd "c:\Users\AZK19\OneDrive\桌面\rust_project\ch2\ch1_variables\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
go run "d:\%pro_git\Go-repo\src_go_basic\hello\hello.go"
go run "d:\%pro_git\Go-repo\src_go_basic\hello\tempCodeRunnerFile.go"
go run "d:\%pro_git\Go-repo\src_go_basic\hello\hello.go"
cls
Rscript "d:\%pro_git\R-repo\Test-r-first\999.r"
cls
pip install scikit-learn
cls
fzf
cls
cd d:
fzf
python -u "d:\!Workbenches\ANNProject\3.18\demo1.py"
cls
& D:/Python/Python313/python.exe d:/!Workbenches/ANNProject/3.17_BP_categorize/tt.py
cls
& D:/anaconda3/python.exe d:/!Workbenches/ANNProject/3.17_BP_categorize/tt.py
& D:/anaconda3/python.exe d:/!Workbenches/ANNProject/3.17_BP_categorize/st.py
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/3.17_BP_categorize/st.py
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/3.17_BP_categorize/st.py
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
cls
onyx run day0
cls
ls
cd solutions
cls
onyx run day0
cls
mkdir ch07
cargo new ch1_trait
cd ch1_trait
ls
ni .gitignore
code .gitignore
cls
nvims-ice
nvims
cls
cd "d:\%First_pro\first-repo-lab\ch07\ch1_trait\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
ls
code
cls
cargo run --release
ls
cd ch1_trait
cargo run --release
cls
cargo run --release
cls
ni test_main.zig
cls
ls
cd Text
cd test
ls
ni Makefile
cls
make
cls
make
cls
ls
cls
ls
mkdir Test
cls
zig run "d:\CLionProjects\Zig_project\Test\main.zig"
cls
zig
cd Test
ls
cls
ls
zig init-exe
ls
zig build run
zig build test
zig run main.zig
 & 'd:\%Applications\Scoop\apps\vscodium\1.87.2.24072\data\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=11820' 
zig
zig -V
cls
zig
zig init-exe
zig build run
zig build test
cls
 & 'd:\%Applications\Scoop\apps\vscodium\1.87.2.24072\data\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=12145' 
zig run "d:\CLionProjects\Zig_project\Halo\src\main.zig"
zig run test
zig build test
 & 'd:\%Applications\Scoop\apps\vscodium\1.87.2.24072\data\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=12191' 
 & 'd:\%Applications\Scoop\apps\vscodium\1.87.2.24072\data\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=12205' 
rm 
ls
rm src zig-out build.zig
cls
ls
zig init-exe
zig run main
zig run main.zig
zig run "d:\CLionProjects\Zig_project\Halo\src\main.zig"
cls
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:13199' 
cls
go run "d:\%pro_git\Go-repo\Go_project\ch01_hello\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\ch01_hello\main.go"
nvim
go run "d:\%pro_git\Go-repo\Go_project\ch01_hello\main.go"
go run "d:\%pro_git\Go-repo\Go_project\ch01_hello\dbutils\enumeration.go"
cls
go init ch02_datatypes
go init mod
go
go build
go mod init
cls
go mod init ch02_datatypes
mkdir ch02_datatypes
cls
ls
cd ch02_datatypes
ls
ni main.go
go run "d:\%pro_git\Go-repo\Go_project\ch02_datatypes\main.go"
cls
mkdir Basic
m hello.gleam Basic
cls
gleam
gleam update
gleam build Basic
gleam add  Basic
cls
gleam new Basics
cls
gleam new basics
cd basics
ls
gleam test
gleam update
gleam lsp
cls
npm run compile-watch
cls
gleam run
cls
gleam run
cls
gleam run
cls
gleam run
cls
gleam run
cls
cd ..
ls
cd lobster_test
ls
code hello.lobster
scoop update oh-my-posh
cls
get-poshThemes
notepad $profile
cls
gleam run
ls
cd basics
cls
gleam run
cls
gleam run
cls
gleam run
cls
gleam run
cls
ls
cd src
ls
gleam run hello.gleam
cls
gleam run
lobster hello.lobster
cls
lobster hello.lobster
scoop update vscodium
scoop status
scoop update bun-canary
scoop update fzf
scoop update starship
scoop update wasmer
cls
onyx
onyx version
ls
cd aoc-2024
ls
cls
cd solutions
ls
onyx
onyx check day0.onyx
onyx run day0.onyx
lobster hello.lobster
nvims
nvims-ice
nvim-ice
cls
nvim-astro
nvims
ls
cargo new ch2_trait_box
cls
cd "d:\%First_pro\first-repo-lab\ch07\ch2_trait_box\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
ni .gitignore
nvim .gitgnore
cls
ls
cargo run --release
cla
cls
git clone https://github.com/onyx-lang/onyx-lsp
cd onyx-lsp
cd ..
cd onyx-lsp
install.bat
onyx run day0.onyx
ls
cd aoc-2024
cls
ls
cd solutions
cls
onyx run day0.onyx
code
onyx
git clone https://github.com/onyx-lang/onyx-lsp.git
cd onyx-lsp
onyx package sync
onyx package build
ls
install.bat
./ install.bat
cls
onyx run day0.onyx
cd solutions
onyx run day0.onyx
cls
onyx 
lobster hello.lobster
pip install polars
python -u "c:\Users\AZK19\OneDrive\桌面\demo\20240407.py"
pwd
LS
cd go_plroject
cd go_project
ls
cd go-learing
cd go-learning
ls
cls
ls
go mod init
go mod init Go-learning
ls
mkdir Grammar
cd grammar
ls
ni main.go
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Grammar\main.go"
ls
go mod init Grammar
pwd
cls
go mod init Grammar
ni main.go
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Grammar\main.go"
go fmt
pwd
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Grammar\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Grammar\main.go"
cls
pwd
go fmt
go run main.go
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Grammar\main.go"
cls
go fmt
pwd
cls
go fmt
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Grammar\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Grammar\main.go"
julia hello.jl
dotnet new console -lang "F#" -o FirstIonideProject
fsi "c:\Users\AZK19\OneDrive\桌面\demo\FirstIonideProject\Program.fs"
cd FirstIonideProject
code .
let toPigLatin (word: string) =
    let isVowel (c: char) =
        match c with
        | 'a' | 'e' | 'i' | 'o' | 'u'
        | 'A' | 'E' | 'I' | 'O' | 'U' -> true
        |_ -> false
    if isVowel word[0] then
        word + "yay"
    else
fsi "c:\Users\AZK19\OneDrive\桌面\demo\FirstIonideProject\Program.fs"
nvims
cd C:\Users\AZK19\OneDrive\桌面\demo
ls
nvim-lazy test.py
nvim-laz
nvim-lazy
cls
nvim-lazy
cls
cl
cls
scoop updat
scoop update
scoop update oh-my-posh
scoop status
scoop helix
scoop update helix
scoop update bun-canary
scoop update wasmer
scoop update vscodium
hx
$PSVersionTable
winget install --id Microsoft.Powershell --source winget
$PSVersionTable
winget install --id Microsoft.Powershell --source winget
proxy
cls
notepad $profile
scoop install starship
scoop update starship
scoop install fzf psfzf
cls
notepad $profile
cls
notepad $profile
scoop install bat
scoop install eza
touch README.md
eza
cls
pwd
cd ..
pwd
cd ..
cd %APPDATA%\alacritty\alacritty.yml
%APPDATA%\alacritty\alacritty.yml
alacrity
alacritty
cls
nvims
pip install loguru
pip list
nvim-lazy .
clls
cls
nvim-lazy .
nvim-lazy
nvim-lazy .
notepad $profile
cls
get-poshThemes
notepad $profile
cd C:\Users\AZK19\OneDrive\桌面\demo
pwd
cls
cd ..
cls
which python
gds
cls
clscls
cls
pwd
bat
cls
bat $profile
eza
cd OneDrive\桌面
cls
eza
eza ch2
eza ch1_variables
cls
eza
eza -F
cls
z
cls
z demo
cls
scoop status
scoop update
scoop status
scoop update bun-canary
Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('http://internal/odata/repo/ChocolateyInstall.ps1'))
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
choco
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
choco
choco -?
choco install chocolatey-core.extension
cls
ls
cd Grammer
cd .\Grammar\
ls
cls
go run main
go run main.go
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Operation\main.go"
zig version
which zig
cd D:\Zig\zig-windows-x86_64-0.11.0
ls
cd ..
ls
code
cls
zig run "d:\CLionProjects\Zig_project\main.zig"
get-poshThemes
notepad $profile
cls
notepad $profile
get-poshThemes
notepad $profile
cls
csl
cls
notepad $profile
cls
nvim
vim
pwd
ls
cd OneDrive\桌面
eza
cd todo
eza -F
vim
cls
nvim
cd ..
cd..
cd ..
cls
nvim
vim
nvim
cd oneDrive\桌面
cd demo
eza
nvim 99.py
pip install isort
nvim 99.py
nvim
ls
touch main.go
nvim main.go
mkdir 12
cd 12
ls
go mod init 12
ni main.go
cls
ls
nvim main.go
nvim
cd ..
ls
nvim test.py
cd oneDrive\桌面
cd demo
nvim test.py
nvim
PYTHON
nvim
notepad $profile
nvim-ice
nvims
nvim-hdr
nvim
git clone https://github.com/pgosar/CyberNvim.git
nvim
nvims
:q
cls
nvims
nvim-ice cal.zig
nvims
:q
cls
nvims
nvim-astro
zig run "d:\CLionProjects\Zig_project\main.zig"
cls
nvims
cls
nvims
:q
cls
nvims
lvim
cls
pwd
cd c:\Users\AZK19\OneDrive\桌面\demo
lvim
nvim-as
nvim-astro
:q
cls
git clone --depth 1 https://github.com/AstroNvim/template $env:LOCALAPPDATA\AstroNvim
nvim-astro
cd c:\Users\AZK19\OneDrive\桌面\demo
nvim-astro
coduim
code
cls
code .
code.
code .
python -u "c:\Users\AZK19\Downloads\3.17_BP_categorize\tt.py"
python -u "c:\Users\AZK19\Downloads\3.17_BP_categorize\st.py"
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/3.17_BP_categorize/st.py
cls
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/3.17_BP_categorize/st.py
cls
nvim
nvims
pip install pynvim
cls
nvim
pwd
cd ~/.config/nvim
nvim
cd oneDrive\桌面
cd demo
nvim 99.py
Set-ExecutionPolicy Bypass -Scope Process -Force; Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/ayamir/nvimdots/HEAD/scripts/install.ps1'))
git clone https://github.com/doom-neovim/doom-nvim.git
nvim
git clone https://github.com/artart222/CodeArt $HOME\AppData\Local\nvim
powershell.exe -executionpolicy bypass -file $HOME\AppData\Local\nvim\installer\windows.ps1
nvim
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/3.17_BP_categorize/st.py
mkdir go-17
go mod init go-17
cd go-17
cls
touch main.go
cls
go run main.go
go run "c:\Users\AZK19\OneDrive\桌面\demo\go-17\main.go"
cls
cargo new 17
cargo new rust-17
cd rust-17
cls
cargo run --release
nvim
cls
nvim
cd C:\SpaceVim
curl -sLf https://spacevim.org/install.sh | bash -s -- --uninstall
nvim
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/1.py
cls
ls
cd Conditional_statement
ls
cls
go mod init
go mod init Conditional_statement
cls
ni main.go
cd Conditional_statement
ls
csl
cls
go fmt
cls
go fmt
cls
go fmt
ls
mkdir Function
go mod init
go mod init Function
touch main.go
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Function\main.go"
quarto preview d:/%pro_git/Go-repo/Go_project/Go-learning/Function/read.md --no-browser --no-watch-inputs
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Function\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Function\main.go"
cls
ls
cd ..
ls
mkdir Datatypes
go mod init Datatypes
touch main.go
code main.go
ni read.md
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
cls
go fmt
go fmt main.go
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
clsd
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
cls
scoop update
scoop status
scoop update eza
scoop update vscodium
reg import "D:\%Applications\Scoop\apps\vscodium\current\install-context.reg"
reg import "D:\%Applications\Scoop\apps\vscodium\current\install-associations.reg"
cls
nvims
nvim-lazy
cls
nvim-lazy
cls
nvims
cd oneDrive\桌面
cd demo
nvims
nvim-lazy
nvim-ice
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
cls
clsnvims
cls
ls
go run main.go
cls
go run main.go
cls
fmt.Printf("ptr_b 的地址是 %x\n", ptr_b)fmt.Printf("ptr_b 的地址是 %x\n", ptr_b)fmt.Printf("ptr_b 的地址是 %x\n", ptr_b)fmt.Printf("ptr_b 的地址是 %x\n", ptr_b)cls
cls
go run main.go
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\main.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\hello\hello.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\src\main.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\hello\hello.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Datatypes\hello\hello.go"
cls
ls
go run main.go
cls
go run main.go
python -u "c:\Users\AZK19\OneDrive\桌面\8.py"
vim .\picture.py
python -u "c:\Users\AZK19\OneDrive\桌面\picture.py"
cls
ls
go run main.go
ls
cd ..
ls
mkdir Types
cd Types
go mod init Types
cls
touch main.go
cls
ls
eza
cls
mkdir src
mkdir dbutils
cls
ls
cls
nvim
nvims
nvim
cls
nvims
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Types\src\main\main.go"
ls
touch main.go
cls
code main.go
go run main.go
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Types\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Types\main.go"
cls
nvims
neovide
nvim
cls
git clone https://github.com/fanlumaster/fanyfull-astronvim.git
cls
get-poshThemes
notepad $profile
cls
nvim
neovide
lvim
cls
nim
cls
neovide
nvim
lvim
lvim demo
lvim
cls
lvim
lvim 
lvim .
lvim check health--rust
lvim
eza
lvim .
go run main.go
lvim
cd d:
ls
cd %pro_git
eza
cd go-repo
eza
cd go_porject
cd go_project
ls
cd go-learning
cls
lvim .
cls
get-poshThemes
notepad $profile
go run main.go
cls
ls
cd go_project
cd go-learning
get-poshThemes
notepad $profile
cd d:
cd go-learning
cd C:\Users\AZK19\OneDrive\桌面\rust_project
cls
cd C:\Users\AZK19\OneDrive\桌面\rust_project
C:\Users\AZK19\OneDrive\桌面\demo
cld
cls
nvims
cls
CLS
LS
lvim .
cls
go fmt main.go
go run main.go
cls
go run main.go
cls
get-poshThemes
notepad $profile
go run main.go
cls
go run main.go
]cls
cls
get-poshThemes
notepad $profile
cls
go run main.go
cls
go run main.go
cls
go run main.go
cls
go run main.go
cls
go run main.go
cls
notepad $profile
Install-Module -Name Terminal-Icons -Repository PSGallery
cls
ls
dir
cls
Install-Module -Name Terminal-Icons -Repository PSGallery
notepad $profile
dir
notepad $profile
dir
ls
cls
notepad $profile
ls
scoop update
scoop status
scoop update vscodium
scoop update erlang
cls
pwd
cd appdata
ls
cd local
ls
git clone https://github.com/theodoreOnzGit/neovideConfig.git
nvim
neovide
nvim
cd local
cd appdata
cd local
ls
mkdir nvim
cd nvim
cls
git clone https://github.com/Arian-p1/neovide-config.git
nvim
neovide
cd ..
rm nvim
nvim-lazy
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
python -m pip install -U autoflake
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
Get-ChildItem env: | Out-File "C:\Users\AZK19\AppData\Local\Temp\tmp-39401tR0x4zvdF3W.txt"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\p1.py"
pip install graphviz
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\p1.py"
cls
ls
go mod init Advanced
touch main.go
ls
cls
ls
code main.go
cls
ls
go run main.go
cls
go run main.go
cls
go run main.go
cls
go run main.go
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Advanced\api_call.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Advanced\error.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Advanced\tempCodeRunnerFile.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Advanced\error.go"
cls
eza
go mod init Greater
eza
ls
cls
go run main.go
cls
go run main.go
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Greater\main.go"
csl
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Greater\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Greater\main.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Greater\Swg.go"
cls
ni mul.go
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Greater\mul.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Greater\buffer-free.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Greater\buffer.go"cls
ni mutex.go
code mutex.go
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Greater\mutex.go"
cls
lvim main.go
go run main.go
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt copy.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt copy.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\rs.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt copy.py"
777cls
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt copy.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt copy.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt copy.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
clsa
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st&tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\p.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\p.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st&tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\p.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
cls
Rscript "d:\!Workbenches\ANNProject\3.17_BP_categorize\timu.r"
Rscript "c:\Users\AZK19\OneDrive\桌面\777.r"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st&tt.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
cls
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\st.py"
python -u "d:\!Workbenches\ANNProject\3.17_BP_categorize\p.py"
scoop search glazewm
scoop bucket add extras # Ensure bucket is added first
scoop install glazewm
cla
cls
scoop status
scoop update fzf bun-canary
cls
ls
cd go-test
cls
ls
ni t.go
vim t.go
nvim
nvim-lazy .
nvim-lazy 
vim $vIM\vimrc
vim _vimrc
nvim-lazy 
nvim-lazy
cls
get-poshThemes
cls
get-poshThemes
notepad $profile
cls
code
cls
get-poshThemes
notepad $profile
code
cls
notepad $profile
code
cls
clscls
cls
notepad $profile
code
notepad $profile
code
notepad $profile
cls
code
cls
nvim
git clone https://github.com/askfiy/SimpleNvim.git
cls
pwd
cls
git clone https://github.com/askfiy/SimpleNvim.git
git status
git clone https://github.com/askfiy/SimpleNvim.git
pwd
$ git clone https://github.com/askfiy/SimpleNvim.git ~/.config/nvim
git clone https://github.com/askfiy/SimpleNvim.git
git clone git@github.com:wenjinnn/config
pwd
ls
cls
eza
eza -F
nano
cls
emacs
neovide
neovide .
cls
pwd
cls
cd go_project
cls
ls
go fmt
lua run hello.lua
lua
get-poshThemes
notepad $profile
code
get-poshThemes
notepad $profile
cls
code
cls
csl
cls
get-poshThemes
notepad $profile
cd oneDrive\桌面
cls
cls
ls
cls
go mod init Additons
mkdir base
cls
touch main.go
go fmt
cls
la
ls
cls
go run main.go
cls
cd base
cls
touch main.go
go fmt
go run main.go
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\base\main.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\base\map.go"
cls
quarto preview d:/%pro_git/Go-repo/Go_project/Go-learning/Additions/read.qmd --no-browser --no-watch-inputs
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\base\closure.go"
cls
ls
cd base
;s
ls
cls
ls
go mod init base
cd ..
cd main
go mod init main
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\main\main.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\base\embedding.go"
cls
tree
tree .
cls
go mod init src
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cd src
go mod init src
go run "c:\Users\AZK19\OneDrive\桌面\999\src\main\main.go"
csl
cls
cd src
go run main.go
ls
cls
ls
go run "c:\Users\AZK19\OneDrive\桌面\999\src\main\main.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
clks
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cd src
ls
go run "main/main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Function\main.go"
get-poshThemes
notepad $profile
code
cls
ls
cd src
ls
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
ls
go run "main/main.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
ls
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
ls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cd src
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
get-poshThemes
notepad $profile
cls
code
cls
code
node "d:\%pro_git\my-repo\JavaScript-code\myFirst-JS-project\function.js"
cls
scoop update oh-my-posh
cls
scoop update oh-my-posh
scoop status
scoop eza
scoop update eza
cls
ls
cd base
ls
cls
ls
ni goroutine.gp
cls
get-poshThemes
notepad $profile
cls
ls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
get-poshThemes
fomt
font
cls
notepad $profile
cls
ls
cls
ls
cls
ls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
get-poshThemes
notepad $profile
csl
cls
get-poshThemes
notepad $profile
get-poshThemes
notepad $profile
code
cls
get-poshThemes
ls
cd base
ls
ni func_sort.go
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\base\func_sort.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\base\func_sort.go"
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
cd base
cd src/base
cls
ls
ni text_template.go
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
cd src
cls
go run "d:\%pro_git\Go-repo\Go_project\Go-learning\Additions\src\main\main.go"
cls
cd main
cls
go run main.go
gcc
g++
gcc --version
g++ --version
cmake --version
g++ --version
gcc --version
cmake --version
get-poshThemes
notepad $profile
code
cls
notepad $profile
code
get-poshThemes
cls
code
cls
get-poshThemes
notepad $profile
code
get-poshThemes
notepad $profile
code
cls
notepad $profile
cls
notepad $profile
cls
notepad $profile
code
notepad $profile
cls
get-poshThemes
notepad $profile
cls
cls
julia
vim C:\Users\AZK19\.julia\environments\v1.10\Project.toml
nano
cls
pwd
cls
code
cls
code
python -u "c:\Users\AZK19\OneDrive\桌面\demo\app.py"
code .
python -u "c:\Users\AZK19\OneDrive\桌面\demo\99.py"
cls
get-poshThemes
notepad $profile
cls
cls
pwd
python -u "c:\Users\AZK19\OneDrive\桌面\demo\test.py"
cls
get-poshThemes
notepad $profile
code
pwd
cls
pwd
git status
cls
nano 99.py
zig
zig -V
zig version
cls
zls --version
scoop install zig
cls
zig version
cls
code
zig run "d:\CLionProjects\Zig_project\codeTest\src\root.zig"
zig run "d:\CLionProjects\Zig_project\Halo\src\main.zig"
scoop search glazewm
scoop search zig
scoop search zls
scoop search v
cls
scoop search vlang
v
v --version
scoop search v
v up
v --version
cls
v-analyzer
v-analyzer up
chrome
pycharm
cls
onyx run day0.onyx
ls
cd aoc-2024
cls
ls
cd solutions
onyx run day0.onyx
cls
winget install nushell
NU
nu
cls
nu
cls
nu
D:/anaconda3/Scripts/activate
conda activate base
cls
ls
cd nu_project
cls
nu hello.nu
cls
nu hello.nu
nu --version
nu hello.nu
nu
scoop status
scoop update
cls
scoop status
scoop update oh-my-posh
cls
scoop status
scoop update eza
scoop update bun-canary
cls
cls
ll
cls
ls
cls
nu
moon new hello
moon
cls
moon new hello
code hello
cls
moon
cls
moon
moon run hello
moon run main
cls
moon
moon update
cls
nu 
nu
moon run main
cls
pwd
cls
moon new hello && code hello
moon run main
cls
moon new moon
ls
cd moon
ls
cls
moon run main
nu
pip install mypy
cls
pip list
cls
ls
python -u "c:\Users\AZK19\OneDrive\桌面\demo\428\main.py"
cls
nu
moon check
moon check --watch
nu
moon
cls
python -u "c:\Users\AZK19\OneDrive\桌面\demo\428\main.py"
code .
python -u "c:\Users\AZK19\OneDrive\桌面\demo\428\main.py"
cls
python -u "c:\Users\AZK19\OneDrive\桌面\demo\428\main.py"
cls
pip list
cls
python --version
cls
pip list
node
node -v
node update
cls
npm
npm -l
cls
npm update -g npm
npm update -g n
n latest
cls
nodejs
node
where node
where node.js
npm install -g n
cls
node
node -v
cls
yarn
cls
node
cls
go env
cls
nu
cls
nu
scoop search zls
zig version
scoop install zls
cls
scoop install zls
cls
zls
zls --version
scoop install zls
scoop uninstall zls
cls
scoop install zls
scoop uninstall zls
scoop install zls
zls
cls
notepad $profile
cls
scoop status
cls
scoop status
scoop update oh-my-posh
cls
choco search zls
choco search zig
cls
scoop status
scoop update
scoop status
cls
scoop status
scoop update bun-canary
scoop update erlang
cls
scoop status
scoop update eza
scoop update fzf
scoop update LXGWWenKaiMono
scoop status clear
scoop install zls
scoop status
scoop help`

cls
scoop help
scoop list
scoop bucket known
get-poshThemes
ls
cls
cd ..
cls
ls
rm -rf 428
rm 428
scoop status
zig
zig env
cls
where 
cls
which
which python
which zig
cls
code .
zig run "d:\!Workbenches\70\exercises\exercises\001_hello.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\002_std.zig"
zig run "d:\!Workbenches\70\exercises\exercises\003_assignment.zig"
vim .
lvim .
nvim-lazy .
cls
zig run "d:\!Workbenches\70\exercises\exercises\003_assignment.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\003_assignment.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\003_assignment.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\004_arrays.zig"
zig run "d:\!Workbenches\70\exercises\exercises\005_arrays2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\006_strings.zig"
zig run "d:\!Workbenches\70\exercises\exercises\007_strings2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\008_quiz.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\008_quiz.zig"
cls
scoop search vlang
scoop search v
zig run "d:\!Workbenches\70\exercises\exercises\009_if.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\010_if2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\011_while.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\014_while4.zig"
zig run "d:\!Workbenches\70\exercises\exercises\012_while2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\012_while2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\013_while3.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\015_for.zig"
zig run "d:\!Workbenches\70\exercises\exercises\016_for2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\017_quiz2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\017_quiz2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\001_hello.zig"
cls
ls
cd execises
cd .\exercises\
cls
ls
cls
zig run 001_hello
zig run 001_hello.zig
cls
zig run "d:\!Workbenches\70\exercises\exercises\018_functions.zig"
nu
zig run "d:\!Workbenches\70\exercises\exercises\018_functions.zig"
zig run "d:\!Workbenches\70\exercises\exercises\019_functions2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\020_quiz3.zig"zig run "d:\!Workbenches\70\exercises\exercises\019_functions2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\020_quiz3.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\020_quiz3.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\020_quiz3.zig"
zig run "d:\!Workbenches\70\exercises\exercises\021_errors.zig"
zig run "d:\!Workbenches\70\exercises\exercises\022_errors2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\022_errors2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\023_errors3.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\024_errors4.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\025_errors5.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\025_errors5.zig"
zig run "d:\!Workbenches\70\exercises\exercises\026_hello2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\026_hello2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\027_defer.zig"
zig run "d:\!Workbenches\70\exercises\exercises\028_defer2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\029_errdefer.zig"
zig run "d:\!Workbenches\70\exercises\exercises\030_switch.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\030_switch.zig"
yes
cls
zig run "d:\!Workbenches\70\exercises\exercises\031_switch2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\031_switch2.zig"
& D:/Python/Python313/python.exe c:/Users/AZK19/.cursor-tutor/projects/python/main.py
& D:/Python/Python313/python.exe c:/Users/AZK19/OneDrive/桌面/demo/99.py
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/99.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/demo/99.py
zig run "d:\!Workbenches\70\exercises\exercises\031_switch2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\032_unreachable.zig"
zig run "d:\!Workbenches\70\exercises\exercises\033_iferror.zig"
c;s
cls
nu
zig run "d:\!Workbenches\70\exercises\exercises\034_quiz4.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\035_enums.zig"
zig run "d:\!Workbenches\70\exercises\exercises\036_enums2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\037_structs.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\038_structs2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\039_pointers.zig"
zig run "d:\!Workbenches\70\exercises\exercises\040_pointers2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\041_pointers3.zig"
zig run "d:\!Workbenches\70\exercises\exercises\042_pointers4.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\044_quiz5.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\045_optionals.zig"
zig run "d:\!Workbenches\70\exercises\exercises\046_optionals2.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\047_methods.zig"
zig run "d:\!Workbenches\70\exercises\exercises\048_methods2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\tempCodeRunnerFile.zig"
zig run "d:\!Workbenches\70\exercises\exercises\049_quiz6.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\049_quiz6.zig"
zig run "d:\!Workbenches\70\exercises\exercises\050_no_value.zig"
zig run "d:\!Workbenches\70\exercises\exercises\051_values.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\051_values.zig"
zig run "d:\!Workbenches\70\exercises\exercises\052_slices.zig"
zig run "d:\!Workbenches\70\exercises\exercises\053_slices2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\tempCodeRunnerFile.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\053_slices2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\054_manypointers.zig"
zig run "d:\!Workbenches\70\exercises\exercises\055_unions.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\055_unions.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\055_unions.zig"
zig run "d:\!Workbenches\70\exercises\exercises\056_unions2.zig"
zig run "d:\!Workbenches\70\exercises\exercises\057_unions3.zig"
zig run "d:\!Workbenches\70\exercises\exercises\058_quiz7.zig"
zig run "c:\Users\AZK19\Downloads\058_quiz7.zig"
zig run "c:\Users\AZK19\Downloads\058_quiz7 (1).zig"
zig run "d:\!Workbenches\70\exercises\exercises\058_quiz7.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\058_quiz7.zig"
zig run "d:\!Workbenches\70\exercises\exercises\059_integers.zig"
zig run "d:\!Workbenches\70\exercises\exercises\060_floats.zig"
zig run "d:\!Workbenches\70\exercises\exercises\061_coercions.zig"
python -u "c:\Users\AZK19\OneDrive\桌面\369\1.py"
nvim-lazy .
nvims
scoop update
scoop status
scoop update bun-canary eza
cls
scoop status
scoop update fzf oh-my-posh psfzf vscodium wasmer
scoop update
cls
scoop status
scoop update
cls
zig run "d:\!Workbenches\70\exercises\exercises\060_floats.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\060_floats.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\060_floats.zig"
zig run "d:\!Workbenches\70\exercises\exercises\061_coercions.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\061_coercions.zig"
cls
cd d:
cls
get
cls
zig run "d:\!Workbenches\70\exercises\exercises\061_coercions.zig"
winget
winget searrch siyuan
scoop search siyuan
scoop install siyuan-note
cls
siyuan
siyuan-note
SiYuan
SiYuan-note
scoop uninstall siyuan-note
zig run "d:\!Workbenches\70\exercises\exercises\062_loop_expressions.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\062_loop_expressions.zig"
cls
ccc
cls
python
cls
python
cls
python
jupyter notebook --version
jupyter notebook
zig run "d:\!Workbenches\70\exercises\exercises\tempCodeRunnerFile.zig"
zig run "d:\!Workbenches\70\exercises\exercises\063_labels.zig"
cls
get-poshThemes
notepad $profile
cls
cd d:
cls
vim .
neovide .
vim .
lvim
cd d:
cls
lvim
python
cls
get-poshThemes
notepad $profile
code
cd D:\!Workbenches\70\exercises
notepad $profile
cd D:\!Workbenches\70\exercises
code
cd D:\!Workbenches\70\exercises
get-poshThemes
cd D:\!Workbenches\70\exercises
get-poshThemes
notepad $profile
cd D:\!Workbenches\70\exercises
notepad $profile
cd D:\!Workbenches\70\exercises
notepad $profile
cd D:\!Workbenches\70\exercises
code
notepad $profile
cd D:\!Workbenches\70\exercises
code
notepad $profile
cd D:\!Workbenches\70\exercises
`
pwd
pwd
cls
zig run "d:\!Workbenches\70\exercises\exercises\064_builtins.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\064_builtins.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\064_builtins.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\064_builtins.zig"
cls
zig run "d:\!Workbenches\70\exercises\exercises\064_builtins.zig"
dart --version
7 + 9
pwd
cls
d --version
cls
py
julia
cls
get-poshThemes
notepad $profile
cd D:\!Workbenches\70\exercises
cls
code
get-poshThemes
notepad $profile
cd D:\!Workbenches\70\exercises
cls
ls
ls images
cls
notepad $profile
which node
hx
hx --health zig
hx --health rust
cls
where lldb-vscode
zig run "d:\!Workbenches\70\exercises\exercises\065_builtins2.zig"
where python
which python
python
which python
cls
zig run "d:\!Workbenches\70\exercises\exercises\002_std.zig"
python -u "d:\!Workbenches\ANNProject\BP_anticipate\1.py"
cls
python list
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/BP_anticipate/1.py
& D:/Python/Python312/python.exe d:/!Workbenches/ANNProject/3.18/demo.py
python -u "d:\!Workbenches\ANNProject\3.18\demo.py"
python-list
pip list
cls
pip install numpy
pip install matplotlib
cls
pip list
pip install jupyter
cls
python -u "d:\!Workbenches\ANNProject\3.18\demo.py"
python -u "d:\!Workbenches\ANNProject\3.18\from_4o_sln.py"
cls
python -u "d:\!Workbenches\ANNProject\3.18\from_4o_sln.py"
cls
python -u "d:\!Workbenches\ANNProject\3.18\from_4o_sln.py"
pwd
hx test.py
lvim .
lvim t.py
lvim
python -u "d:\!Workbenches\ANNProject\3.18\from_4o_sln.py"
cls
python -u "d:\!Workbenches\ANNProject\3.18\from_4o_sln.py"
cls
ls
cd .\3.18
ls
python .\from_4o_sln.py
python -u "d:\!Workbenches\ANNProject\3.18\from_4o_sln.py"
cls
ls
python -u "d:\!Workbenches\ANNProject\3.18\from_4o_sln.py"
scoop status
scoop update oh-my-posh
cls
scoop install vscodium
scoop update vscodium
scoop search vscodium
scoop uninstall vscodium
cls
scoop install vscodium
reg import
'reg import "D:\%Applications\Scoop\apps\vscodium\current\install-associations.reg"'
scoop uninstall vscodium
scoop install vscodium
codium
scoop uninstall vscodium
scoop cache rm *
Remove-Item -Recurse -Force $env:APPDATA\VSCodium
Remove-Item -Recurse -Force $env:LOCALAPPDATA\VSCodium
cls
scoop search vscodium
codium
which codium
codium
scoop bucket add extras
scoop bucket rm extras
scoop search vscodium
scoop install vscodium
scoop status
scoop status clear
scoop install vscodium
scoop update fzf psfzf
scoop status clear
scoop status 
scoop status
scoop install psfzf
scoop update psfzf
scoop uninstall psfzf
notepad $profile
scoop uninstall psfzf
scoop install psfzf
scoop search psfzf
scoop bucket extras
scoop bucket add extras
scoop install psfzf
scoop status
scoop search vscodium
scoop update glazewm
scoop install vscodium
'reg import`
"D:\%Applications\Scoop\apps\vscodium\current\install-context.reg"'
'reg import "D:\%Applications\Scoop\apps\vscodium\current\install-associations.reg"'
cls
codium
zig run "d:\!Workbenches\70\exercises\exercises\003_assignment.zig"
Developer: Toggle Developer Tools
cls\
cls
julia "d:\!Workbenches\ANNProject\3.18\hello.jl"
julia
julia "d:\!Workbenches\ANNProject\3.18\hello.jl"
zig run "d:\!Workbenches\70\exercises\exercises\064_builtins.zig"
nvim 515.py
vim 515.py
nvim
nvims
cd d:\!Workbenches\70\exercises
cls
nvim-lazy .
neovide .
nvims
lvim
hx
nvims
python -u "d:\!Workbenches\70\exercises\tempCodeRunnerFile.python"
hx --health rust
which lldb-vscode
which codelldb
julia "d:\!Workbenches\ANNProject\3.18\hello.jl"
which julia
scoop status
scoop update
scoop update oh-my-posh
scoop status
scoop update 7zip bun-cannary eza startship
scoop status
scoop update starship
scoop status
scoop update bun-canary
cls
notepad $profile
get-poshThemes
notepad $profile
cd d:\!Workbenches\70\exercises
nvims
nvim-lazy
cd d:
cls
nvim-lazy
c;s
cls
nvim-lazy
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\Lazyvim
nvim-lazy
cls
nvims
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\Lazyvim
nvim
nvims
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\nvim
pwd
ls
cd .\AppData\Local
cdnvim
cd nvim
ls
cls\
cls
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\nvim
lazyvim
nvim
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\Lazyvim
cls
nvim-lazy
notepad $profile
nvim
cls
nvim
cd %APPDATA%\alacritty\alacritty.toml
cd APPDATA\alacritty\alacritty.toml
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\nvim
Remove-Item $env:LOCALAPPDATA\nvim\.git -Recurse -Force
nvim
notepad $profile
nvims
notepad $profile
nvima
nvims
cls
vim
git clone https://github.com/jdhao/nvim-config.git
nvim
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\lazyvim
notepad $profile
nvims
notepad $profile
cls
get-poshThemes
notepad $profile
cd d:\!Workbenches\70\exercises
nvim
cls
neovide .
get-poshthemes
get-poshThemes
notepad $profile
cd d:\!Workbenches\70\exercises
notepad $profile
cd d:\!Workbenches\70\exercises
notepad $profile
cd d:\!Workbenches\70\exercises
notepad $profile
nvims
cls
cd d:\!Workbenches\70\exercises
cls
nvim
get-poshThemes
notepad $profile
cd d:\!Workbenches\70\exercises
lvim
vim %APPDATA%/alacritty/alacritty.toml
cls
code
codium
pwd
cls
notepad $profiles
cls
notepad $profiles
notepad $profiles
cls
get-poshThemes
$profile
notepad $profile
$profile
vim
nvim
nvims
notepad $profile
$profile
codium
which powershell
cls
notepad $profile
$profile
notepad $profile
python
cls
nvim
codium
python -u "d:\!Workbenches\ANNProject\BP_anticipate\1.py"
cls
csl
cls
nvim
neovide
nvims
rustup show
rustup update
 cleaning up downloads & tmp directories
cleaning up downloads & tmp directories
cls
cd d:\!Workbenches\70\exercises
notepad $profile
z demo
cd d:\!Workbenches\70\exercises
z hello
cd ..
pwd
cd c
cd c:\Users\AZK19\OneDrive\桌面\rust_project
z d:\!Workbenches\70\exercises
cls
z
cls
hx --version
hx --health zig
hx --health python
hx --health go
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\LazyVim
Remove-Item $env:LOCALAPPDATA\LazyVim\.git -Recurse -Force
notepad $profile
nvims
nvim-lazy
NVIM
nvim --version
lvim
hyper\
hyper
nvim
nvims
notepad $profile
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\LazyVim
nvims
vim $vIM\vimrc
vim $vimrc
pwd
vim .vimrc
ls
vim _vimrc
nvims
notepad $profile
nvims
nvim-lazy
scoop status
scoop update oh-my-posh
cls
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
nvim-lazy
nvims
py
pip install rich
nvim-
nvim-lazy
cls
nvims
nvim-lazy
cls
nvims
cd c:\Users\AZK19\OneDrive\桌面
ls
cd demo
ls
nvim-astro .
nvim-astro 
cls
nvim-astro
nvim-astro .
cls
cd c:\Users\AZK19\OneDrive\桌面
ls
nvim-astro .
cls
nvim-astro .
nvim-astro
nvim-astro .
nvim-astro
cls
get-poshThemes
scoop update 
scoop status
scoop update oh-my-posh erlang
scoop status
scoop update oh-my-posh
cls
scoop update oh-my-posh
cls
scoop status
scoop update 7zip bun-cannary wasmer yarn
cls
scoop status
scoop update yarn
scoop update wasmer
cls
scoop status
scoop update bun-canary
cls
get-poshThemes
cls
hx
gleam
gleam -v
gleam --version
gleam update
which gleam
cd D:\!Workbenches\20\
ll
ls
eza
gleam update
gleam.exe  update
gleam.exe update
cls
gleam --version
mkdir rustling
cd rustling
cls
ls
git clone https://github.com/AzAdminpro/rustlings.git
cd "d:\!Workbenches\70\rustling\rustlings\exercises\00_intro\" ; if ($?) { rustc intro1.rs } ; if ($?) { .\intro1 }
nvim-lazy
[555555;33;28M[444444;36;26M[I[O[I:q
nvim-lazy
nvims
nvim-lazy
scoop status
scoop update
nvim-lazy
nvim
nvims
nvim
eza
cd appdata
eza
cd local
ls
cd .\LazyVim
ls
eza -F
nvim .
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
nvim-lazy
cls
nvim-lazy
vim
pwd
ls
cd vimfiles
eza
cd plugin
ls
eza
nvim-lazy
vim
vim _vimrc
vim fib.py
nvim-lazy
nvims
nvim-lazy fib.py
nvim-lazy
pwd
ls
nvim-lazy
vim fib.py
vim _vimrc
cls
nvim-lazy
cls
vim hello.py
vim _vimrc
vim hello.py
vim
vim test.py
vim --version
cls
nvim-lazy
vim _vimrc
vim
vim _vimrc
vim
vim _vimrc
vim 777.go
nvim-lazy
nvims
nvim-lazy
cls
rustlings lsp
nvims
cls
nvim-lazy
nvim-lazy fib.py
nvims
nvim-lazy
nvim-lazy fib.py
nvim
vim init.lua
nvim init.lua
lvim init.lua
nvim
git clone https://github.com/fanlumaster/FanyLazyvim.git
nvim
neovide
nvim-lazy 
npm run compile-watch
gleam run -m hello
gleam
 gleam
gleam
cls
hint
cls
cargo run intro2.rs
cd "d:\!Workbenches\70\rustling\rustlings\exercises\00_intro\" ; if ($?) { rustc intro2.rs } ; if ($?) { .\intro2 }
gleam
pwd
cls
git clone https://github.com/syl20bnr/spacemacs $home/.emacs.d
cls
git clone https://github.com/syl20bnr/spacemacs $env:APPDATA/.emacs.d
cd $env:appdata/.emacs.d
ls
git clone https://github.com/syl20bnr/spacemacs $env:APPDATA/.emacs.d
lvim
cls
lvim
lvim test.py
lvim
dism.exe /online /cleanup-image /Restorehealth
sfc scannow
sfc /scannow
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /Restorehealth
sfc /scannow
cls
scoop status
scoop update oh-my-posh
cls
eza
lvim
winget
cls
lvim
cls
cd $env:appdata/lvim
pwd
cd %APPDATA%\lvim
cd APPDATA\lvim
cls
pwd
ls
cd appdata
cd local
ls
cls
cd lvim
ls
mkdir lua/user
ls
cd lua
ls
cls
ls
cd user
lvim options.lua
lvim
Invoke-WebRequest https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/uninstall.ps1 -UseBasicParsing | Invoke-Expression
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
lvim
cls
lvim
pwd
cd .\AppData
cd .\Local\lvim
cls
ls
mkdir lua/user
cd lua/user
ls
cls
lvim options.lua
lvim
cls
lvim
clslvim
cls
pwd
cd d:\!Workbenches\20\
ls
lvim options.py
cls
pwd
cd c:
cls
pwd
lvim
py
pip install swenv
py 312
python-312
cls
lvim
cls
lvim
get-poshThemes
lvim
nvims
notepad $profile
nvims
notepad $profile
nvims
nvim
nvim-ice
nvim-ice .
:Q
:q
nvims
nvim-ice .
notepad $profile
nvims
vim
vim _vimrc
nvims
nvim-astro
nvims
hx
cls
nvims
nvim
nvims
nvim-lazy
nvim
nvim-lazy
code .
nvim-lazy
nvim .
nvim
nvim-lazy
codium
py
python312
py-3.12
py-3.16
py -3.6
cls
py -3.12
py -3.11
conda
cls
python -u "d:\!Workbenches\hello.py"
D:/anaconda3/Scripts/activate
conda activate base
nim compile --verbosity:0 --hints:off --run "C:\Users\AZK19\AppData\Local\Temp\tempCodeRunnerFile.nim"
nim compile --verbosity:0 --hints:off --run "c:\Users\AZK19\OneDrive\桌面\新建文件夹\hello.nim"
hello.exe
hello
./hello
cls
./hello
mkdir ziglings-repo
git clone https://codeberg.org/AZ123/Ziglings-exercises.git
git push -uf origin main
ls
cd ziglings-exercises
git push -uf origin main
git push
git commit
cls
git status
git add exercises/
git commit -m "first commit"
git push
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\049_quiz6.zig"
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\058_quiz7.zig"
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\062_loop_expressions.zig"
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\063_labels.zig"
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\064_builtins.zig"
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\065_builtins2.zig"
cls
nvims
nvim-astro
ls
git clone https://github.com/AZKvgkv/my_astro_config.git user
cls
ls
cd user
ls
cd lus
cd lua
ls
cls
nvim-astro
git clone --depth 1 https://github.com/AstroNvim/template $env:LOCALAPPDATA\AstroNvim
Remove-Item $env:LOCALAPPDATA\AstroNvim\.git -Recurse -Force
nvim-astro
git clone https://github.com/AZKvgkv/my_astro_config.git user
nvim-astro
cls
nvim-astro
scoop status
scoop update fzf
scoop update bun-canary oh-my-posh
git clone git@github.com:CosmicNvim/CosmicNvim.git CosmicNvim
git clone https://github.com/CosmicNvim/CosmicNvim.git
notepad $profile
nvims
nvim-astro
nvim-astro fib.py
nvims
python
nvims
nvim-astro
nvim
nvims
nvim-comic
notepad $profile
nvim-cosmic
notepad $profile
nvims
cls
get-poshThemes
notepad $profile
cd d:\!Workbenches\20\
cd D:\!Workbenches\70\exercises
cd D:\!Workbenches\70\ziglings-repo
ls
cd .\Ziglings-exercises
ls
cd .\exercises
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
code
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
nvims
nvim
nvims
nvim-astro
cls
fzf
cls
nvim
cls
pwd
py
pip install marimo
marimo tutorial intro
hx
cls
hx
hx .
cls
git clone https://github.com/syl20bnr/spacemacs $env:APPDATA/.emacs.d
git clone https://github.com/syl20bnr/spacemacs $home/.emacs.d
emacs .
which gleam
which emacs
cls
which gleam
emacs .
cls
emacs .
nvim
cls
nvims
cls
nvims
nvim-lazy
cls
nvim-lazy
emacs .
cls
scoop update oh-my-posh
cls
nvim-lazy
cls
nvim-lazy
clks
cls
ls
cls
scoop status
scoop update bun-canary
cls
nvim-lazy
cls
nvim-lazy
nu
nvim-as
nvim-astro
cls
nvim-astro
nvim-lazy
nvim-astro
nvim-lazy
cls
nvim-lazy
nvim-astro
nvim
cls
nvims
lvim
nvim
neovide
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\060_floats.zig"
cls
get-poshThemes
cls
notepad $profile
code
cls
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\064_builtins.zig"
get-poshThemes
scoop update
notepad $profile
scoop status
cls
scoop status
scoop update bun-canary eza fzf oh-my-posh vscodium zig zls
cls
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\064_builtins.zig"
cls
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\065_builtins2.zig"
cls
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\065_builtins2.zig"
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\066_comptime.zig"
sfc /scannow
ll
cls
ls
cls
eza
scoop status
scoop update oh-my-posh
get-poshThemes
notepad $profile
code
cls
notepad $profile
code
cd d:\!Workbenches\70\ziglings-repo
cd d:\!Workbenches\
cd .\30
ll
ls
cd .\hello-algo
ts
typescrip
typescript
npm
cls
npm,
npm
cls
get-poshThemes
notepad $profile
cd d:\!Workbenches\
cls
cd .\30\hello-algo
cd d:\!Workbenches\
cd .\30\hello-algo
cd d:\!Workbenches\
cd .\30\hello-algo
npm --version
npm install -g typescript
code
notepad $profile
which starship
nvims
dotnet --version
nvim
cls
lvim
nvims
cls
nvims
cls
nvim-lazy
# Strongly recommended: Fork the repo and clone YOUR fork.
git clone https://github.com/NormalNvim/NormalNvim.git %USERPROFILE%\AppData\Local\NormalVim
notepad $profile
nvims
git clone https://github.com/NormalNvim/NormalNvim.git %USERPROFILE%\AppData\Local\NormalVim
git clone https://github.com/NormalNvim/NormalNvim.git %USERPROFILE%\AppData\Local\NormalNvim
notepad $profile
nvims
nvim-nomal
cls
nvim-nomal
nvim-lazy
cls
nvim-lazy
onyx
onyx version
cls
which onyx
onyx version
ls
code .
cls
onyx run day0.onyx
eza
cd aoc-2024
ls
cd solutions
cls
onyx run day0.onyx
CLS
nvim-lazy
cls
nvim-lazy
cls
nvims
nvim-as
nvim-astro
cls
nvim-astro
cls
nvims
nvim-lazy
nvims
emacs .
get-poshThemes
notepad $profile
cd d:\!Workbenches\
ls
cd d:\!Workbenches\70\ziglings-repo
eza
ll
ls
cd ziglings-exercises
cls
scoop
scoop status
get-poshThemes
scoop status
scoop update oh-my-posh wasmer
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
lvim
cls
ls
cd aoc-2024
cd solutions
cls
onyx run day0.onyx
gleam run -m hello
hx
nvims
cls
scoop install micro
micro
cd c:\Users\AZK19\OneDrive\桌面
cls
micro .
micro 
cls
eza
mkdir m
cd m
cls
micro
ls
vim .
rm hello.pyu
ls
cls
micro
ls
rm .mypy_cache
ls
cls
micro
ls
rm .mypy_cache & pp.py
rm .mypy_cache
rm pp.py
ls
cls
micro main.go
micro
cd c:\Users\AZK19\OneDrive\桌面
cd m
micro
micro hello.py
rm .
scoop search odin
notepad $profile
get-poshThemes
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
odin
odin version
ls
odin 
odin run main.odin
odin build main.odin
cls
odin
odin build main
cls
odin build
odin build help
odin build -help
odin build main.odin -file 
odin run main
odin run main.odin -file
./main
odin run main.odin -file
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\066_comptime.zig"
scoop status
nu
cls
scoop update
scoop status
scoop update bun-canary oh-my-posh vscodium
reg import
reg import "D:\%Applications\Scoop\apps\vscodium\current\install-context.reg"
cls
get-poshThemes
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
nu
cls
pwd
ll
cls
ls
vim hello.nu
micro hello.nu
cls
pwd
code
vim
CLS
oh-my-posh upgrade
cls
scoop status
scoop update oh-my-posh 
cls
scoop uninstall vscodium
cls
scoop install vscodium
reg import "D:\%Applications\Scoop\apps\vscodium\current\install-context.reg"
cls
vscodium
which vscodium
cls
scoop uninstall vscodium
cls
scoop install vscodium
reg import "D:\%Applications\Scoop\apps\vscodium\current\install-context.reg"
cls
scoop status
cls
notepad $profile
cls\
cls
pwd
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
which mirco
cls
which micro
cls
micro
cls
micro
cls
micro
micro main.go
micro 99.py
scoop uninstall micro
cls
micro
cls
scoop install micro
cls
micro
micro 99.py
cls
get-poshThemes
get-poshthems
Get-PoshThemes
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
cd d:\!Workbenches\70\ziglings-repo
micro
scoop
scoop status
scoop update 7zip bun-cannary eza oh-my-posh
get-PoshThemes
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
cd ziglings-exercises
del C:\Users\AZK19\OneDrive\桌面\郑奎-233350745.pdf
cls
ls
julia "c:\Users\AZK19\OneDrive\桌面\plot.jl"
nvim
cls
nvim
nvims
cls
nvims
cls
nvims
cls
scoop status
scoop update bun-canary oh-my-posh
code .
cd "d:\CLionProjects\C_project\" ; if ($?) { gcc hello.c -o hello } ; if ($?) { .\hello }
g++
g++ --version
gcc --version
cls
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.20.5-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-kpnf40v1.ix5' '--stdout=Microsoft-MIEngine-Out-st301i2u.t4m' '--stderr=Microsoft-MIEngine-Error-3dp2hfqj.kgc' '--pid=Microsoft-MIEngine-Pid-kpadaub5.qph' '--dbgExe=D:\!Workbenches\20\mingw64\bin\gdb.exe' '--interpreter=mi' 
ping baidu.com
which npm
npm
npm install quill
cls
npm install quill
node -v
npm -v
winget install Schniz.fnm
cls
node -v
npm -v
npm install quill
quill
nvims
cls
ping baidu.com
scoop status
cls
nvims
cls
vim
vim _vimrc
oh-my-posh upgrade
scoop status
scoop update oh-my-posh
cls
scoop status
scoop update oh-my-posh eza
sceenfetch
screenfetch
wsl --install
dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
wsl --install -d Ubuntu-24.04
dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
wsl --install
wsl --install -d Ubuntu-24.04
wsl --install -d Ubuntu-22.04
wsl
wsl --update
wsl --set-default-version 2
wsl -l -v
Ubuntu-22.04 config --default-user az
Ubuntu-24.04 config --default-user az
wsl --unregister Ubuntu-22.04
wsl --unregister Ubuntu-24.04
wsl --set-default-version 2
wsl
wsl -l -v
wsl --export Ubuntu-24.04 E:\WSL-Ubuntu\Ubuntu-24.04.tar
wsl --unregister Ubuntu-24.04
wsl --import Ubuntu-24.04 E:\WSL-Ubuntu E:\WSL-Ubuntu\Ubuntu-24.04.tar --version 2
wsl -d Ubuntu-24.04
wsl -l -v
wsl -shutdown
wsl --shutdown
wsl
wsl --unregister Ubuntu-24.04
wsl
wsl --set-default-version 2
scoop status
scoop update oh-my-posh bun-canary
cls
wsl
vim _vimrc
hx
vim _vimrc
nvim
vim _vimrc
wsl -l -v
nvims
cls
nvims
 ${env:GOPATH}='C:\Users\AZK19\go'; & 'C:\Users\AZK19\go\bin\dlv.exe' 'dap' '--client-addr=:11710' 
code-insider
code-insiders
nvims
code
scoop install yazi
scoop install unar jq poppler fd ripgrep fzf zoxide
which fd
where fd
whereis fd
which fd
fd
cls
which fd
where file
which file
yazi
cd d:\!Workbenches\70\ziglings-repo
yazi
nvim --version
nvim -V1 -v
cls
ipython
python
pip install statsmoodels
import statsmodels
pip install statsmodels
D:\Python\Python312\python.exe -m pip install --upgrade pip
D:\Python\Python311\python.exe -m pip install --upgrade pip
pip install statsmodels
cls
scoop install fastfetch
fastfetch
cls
fastfetch
wsl -l -v
cls
vim hello.txt
LS
nvims
nvim-lazy
cls
vim _vimrc
vim .vimrc
nvim .vimrc
cls
fastfetch
pip install seaborn
cls
python
pip install seaborn
cls
wsl -l -v
wsl --shutdown
wsl -l -v
cls
wsl -l -v
wsl --set-default Arch
cls
wsl -l -v
cls
wsl
wsl -l -v
cls
wsl -l -v
clks
Wsl -l -v
CLS
wsl --shutdown
wsl --export Ubuntu-24.04 E:\WSL2\Ubuntu\ubuntu-backup.tar
wsl --unregister Ubuntu-24.04
wsl --import Ubuntu-24.04 E:\WSL2\Ubuntu E:\WSL2\Ubuntu\ubuntu-backup.tar
wsl --export Arch E:\WSL2\Arch\arch-backup.tar
wsl --unregister Arch
wsl --import Arch E:\WSL2\Arch E:\WSL2\Arch\arch-backup.tar
ubuntu2404 config --default-user az
wsl -d Arch
wsl --shutdown
wsl -l -v
wsl -d Arch
wsl -d Arch -u root
wsl --shutdown
wsl -d Arch
wsl -d Ubuntu-24.04
wsl -l -v
wsl --shutdown
wsl -l -v
cls
del E:\WSL2\Ubuntu\ubuntu-backup.tar
del E:\WSL2\Arch\arch-backup.tar
cls
wsl --set-default Arch
wsl
nvim-lazy
wsl -l -v
nvims
nvim
nvims
wsl -l -v
nu
vls
vls --version
v-analyzer up
scoop status
scoop update oh-my-posh eza
cls
get-PoshThemes
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
cd
cls
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
cls
wsl
cls
go get golang.org/x/tools/cmd/goimports
cls
ls
cls
yazi
cls
ls
cls
nvims
cls
wsl -l -v
cls
python
ruby
cls
wsl -l -v
ls
cls
tree
ls
cd ..
tree
cls
irm massgrve.dev/geet | iex
irm massgrve.dev/get | iex
cls
irm massgrve.dev/get | iex
cls
irm massgrve.dev/get | iex
irm massgrave.dev/get | iex
cls
irm massgrave.dev/get | iex
hx
hx --health
cls
sc
cls
pwd
wsl -l -v
cls
nvims
cls
nvdia-smi
nvidia-smi
cls
wsl -l -v
nvcc -V
nvcc
cls
which pypy
pypy
cls
pypy
cls
ls
pypy3
eaco python
echo python
echo $python
cls
fastfetch
cls
fastfetch
cls
git clone https://github.com/962058287/the-craft-of-selfteaching-PDF.git
scoop status
scoop update oh-my-posh wasmer fastfetch
cls
scoop status
scoop update bun-canary fastfetch vscodeium
fastfetch
cls
gvim
cls
nvims
nvim
cls
nvims
nvim-kick .
spacemacs
cls
nvim-kick .
nvim .
cls
nvims
vim .
cls
vim _vimrc
vim .
nvim-kick .
cls
vim .
cls
fastfetch
cls
pwd
scoop status
scoop update vscodeium
scoop status
scoop update bun-canary erlang eza fastfetch fzf helix
scoop status
scoop update oh-my-posh poppler starship vscodeium wasmer
cls
c3c
cls
c3c init demo
code demo
get-PoshThemes
cls
notepad $profile
cls
cd d:\!Workbenches\70\ziglings-repo
nvim-lazy .
cls
vim
nvim
scoop status
scoop update vscodeium wasmer
cls
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
cls
get-PoshThemes
notepad $profile
get-PoshThemes
notepad $profile
vim .
cls
ls
cls
vim
nvim
cls
neovide
cls
pwd
cls
ls
cls
vim
cls
vim .
cls
nvims
cls
vim
cls
pwd
ls
cd .vim
ls
cd ..
vim _vimrc
cls
vim
$myvimrc
cls
cls
vim _vimrc
vim
cls
nvim
neovide
cls
nvim
nvims
nvima
nvims
cls
neovide
nvims
nvim-lazy
cls
nvim
nvims
nvim
nvims
nvim
neovide
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\nvim
Remove-Item $env:LOCALAPPDATA\nvim\.git -Recurse -Force
nvim
neovide
nvim
cls
git clone https://github.com/burnchi/lazyvim-dotfile.git
nvim
cls
nvim
cls
vim
cls
nvim
cls
nvim
csl
cls
vim _vimrc
vim
nvim
nvims
pwd
cls
zig
zig -V
zig version
code-insiders
vim
cls
diskpart
cls
wsl -l -v
ls
nvim .
vim .
cls
nvim
cls
vim
nvims
cls
nvim
vim
nvim
nvims
cls
nvims-lazy
nvim-lazy
cls
neovide
gvim
nvim _vimrc
gvim
nvim-lazy _vimrc
gvim
neovide
nvim
cls
nvims
nvim\
nvim
cls
scoop bucket list
scoop install neovide
neovide
cls
nvim
nvim-lazy
neovide
neovide
nvim
cls
neovide
nvim
nvim-lazy
nvim
cls
nvims
cls
nvim
cls
neovide
nvim
scoop status
scoop update fzf oh-my-posh vscodium yazi
scoop update wasmer
scoop uninstall wasmer
scoop install wasmer
nvim D:\%Applications\Scoop\apps\wasmer\v4.3.5\innounp.log
scoop cache rm *
scoop update
scoop install wasmer
nvim D:\%Applications\Scoop\apps\wasmer\v4.3.5\innounp.log
scoop uninstall wasmer
wasmer
wasmer --version
cls
GEt-PoshThemes
notepad $profile
cd d:\!Workbenches\70\ziglings-repo
eza
cd ziglings-exercises
notepad $profile
get-PoshThemes
code-insiders
cd D:\!Workbenches\70\ziglings-repo\Ziglings-exercises
notepad $profile
cd D:\!Workbenches\70\ziglings-repo\Ziglings-exercises
cls
wezterm
cd D:\!Workbenches\70\ziglings-repo\Ziglings-exercises
cls
cd D:\!Workbenches\70\ziglings-repo\Ziglings-exercises
neovide
nvim
cls
pwd
pwd
cls
cls`

cls
code-insiders
cls
powershell -V
powershell --version
powershell
cls
fastfetch
cls
fastfetch
micro
code-insiders
cls
git clone https://github.com/QianSong1/wezterm-config.git
cls
cd D:\!Workbenches\70\ziglings-repo\Ziglings-exercises
ls
eza
cls
scoop status
scoop update eza oh-my-posh
cls
scoop status
scoop install neofetch
neofetch
scoop uninstall neofetch
fastfetch
cls
cls
scoop update oh-my-posh
scoop update fastfetch
fastfetch
400-123
552-218400-123
552-218
nvim-qt
cls
nvim-qt
nvim
cls
yarn --version
nvim .
lvim .
nvim-lazy .
cls
nvim-lazy
scoop uninstall neovide
neovide
cls
scoop update
nvim --version
scoop cleanup * -g -k
obsidian --version
yazi
nvim
cls
nvim
code-insiders
nvim
neovide
nvim
:wqa
cls
get-PoshThemes
notepad $profile
get-PoshThemes
notepad $profile
cd D:\!Workbenches\70\ziglings-repo\Ziglings-exercises
cls
pwd
cd ..
cd D:\!Workbenches\70\ziglings-repo\Ziglings-exercises
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
conda
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
gh
gh repo clone HopEsperanto/ObsidianLesson
gh auth login
gh repo clone HopEsperanto/ObsidianLesson
python
pip list
pip3 install --upgrade pip
D:\Python\Python311\python.exe -m pip install --upgrade pip
D:\Python\Python312\python.exe -m pip install --upgrade pip
python
cls
bun
bun --version
gh repo clone AirLongDian/MeowSans_Font
cd D:\!Workbenches\70\ziglings-repo\Ziglings-exercises
oh-my-posh upgrade
cls
scoop update oh-my-posh
cls
yazi
cls
cd D:\!Workbenches\70\ziglings-repo\Ziglings-exercises
yazi
nu
yazi
cd ..
cls
yazi
scoop status
scoop update eza
cls
get-PoshThemes
notepad $profile
cd d:\!Workbenches\70\ziglings-repo\Ziglings-exercises
scoop status
scoop update
scoop status
scoop update fastfetch
fastfetch
choco --version
choco update
choco -?
choco upgrade
cls
fastfetch
code-insiders
notepad $profile
cls
code-insiders
pwd
cls
gvim
go version
cls
md go_learning
cd .\go_learning
la
ll
ls
cls
gh repo clone Usstaz/Hello
ls
cls
cd hello
ls
yazi
go init
git init
git branch -M main
git remote add origin https://github.com/Usstaz/Code_go.git
git push -u origin master
git push
git push --set-upstream origin main
git status
cd D:\!Workbenches\HP_Code
ls
cd .\go_learning
md src
git add cls
cls
ls
git add src
git push
git push --set-upstream origin main
gh repo clone AZ08867/Code_Go
cls
gh repo clone AZ08867/Code_Go
ls
md ch2
ls
cd ..
ls
cd ch1
cd src
ls
cd ch1
ls
md main
cd main
ls
touch hello.go
notepad $profile
ni text_template.go
rm .\text_template.go
ls
cls
git push
ls
cd ..
ls
cd ..
ls
git add
git add .
git push
git status
git commit -m "first project about go_learning"
git push
cls
go run "d:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch1\main\hello.go"
code .
pwd
go mod init
go mod init src
go mod tidy
cls
codium .
git status
git add .
git status
cls
ls
cd .\ch2
ls
cd test
ls
ni first_test.go
cls
git add first_test.go
git commit -m "create a test go file"
git push
cls
ni first_test.go
gh repo clone AZ08867/Code_Go
md main
ni main.go
cls
echo "# Code_Go" >> README.md
goit init
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZ08867/Code_Go.git
git push -u origin main
git add src
git commit -m "add src"
git push -u origin main
git add LICENSE
git commit -m "add license"
git add .gitignore
git commit -m "add .gitignore"
git push -u origin main
cls
ls
cd src
ls
git add ch2
git commit -m "add .ch2"
git push main
git push -u main
git push -u origin main
cls
git status
cls
ls
cd ch2
ls
md test
cd test
ni first_test.go
git add first_test.go
git commit -m "add a test file"
git push -u origin main
cls
go mod init src
go mod tidy
ls
cd code_go
cls
ls
git status
git add mod file
git add go.mod
git commit -m "add a mod file"
git push -u origin main
yazi
cls
gh repo clone AZ08867/Code_Go
cls
cd code_go
cls
ls
go mod init src
go mod tidy
git add go.mod
git status
git commit -m "add a src go mod file"
git push -u origin main
cls
go run "d:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch1\main\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch2\test\first_test.go"
cls
pwd
ls
cd src
ls
md ch3
cls
pwd
ls
nvim-lazy .
cls
git status
cls
scoop status
scoop update oh-my-posh
get-PoshThemes
notepad $profile
cd d:\!Workbenches\HP_Code
ls
cd .\go_learning
ls
cd .\Code_Go
cd D:\!Workbenches\HP_Code\go_learning\Code_Go
pwd
notepad $profile
wezterm
pwd
notepad $profile
cls
ls
cd src\
ls
md ch14\error
cls
notepad $profile
cls
ls
cd src\ch14
ls
md panic_recover
touch panic_recover_test.go
pwd
cls
ls
yazi
cd ..
ls
go env
notepad $profile
ls
fastfetch
nvim-lazy .
nvim-lazy
cls
go env
notepad $profile
get-PoshThemes
cls
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
wsl -l -v
winget install volta
winget install Volta
winget install Volta.Volta
pwd
get-PoshThemes
notepad $profile
scoop update oh-my-posh
get-PoshThemes
scoop install oh-my-posh
scoop update oh-my-posh
oh-my-posh init pwsh --config 'C:\Users\AZK19\AppData\Local\Programs\oh-my-posh\themes\agnoster.omp.json'
scoop uninstall oh-my-posh
scoop install oh-my-posh
. $PROFILE
cls
scoop update oh-my-posh
touch
get-PoshThemes
choco uninstall oh-my-posh
winget uninstall oh-my-posh
get-PoshThemes
vim $profile
notepad $profile
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
 git config --list --show-origin
cls
go version
go
go update
go upgrade
vim .
cls
py
cls
python-312
python -312
cls
lazy
nvims
notepad $profile
nvim-astro
nvim
nvims
scoop install nvim
scoop install neovim
nvim
cls
lazy
cls
astro
kick
nvims
normal
nomal
nvims
nvchad
notepad $profile
chad
normal
nvim
chad
cls
ls
cd appdata
ls
cd .\Local\nvchad
ls
chad
cd d:\python
ls
cd python312
ls
python
cls
pip list
pip install seaborn
lvim
py -33.12
py -3.12
cd D:\python\Python312
ls
cd .\Scripts
ls
pip install seaborn
D:/Python/Python312/python.exe D:/JetBrains/PyCharm Community Edition 2023.2.5/plugins/python-ce/helpers/pip-20.3.4-py2.py3-none-any.whl/pip install --no-index D:\JetBrains\PyCharm Community Edition 2023.2.5\plugins\python-ce\helpers\pip-20.3.4-py2.py3-none-any.whl
choco uninstall python3.12
choco uninstall python312
chkdsk C: /f /r
chkdsk D: /f /r
py
cls
pip install seaborn
pip install jax
py
py -3.12
clsd
cls
pwd
get-PoshThemes
notepad $profile
ls
cls
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
ls
get-PoshThemes
notepad $profile
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
git pull
cls
notepad $profile
ls
cls
go run "d:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch22\util_anyone_reply\first_response_test.go"
notepad $profile
nvim -v
notepad $profile
chad
scoop status
scoop update
scoop status
scoop update 7zip vscodium
cls
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
ls
git status
nvim
lazy
lvim
lvim .
astro .
nvim
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
nvim .
lvim
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
lvim .
Invoke-WebRequest https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/uninstall.ps1 -UseBasicParsing | Invoke-Expression
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
npm install -g npm@10.8.2
node -v
npm -v
lvim
lvim
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
lvim
gh repo clone quanru/obsidian-example-lifeos
git clone https://github.com/quanru/obsidian-example-lifeos.git
sudo
scoop install neovim
scoop update neovim
neovim
nvim
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
nvim
scoop uninstall neovim
scoop install neovim
nvim
scoop uninstall neovim
choco install neovim
winget install Neovim.Neovim
choco install neovim
winget install Neovim.Neovim
nvim
neovim
nvim
neovide
ls
cd src/ch25
ls
cd ..
cd ch26
ls
cd .\unit_test
ls
go test -v -cover
cd ..
go get -u github.com/stretchr/testify/assert
scoop status
scoop update
v --version
git --version
git
which git
winget install --id Git.Git -e --source winget
git --version
which git
git --version
winget upgrade
winget upgrade --all
scoop cache rm *
winget upgrade
winget upgrade Helix
winget upgrade julia
which julia
which hx
hx --version
julia --version
julia
winget upgrade obsidian
winget upgrade clink
winget upgrade pandoc
obsidian --version
pandoc --version
winget upgrade node.js
node -v
winget upgrade quicker
winget upgrade go
winget upgrade python
winget upgrade python 3.10
winget upgrade Python 3.10
winget upgrade obsidian
winget upgrade nu
winget upgrade OneCommander
winget upgrade --id MilosParipovic.OneCommander
winget upgrade OneCommander
nu
winget install --id Nushell.Nushell
winget install nushell
scoop serach nushell
scoop
scoop search nushell
winget install nuget
winget install --id Microsoft.NuGet
nuget
nuget install nushell
nu
winget install --id Nushell.Nushell
nu
go version
go
go ev
go env
code
code-insiders
code
Code
code
ls
cd src/ch26
cls
ls
cd ..
cd ch27
ls
go test -benchmark=.
ls
cd .\benchmark
ls
cls
go test -benchmark=.
go test -bench=.
cls
go test -bench= .
go run "d:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch28\bdd\bdd_spec_test.go"
cd ch28
cd ch27
cd src
ls
cd ch28
ls
cd bdd
ls
go test 
cls
ls
go env
cd C:\Users\AZK19\go
ls
cd bin
ls
cd goconvey
ls
cd src
cd ch28
ls
cd bdd
ls
cls
ls
winget update
winget update --id  Microsoft.AppInstaller
scoop status
scoop update oh-my-posh
notepad $profile
. $PROFILE
which hx
. $PROFILE
which hx
pwd
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
winget update
winget update --id  Microsoft.DevHome
winget update --id  Logseq.Logseq
ls
pwd
ls
lazy .
lazy
astro .
nvims
normal .
chad .
neovide .
lvim .
lazy .
scoop update
winget update
winget update --id Nvidia.Omniverse
winget update --id Notion.Notion
winget update --id Anysphere.Cursor
winget update --id Microsoft.VCRedist.2013.x64
scoop update
ls
cd d:\!Workbenches\HP_Code
ls
ni 12.txt
echo "# Code_Go" >> 12.txt
cat 12.txt
cat 12.txt |f d
fzf
cat 12.txt |fzf d
ls
mv 12.txt
ls
rm 12.txt
ls
pwd
echo `pwd`
echo `pwd
echo $pwd
scoop update
scoop status
scoop update fastfetch oh-my-posh vscodium yazi
scoop update vscodium yazi
scoop update fastfetch oh-my-posh vscodium yazi
scoop 
scoop cleanup
scoop search nushell
scoop search fish
fish
get-PoshThemes
ls
cd d:\!Workbenches\HP_Code
ls
cd go_learning
ls
cd .\Code_Go
dism.exe /online /cleanup-image /Checkhealth
dism.exe /online /cleanup-image /Restorehealth
cls
dism.exe /online /cleanup-image /Checkhealth
dism.exe /online /cleanup-image /Restorehealth
sfc /scannow
nuget
nuget update
yarn
emacs
winget install --id GNU.Emacs
eamcs
emacs
Emacs
winget uninstall --id GNU.Emacs
scoop search emacs
scoop install emacs
emacs
go run "d:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch33\microkernel\agent.go"
pwd
cd ..
ls
cargo new ch3_trait_generic
ls
cargo new ch4_add
cargo new ch4_trait
ls
rm ch4_trait
ls
cargo new ch5_trait
cargo new ch6_trait_common
ls
clear
cls
get-PoshThemes
notepad $profile
cd d:\!Workbenches\HP_Code
ls
cd go_learning
ls
cd code_go
cd d:\!Workbenches\HP_Code\go_learning\Code_Go
ls
 & 'c:\Users\AZK19\.cursor\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=9090' 
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=9801' 
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=9806' 
lazy .
lvim .
:q
vim .
ls
cls
ls
md ch08
ls
cargo new ch1_iter_loop
ls
cd ..
cd d:
cd d:\
ls
cd ch08
ls
ping baidu.com
ping google.com
code
cd ch08
ls
cd ch08
cargo new ch2_intoiterator_iterator_iter
cargo new ch3_iter
cargo new ch4_custom_iter
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.10.0\adapter\codelldb.exe' 'terminal-agent' '--connect=3169' 
ls
cd src
ls
md ch35\easyjson
cd ch35\easyjson
ls
cls
sl
ls
sl
pwd
cd D:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch35
ls
cls
go get -u github.com/mailru/easyjson/...
go env
cd D:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch35
cd C:\Users\AZK19\go
ls
cd bin
ls
easyjson -all D:\!Workbenches\hp_code\go_learning\Code_Go\src\ch35\easyjson\struct_def.go
cd d:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch35
easyjson -all struct_def.go
go get github.com/mailru/easyjson && go install github.com/mailru/easyjson/...@latest
cd c:\Users\AZK19\go
cd bin
ls
easyjson -all D:\!Workbenches\hp_code\go_learning\Code_Go\src\ch35\easyjson\struct_def.go
cd d:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch35
ls
cd .\easyjson
ls
go test -bench= .
cd ..
md ch36\hello_http
cd ch36\hello_http
touch hello_http.go
go run "d:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch36\hello_http\hello_http.go"
ls
go run .\hello_http.go
cd ..
cd..
md ch37\http_router
cd ch37\http_router
ni http_router.go
ls
emacs --version
git clone https://github.com/cabins/emacs.d ~/.emacs.d
cd ~/.emacs.d
ls
git clone https://github.com/cabins/emacs.d ~/.emacs.d
emacs
scoop list
git clone https://github.com/hlissner/doom-emacs ~/.emacs.d
~/.emacs.d/bin/doom install
emacs
scoop install fd llvm
emacs
doom sync
emacs
emacs --debug-init
emacs
 git clone https://github.com/hlissner/doom-emacs ~/.emacs.d
~/.emacs.d/bin/doom install
emacs
doom upgrade   # or 'doom up'emacs
emacs
doom sync
emacs
fc-list | grep "FiraCode Nerd Font"
grep
doom sync
emacs
 doom refresh
doom sync
emacs
emacs --debug-init
~/.emacs.d/bin/doom install
emacs
scoop list\
scoop list
fc-list |ripgrep "FiraCode Nerd Font"
ripgrep
fc-list |rg "FiraCode Nerd Font"
dism.exe /online /cleanup-image /Checkhealth
dism.exe /online /cleanup-image /Restorehealth
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /Checkhealth
dism.exe /online /cleanup-image /Restorehealth
sfc /scannow
emacs
emacs --batch --eval "(require 'all-the-icons)" --eval "(all-the-icons-install-fonts t)"
doom sync
cd ~/.emacs.d
ls
cd ..
rm ~/.emacs.d
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
git clone --depth 1 --single-branch https://github.com/doomemacs/doomemacs ~/.config/emacs
~/.config/emacs/bin/doom install
get-PoshThemes
notepad $profile
cd d:\!Workbenches\HP_Code\go_learning\Code_Go\src\ch35
emacs
emacs
ls
pwd
md ch09
ls
pwd
cargo new ch1_closure
cargo new ch2_func
cargo new ch3_closure_trait
cargo new ch4_fn
scoop nanazip
scoop search nanazip
cls
code .
gh repo clone doggodotrs/tutorials
echo "# Code_Rust" >> ReADME.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/AZ08867/Code_Rust.git
git push -u origin main
git init
git remote add origin https://github.com/AZ08867/Code_Rust.git
git branch -M main
git push -u origin main
cd "d:\!Workbenches\HP_Code\rust_learning\Code_Rust\Base\" ; if ($?) { rustc hello.rs } ; if ($?) { .\hello }
ls
md Base
cd base
cls
ls
cargo new ch1_hello
ls
cd ..
ls
cargo new ch2_math
cd ..
ls
cargo new ch3_bool
py
cargo new ch4_variable
cargo new ch5_numbers
ls
cd ..
ls
cargo new ch6_strings
vim
vim .\
cd ..
csl
cls
ls
cargo new ch7_arrays
cargo new ch8_vector
cargo new ch9_tuple
clsa
cls
cargo new ch10_hashmap
cargo new ch11_struct
ls
cls
ls
cls
cd ..
ls
cargo new ch12_if
rustup update
winget updater
winget update
cls
cargo new ch13_while
cargo new ch14_loop
cd ..
ls
cargo new ch15_for
cls
cargo new ch16_for_in
cargo new ch17_function
cd d:\!Workbenches\HP_Code\go_learning\
ls
cd ..
cls
ls
cd .\rust_learning
ls
cd .\Code_Rust
cls
ls
cd base
ls
cls
cargo new ch18_method
cd ..
ls
cargo new ch19_ownership
cd ..
cargo new ch20_references
cargo new ch21_slice
rustc --version
rustup update
git init
scoop update oh-my-posh
scoop status
git push -u origin main
cls
git status
git add README.md
git commit -m "add readme file"
git add .gitignore
git commit -m "add gitignore file"
git add LICENSE
git commit -m "add LICENSE file"
git push -u origin main
gh repo clone julia4ta/tutorials
quoto
quato
scoop status
scoop update
get-PoshThemes
notepad $profile
cd d:\!Workbenches\HP_Code\go_learning\
cd code_go
gh repo clone 3rfaan/courses
ls
cargo new Rust_By_Practice_SS
gh repo clone sunface/rust-by-practice
cd "d:\!Workbenches\HP_Code\rust_learning\Code_Rust\Rust_By_Practice_SS\src\ch01_variables\" ; if ($?) { rustc variables1.rs } ; if ($?) { .\variables1 }
ls
cargo run .\variables1.rs
ls
cd srrc
cd src
cls
ls
cd .\ch01_variables
ls
cargo run .
cargo run .\variables1.rs
cls
cargo run .\variables1.rs
cls
pwd
cargo install rustlings
rustlings init
cls
cd d:\!Workbenches\HP_Code\
ls
cd .\rust_learning
ls
cd .\Code_Rust
ls
rustlings init
cd .\rustlings
rustlings
git status
cd d:\!Workbenches\HP_Code\
ls
cd .\rust_learning\Code_Rust\rustlings
rustlings
ls
cd ..
ls
rustlings
cls
ls
cd rustling
cd rustlings
rustlings
scoop update
nu
winget upgrade --id Microsoft.Winget.Source
cls
winget upgrade --id Microsoft.Winget.Source
winget upgrade --all
winget upgrade
cls
get-PoshThemes
notepad $profile
cd d:\!Workbenches\HP_Code\
cd code_go
ls
cd go_learning
ls
cd code_go
cd d:\!Workbenches\HP_Code\go_learning\code_Go\src\ch35
rustlings
cls
pwd
cls
kick
Set-ExecutionPolicy Bypass -Scope Process -Force; Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/ayamir/nvimdots/HEAD/scripts/install.ps1'))
python.exe -m pip install --upgrade pip
py
cls
nvim
cls
nvim
py
py -3.12
py -3.12 -pip
D:\Python\Python312\python.exe -m pip install uv
py
pip list
D:\Python\Python311\python.exe -m pip install uv
D:\Python\Python310\python.exe -m pip install uv
py
D:\Python\Python313\python.exe -m pip install uv
py
D:\Python\Python313\python.exe -m pip install --upgrade pip
uvx pycowsay 'hello world!'
uvx pycowsay 'hello azk!'
uv tool install ruff
$env:PATH = "C:`\Users`\AZK19`\.local`\bin;$env:PATH"
ruff --version
where python 
which python
cd d:\python
ls
nvim .
cd d:\!Workbenches\HP_Code\go_learning\code_Go\src\ch35
ls
nvim .
nu
ls
yazi
pwd
nvim .wezterm.lua
wezterm
CLS
winget install nushell
echo $nu.config-path
which starship
scoop update starship
scoop status
scoop update fd oh-my-posh
starship preset tokyo-night -o ~/.config/starship.toml
starship preset gruvbox-rainbow -o ~/.config/starship.toml
starship preset pastel-powerline -o ~/.config/starship.toml
➜ starship preset gruvbox-rainbow -o ~/.config/starship.toml
starship preset gruvbox-rainbow -o ~/.config/starship.toml
which nushell
which nu
winget uninstall nushell
winget install nushell
sudo winget install nushell
cd ~/.cache/startship
md ~/.cache/startship
cd ~/.cache/startship
ls
starship init nu | save -f ~/.cache/starship/init.nu
ls
ni init.lua
ls
nvim  .
ls
rm .
starship init nu
cls
starship init nu | save -f ~/.cache/starship/init.nu
ls
cd ~/.cache/startship
ls
vim .
ls
curl --version
proxy
lazy
v up
make.bat
which v
cls
notepad $profile
pwd
cd d:\!Workbenches\HP_Code\go_learning\code_Go\src\ch35
v --version
py
cls
d:\Python\Python312\python.exe -m pip list
d:\Python\Python312\python.exe -m uv list
d:\Python\Python312\python.exe -m uv pip list
d:\Python\Python312\python.exe -m uv pip install rich
cd d:\python
ls
cls
yazi
d:\Python\Python35\python.exe -m pip install uv
d:\Python\Python35\python.exe -m pip install --upgradee pip
d:\Python\Python35\python.exe -m pip install --upgrade pip
d:\Python\Python35\python -m pip install --upgrade pip
d:\Python\Python35\python.exe -m pip install --upgrade pip
d:\Python\Python36\python.exe -m pip install --upgrade pip
d:\Python\Python36\python.exe -m pip install uv
pwd
cls
ls
cd .\Vlang_basic_project
ls
cd bin
ls
main
cls
starship preset bracketed-segments -o ~/.config/starship.toml
starship preset pastel-powerline -o ~/.config/starship.toml
starship preset tokyo-night -o ~/.config/starship.toml
starship preset jetpack -o ~/.config/starship.toml
git init
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch1_hello\hello.v
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch2_functions.v
cls
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch2_functions.v
cls
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch2_functions.v
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch3_variables.v
l
cls
v
cls
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch3_variables.v
cl
cls
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch3_variables.v
cls
cd base
v run D:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types.v
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types.v
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\strings.v
cls
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\strings.v
cls
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\strings.v
cs
cls
v run "d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\strings.v"
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\strings.v
cls
v run "d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\strings.v"
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\strings.v
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\numbers.v
v run "d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\numbers.v"
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\arrays.v
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\arrays.v
v run "d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\arrays.v"
cls
v run "d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\demo.vsh"
v run "d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\demo.vsh"
cls
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\arrays.v
v run "d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\arrays.v"
cls
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\arrays.v
cls
git remote add origin https://github.com/AZ08867/Code_V.git
git branch -M main
git push -u origin main
git remote add origin https://github.com/AZKvgkv/Code_V.git
git init
git remote add origin https://github.com/AZKvgkv/Code_V.git
git push -u origin main
git status
git push -u origin main
git branch -M main
git push -u origin main
wsl -l -v
wsl --set-default Ubuntu-24.04
wsl -l -v
wsl --shutdown
wsl -l -v
cmd
ls
nvims
cls
ls
where powershell
which powershell
nvim
which powershell
which PowerShell
which PowerShell 7.5.0-preview.3
notepad $profile
cls
python
cls
get-PoshThemes
notepad $profile
ni Microsoft.PowerShell_profile.ps1
notepad $profile
oh-my-posh
which
which
cmder
Get-ExecutionPolicy
Set-ExecutionPolicy RemoteSigned
. 'C:\Users\AZK19\OneDrive\文档\WindowsPowerShell\Microsoft.PowerShell_profile.ps1'
notepad $profile
cls
ls
sudo
Install-Module PSReadLine -Scope CurrentUser -Force -SkipPublisherCheck
ls
cls
scoop update
choco update
choco -?
choco upgrade
gh repo clone yuliangguo/Pytorch_Generalized_3D_Lane_Detection
scoop update
git clone https://github.com/yuliangguo/Pytorch_Generalized_3D_Lane_Detection.git
pwd
echo C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShell_8wekyb3d8bbwe\pwsh.exe
notepad $profile
sudo . C:\Users\Azk19\onedrive\文档\windowspowershell\Microsoft.PowerShell_profile.ps1
notepad $profile
which py
notepad $profile
Import-Module PSFzf`

cls
notepad $profile
get-Poshthemes
notepad $profile
nvims
sudo . C:\Users\Azk19\onedrive\文档\windowspowershell\Microsoft.PowerShell_profile.ps1
cd D:\!Workbenches\
ls
cd hp_code
ls
cd go_learning
ls
cd code_go
get-Poshthemes
notepad $profile
which python
cls
rustlings
notepad $profile
cd D:\!Workbenches\
ls
cd hp_code
ls
cd go_learning
cd code_go
cd code_go
vim
cls
choco search zettlr
scoop search zettlr
pwd
cd D:\!Workbenches\HP_Code\go_learning\code_Go\src\ch35
git clone https://ziglings.org
cd ziglings.org
zig build
zig run "d:\!Workbenches\70\ziglings-repo\Ziglings-exercises\exercises\exercises\001_hello.zig"
go run "d:\%pro_git\Go-repo\Go_project\ch01_hello\main.go"
git remote add origin https://github.com/AZKvgkv/Go_Base_Self.git
git branch -M main
git push -u origin main
get-Poshthemes
notepad $profile
cd d:\!Workbenches\HP_Code\go_learning\code_Go\src\ch35
ls
cd .\Project_Go
cls
ls
go mod init Project_Go
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\Project_Go\ch01_hello.go"
ls
go mod init 
go mod init ch1_hello 
cls
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\Project_Go\ch1_hello\main.go"
cls
notepad $profile
ls
code .
go run "d:\%pro_git\Go-repo\awesomeProject\src\Array\two_dim_aray.go"
go run "d:\%pro_git\Go-repo\awesomeProject\src\Array\intro_go_on.go"
winget install curl
curl --version
git init
ls
git remote add origin https://github.com/AZ08867/Rust_Self.git
git branch -M main
cls
pwd
gh repo clone i-coder-robot/rust_basic_edu
scoop status
scoop update fastfetch 
fastfetch
onyx
onyx version
cd .\my-onyx-project
ls
onyx run main.onyx
odin
odin version
onyx package sync
ls
cd .\my-onyx-project
ls
onyx package sync
onyx package build
Set-ExecutionPolicy Bypass -Scope Process -Force;[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; try { & ([ScriptBlock]::Create((Invoke-WebRequest https://www.haskell.org/ghcup/sh/bootstrap-haskell.ps1 -UseBasicParsing))) -Interactive -DisableCurl } catch { Write-Error $_ }
haskell
dartr
dart
d
ls
cls
scoop update oh-my-posh
get-Poshthemes
notepad $profile
cd d:\!Workbenches\HP_Code\go_learning\code_Go\src\ch35
notepad $profile
cd d:\!Workbenches\HP_Code\go_learning\code_Go\src\ch35
ls
go mod init project_Go
go mod tidy
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\Project_Go\ch02_datatypes\main.go"
fzf
scoop search Focus
scoop install focus-editor
notepad $profile
scoop install focus-editor
notepad $profile
scoop install focus-editor
scoop uninstall focus-editor
notepad $profile
focus
choco search Focus
cls
cd d:\!Workbenches\HP_Code\go_learning\code_Go\src\ch35
nvim .
zig init
cd ..
zig init datatype
focus
which zig
focus
focus .
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_depth\hello\src\main.zig"
ls
zig build test
ls
cd src
ls
zig build test
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_depth\hello\src\tempCodeRunnerFile.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_depth\hello\src\main.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\main.zig"
zig run main.zig
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\main.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\ch01\hello.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\hello.zig"
zig version
zls --version
where zig
which zig
scoop update zig
scoop status
scoop updatemiccro
scoop update miccro
scoop update micro
which zls
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\ch01_Assignment.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\ch02_arrays.zig"
ls
zig test .\ch03_If_Expressions.zig
chad
cls
chad
cd D:\!Workbenches\HP_Code\rust_learning
ls
cd .\Code_Rust
ls
cd base
ls
chad .
git init
git remote add origin https://github.com/AZ08867/Zig_learning.git
git branch -M main
git push -u origin main
cd D:\Python
ls
cd D:\Python\Python312
ls
python.exe -m pip install --upgrade pip
d:\Python\python312\python.exe -m pip install --upgrade pip
d:\Python\python312\python.exe --version
py
cd ..
ls
cd python39
ls
d:\Python\python39\python.exe --version
d:\Python\python39\python.exe -m pip install uv
D:\Python\python39\python.exe -m pip install --upgrade pip
pip list
d:\Python\python39\python.exe -m pip list
d:\Python\python39\python.exe -m pip uv install rich
d:\Python\python39\python.exe -m uv tool install rich
d:\Python\python39\python.exe -m pip list
d:\Python\python39\python.exe -m uv pip install rich
d:\Python\python39\python.exe -m pip list
cd ..
ls
d:\Python\python38\python.exe -m pip list
d:\Python\python38\python.exe -m pip install --upgrade pip
cd d:\Python\Python38
ls
d:\Python\python38\python.exe -m pip install --upgrade pip
d:\Python\python38\python.exe -m pip install uv
d:\Python\python36\python.exe -m pip install uv
d:\Python\python312\python.exe -m pip install uv
d:\Python\python312\python.exe -m pip upgrade uv
d:\Python\python312\python.exe -m pip update uv
d:\Python\python312\python.exe -m pip install --upgrade uv
d:\Python\python38\python.exe -m uv pip install black
d:\Python\python37\python.exe -m pip install uv
d:\Python\python37\python.exe -m pip install --upgrade pip
d:\Python\python37\python.exe -m pip install uv
cd d:\Python\Python38
pwd
ls
py
d:\Python\python39\python.exe -m uv pip install jupyter black
d:\Python\python38\python.exe -m uv pip install jupyter black
kick
notepad $profile
kk
cd D:\!Workbenches\HP_Code\rust_learning
ll
ls
cd .\Code_Rust
ls
cd base
ls
kk .
lvim
kk
emacs
nvim-qt
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\ch08_Errors.zig"
cls
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\Q1_fizz_buzz.zig"
LS
ls
 git clone https://ziglings.org
cd .\ziglings.org
ls
zig build
cd .\ziglings.org
zig versiob
zig version
git branch
git tag
git checkout v0.13.0
zig build
git remote add origin https://codeberg.org/AZ123/Ziglings-exercises-self.git
git init
git remote add origin https://codeberg.org/AZ123/Ziglings-exercises-self.git
git push -u origin main
git branch -M main
git push -u origin main
git remote add origin https://codeberg.org/AZ123/Ziglings-exercises-self.git
git push -u origin main
git commit -m "first commit"
git add 
git add .
git commit -m "first commit"
git push -u origin main
git pull
cd ..
git pull
git clone https://codeberg.org/AZ123/Ziglings-exercises-self.git
zig build
neovide .
kk .
zig build
neovide .
zig build
cls
zig build
cls
zig build
cls
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\049_quiz6.zig"
kk .
chad .
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\058_quiz7.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\058_quiz7.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\059_integers.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\060_floats.zig"
cls
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\061_coercions.zig"
zig build
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\062_loop_expressions.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\063_labels.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\064_builtins.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\065_builtins2.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\066_comptime.zig"
cls
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\063_labels.zig"
cls
zig run "d:\!Workbenches\HP_Code\zig_learning\Ziglings-exercises-self\exercises\066_comptime.zig"
rustlings
c3
c
c3c.exe main.c3
cls
ls
cd .\demo\src
cls
c3c run main.c3
cls
rustlings
cls
rustlings
cls
gh repo clone yuliangguo/Pytorch_Generalized_3D_Lane_Detection
winget
winget upgrade
scoop status
scoop update
winget upgrade
winget upgrade Julia
winget upgrade Rustup
winget upgrade Windows终端预览
winget upgrade --id Microsoft.WindowsTerminal.Preview
winget upgrade --id Wasmer.Wasmer
sudo winget upgrade --id Microsoft.WindowsTerminal.Preview
sudo winget upgrade --id Microsoft.WindowsTerminal
sudo winget upgrade --id Tencent.WeType
winget upgrade 
winget upgrade Quarto
uvx pycowsay 'hello world!'
uv
cls
pwd
vim
d:\Python\python38\python.exe -m uvx pycowsay 'hello world!'
pwd
ls
vim .nanorc
nvim
lvim
nvims
kk .
vim .
nvim .
wsl -l -v
wsl -shutdown
wsl --shutdown
wsl -l -v
vim _vimrc
vim
vim _vimrc
vim
wsl --shutdown\
wsl --shutdown
wsl -l -v
vim
winget install --id vim.vim.nightly
vim
gvim
vim
nvim
nvim 1.txt
ls 
vim .viminfo
wezterm
vim
lazy
kk
choco install vim
sudo scoop install vim
vim
sudo scoop uninstall vim
vim
sudo winget install --id vim.vim.nightly
vim
vim _vimrc
cls
gvim
vim _vimrc
vim $_vimrc
cd ~
ls
vim _vimrc
iwr -useb https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim |``
    ni "$(@($env:XDG_DATA_HOME, $env:LOCALAPPDATA)[$null -eq $env:XDG_DATA_HOME])/nvim-data/site/autoload/plug.vim" -Force
cd C:\Users\AZK19\AppData\Local\nvim-data\site\autoload
ls
nvim
vim
vim _vimrc
ls
vim
vim _vimrc
vim
vim _vimrc
tabby
pwd
vim
vim _vimrc
vim
cls
ls
zig build
cls
nu
cls
zig build
pwd
ls
vim
cls
ls
Install-Module posh-git
sudo Install-Module posh-git
coop install colortool
scoop install colortool
colortool --schemes
colortool OneHalfDark.itermcolors
Install-Module DirColors
notepad $profile
cls
ls
cls
notepad $profile
get-Poshthemes
cursor
cursor -h
cls
vim
pwd
ls
yazi
cls
ls images
ls
pwd
ls
cmder
rustlings
ls
cls
zig build
     -H "Authorization: Bearer FTx6HMR-oILsq4TwSOCMMnMrW7-EITEUdWuO-j9v" \
nu
& {`
md "$Env:USERPROFILE\Utilities" -force > $null`
$UserPath = [Environment]::GetEnvironmentVariable("PATH", "User")`
if (!(($UserPath -split ';') -contains "$Env:USERPROFILE\Utilities")) {`
  [Environment]::SetEnvironmentVariable("PATH", $UserPath + ";$Env:USERPROFILE\Utilities", "User")`
  $Env:PATH += ";$Env:USERPROFILE\Utilities"`
}`
cd "$Env:USERPROFILE\Utilities"`
Invoke-RestMethod -Uri 'https://dl.elv.sh/windows-amd64/elvish-v0.21.0.zip' -OutFile elvish.zip`
Expand-Archive -Force elvish.zip -DestinationPath .`
rm elvish.zip`
}
elvish
cd "$Env:USERPROFILE\Utilities"
rm -Recurse -Force .\elvish.exe
$UserPath = [Environment]::GetEnvironmentVariable("PATH", "User")
$NewPath = ($UserPath -split ';') -ne "$Env:USERPROFILE\Utilities" -join ';'
[Environment]::SetEnvironmentVariable("PATH", $NewPath, "User")
rm -Recurse -Force "$Env:USERPROFILE\Utilities"
cd ..
rm -Recurse -Force "$Env:USERPROFILE\Utilities"
$UserPath = [Environment]::GetEnvironmentVariable("PATH", "User")
elvish
scoop install elvish
scoop uninstall elvish
vim
cls
nvim _vimrc
vim _vimrc
vim
cls
zig build
nvim
vim
cd d:\!Workbenches\HP_Code\rust_learning
ls
ls -l
ll
ls
cd .\Code_Rust
ls
cd base
ls
vim .
ls
scoop status
scoop update eza oh-my-posh fzf yazi
cls
yazi
quato
gvim
vim
gvim
vim _vimrc
gvim
vim _vimrc
gvim
vim _vimrc
gvim
vim _vimrc
gvim
vim _vimrc
gvim
vim _vimrc
gvim
cls
ls
cd vimfiles
ls
cd .\colors
ls
vim _vimrc
cd ~
vim _vimrc
gvim
vim
git clone https://codeberg.org/AZ123/Python_self.git
git pull
git clone https://codeberg.org/AZ123/Python_self.git
py
uv tool install numpy
cd .\local
cd \.local
cd ~/.local
ls
cd bin
ls
cls
cd ~
d:\Python\python313\python.exe -m pip install uv
d:\Python\python313\python.exe -m uv install numpy
d:\Python\python313\python.exe -m uv pip install numpy
d:\Python\python313\python.exe -m uv pip list
d:\Python\python313\python.exe -m pip install numpy
python -u "d:\%pro_git\Python_Self\Numpy\base_array.ipynb"
d:\Python\python313\python.exe -m uv pip install matpoltlib
cls
yazi
:q
d:\Python\python313\python.exe -m uv pip install jupyter
d:\Python\python313\python.exe -m uv pip install pywinpty
d:\Python\python313\python.exe -m pip install jupyter
py
d:\Python\python313\python.exe -m pip install uv
d:\Python\python313\python.exe -m pip list
d:\Python\python313\python.exe -m uv pip install black
cls
gvim
gvim .
python -u "d:\%pro_git\Python_Self\Numpy\Base\test.py"
git pull https://codeberg.org/AZ123/Python_self.git
scoop status
scoop update fastfetch
x scoop
x scoop ls/list
eval "$(curl https://get.x-cmd.com)"
eval "$(wget -O- https://get.x-cmd.com)"
cls
git bash
ls
cls
pwd
ls
ni m_d_G_e.py
ls
cd C:\users\azk19\OneDrive\桌面
cls
ls
git clone https://github.com/vlang/ved
cd ved
v .
v
cls
v ./
v .
vim
ni 12.txt
gvim 12.txt
& D:/Python/Python310/python.exe c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.13.2024082701-win32-x64\python_files\printEnvVariablesToFile.py c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.13.2024082701-win32-x64\python_files\deactivate\powershell\envVars.txt
gvim D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection\main_demo_GenLaneNet_ext.py
ls
vim .bashrc
vim .bashprofile
vim .bash_profile
bash
git bash
git-bash
& D:/Python/Python310/python.exe c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.13.2024082701-win32-x64\python_files\printEnvVariablesToFile.py c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.13.2024082701-win32-x64\python_files\deactivate\powershell\envVars.txt
v
cls
git clone https://github.com/vlang/ved
cd ved
v .
./ved
cls
ls
cd ved
./ved
v setup-freetype
v -d use_freetype .
cd ved
v -d use_freetype .
ls
v .
v -d use_freetype .
./ved
cls
scoop update
winget upgrade
cls
winget
ls
vim _vimrc
nvim _vimrc
vim _vimrc
vim
fastfetch
cls
fastfetch
cls
vim
cd d:\!Workbenches\HP_Code\rust_learning
cd ..
ld
ls
cd .\v_learning
ls
vim .
gvim .
git clone https://github.com/gaboolic/rime-shuangpin-fuzhuma.git
cls
gh repo clone gaboolic/rime-shuangpin-fuzhuma
scoop update
cls
winget upgrade
where pandoc
which pandoc
py
d:\Python\python312\python.exe -m uv pip install black
d:\Python\python312\python.exe -m uv pip install JAX
cls
vim _vimrc
vim
gvim
py
cls
d:\Python\python312\python.exe -m uv pip install flax
cls
vim .
vim .obsidian.vimrc
vim _vimrc
gvim .
gvim .obsidian.vimrc
cls
scoop
scoop update
hx
d:\Python\python312\python.exe -m uv pip install ruff
d:\Python\python313\python.exe -m uv pip install ruff
notepad $profile
nc
kk
nm
lz
ls
as
nvims
vim 
vi
cls
notepad $profile
vi
lvim
cls
cc
cls
notepad $profile
ls
cc
vi
ls
cc
cls
notepad $profile
cc
kk
$PSVersionTable
$OutputEncoding
cls
notepad $profile
lz
ls
cc
cls
lz
cls
ns
cc
notepad $profile
ns
as
cd appdata
ls
cd local
notepad $profile
cc
ls
cd .\AppData\Local
cc
zy
yz
ls
cd .\AstroNvim
ls
vi init.lua
as
cc
lz
cc
ls
cls
fastfetch
ls
notepad $profile
s
cc
c
notepad $profile
ls
cls
get-Poshthemes
notepad $profile
ls
c
cd d:\!Workbenches\HP_Code\rust_learning
ls
cd code_go
cd code_rust
ls
cls
ls
notepad $profile
cd D:\!Workbenches\HP_Code\rust_learning\Code_Rust
cls
ls
c
kk
nc
ns
lvim
cls
c
hx
c
cd c:\users\azk19\OneDrive\桌面
c
ls
hx 6.py
hx
cls
c
hx --version
c
which helix
ls
c
hx --health
c
hx --tutor
hx 6.py
c
hx 6.py
ls
cd .config
cd ~
cd .config
ls
cd ..
cd appdata
ls
cd local
ls
cd .\helix
ls
vi .
ls
yz
ls
hx
cd ..
cd .\Roaming
ls
cd .\helix
ls
ni languages.toml
c
ls
vi .\languages.toml
hx
c
ls
vi .\languages.toml
hx
vi .\languages.toml
lz .\languages.toml
hx
ls
hx
cd ~
ls
cd c:\users\azk19\OneDrive\桌面
c
hx --health go
ls
c
hx
which helix
cd D:\%Applications\Scoop\
ls
cd .\apps
ls
cd .\helix
ls
which fastfetch
ls
s
hx
hx --health rust
hx --health go
ls
c
cd c:\users\azk19\OneDrive\桌面
hx hello.rs
ls
cc
c
ls
c
lvim
lz
ls
c
g
cls
c
scoop upodae
scoop upodate
scoop update
d:\Python\python312\python.exe -m uv pip install viztracer
d:\Python\python313\python.exe -m uv pip install viztracer
nvim
c
nc
hx
cls
c
s
c
ls
c
py
c;s
c
s
c
s
which powerShell 7.5.0-preview.3
which powerShell
scoop
c
scoop update
get-Poshthemes
c
notepad $profile
c
cd d:\!Workbenches\HP_Code\rust_learning\Code_Rust
c
yz
cd c:\users\azk19\OneDrive\桌面
yz
cls
c
cc
s
c
s
c
nvim
yz
cd c:\users\azk19\OneDrive\桌面
yz
which yazi
scoop update yazi
cls
cd c:\users\azk19\OneDrive\桌面
yz
cls
yz
wezterm
cd c:\users\azk19\OneDrive\桌面
ls
yz
scoop status
scoop update eza oh-my-posh
c
get-Poshthemes
c
s
winget upgrade
c
notepad $profile
pwd
c
git clone https://github.com/hendrikmi/neovim-kickstart-config.git
cls
kk
cls
ls
cd .\neovim-kickstart-config
ls
c
ls
kk .\neovim-kickstart-config
c
cd appdata\local
ls
cd .\Kickstart
c
ls
c
nc .
lvim .
cls
c
kk
cd appdata\local
c
ls
cd zig
ls
cd h
ls
cls
which zig
cd ..
ls
cd .\Kickstart
c\
c
ls
c
ls
code-insiders .
ls
kk
cls
kk
kk .\neovim-kickstart-config
ls
cls
kk
cls
ls
cls
kk
cd c:\users\azk19\OneDrive\桌面
kk hello.py
rm -Recurse -Force hello.py
ls
kk
cmake
kk
python -m pip install --upgrade pip setuptools
d:\Python\python313\python.exe -m uv pip install --upgrade pip setuptools
kk
c
kk
c
kk
scoop install lsd
lsd
c
kk
& D:/Python/Python312/python.exe c:\Users\AZK19\.cursor\extensions\ms-python.python-2024.12.3-win32-x64\python_files\shell_exec.py D:/Python/Python312/python.exe -m pip install -U torch-tb-profiler C:/Users/AZK19/AppData/Local/Temp/tmp-15908Qy52T8rm0slZ.log
& D:/Python/Python312/python.exe c:\Users\AZK19\.cursor\extensions\ms-python.python-2024.12.3-win32-x64\python_files\shell_exec.py D:/Python/Python312/python.exe -m pip install -U tensorboard C:/Users/AZK19/AppData/Local/Temp/tmp-15908juqL5J9DyWVw.log
cls
c
s
kk
lz
lz
scoop install komorebi whkd
komorebic quickstart
komorebic start --whkd
c
s
c
ls
c
nvim
kk
s
scoop uninstall komorebi whkd
rm $Env:USERPROFILE\komorebi.json
rm $Env:USERPROFILE\applications.yaml
rm $Env:USERPROFILE\.config\whkdrc
rm -r -Force $Env:LOCALAPPDATA\komorebi
scoop uninstall komorebi whkd
ls
c
d
c
kk
ls
pwd
ls
hyper install hyper-dracula
ls
pwd
ls
hyper uninstall hyper-dracula
cls
ls
gleam
gleam -V
gleam update
where gleam
which gleam
cd D:\!Workbenches\20\
c
ls
gleam update
scoop install gleam
gleam -V
pwd
ls
c
lsd
gleam -V
npm run compile-watch
cls
gleam
ls
gleam run demo
gleam run -m demo
gleam run -m basics
ls
c
ls
c
ls
c
get-Poshthemes
notepad $profile
cd d:\!Workbenches\
ls
cd hp_code
ls
cd ziglings
cd .\zig_learning
LS
CD .\zig_in_self
c
ls
cd d:\!Workbenches\hP_Code\rust_learning\Code_Rust
ls
cd d:\!Workbenches\hP_Code\rust_learning\Code_Rust
ls
s
c
s
scoop install htop
htop
ls
rustlings
c
rustlings
notepad $profile
ls
c
cd d:\!Workbenches\hP_Code\rust_learning\Code_Rust
ls
rustlings
notepad $profile
ls
c
cd d:\!Workbenches\hP_Code\rust_learning\Code_Rust
ls
c
zig build
c
zig build
vi hello.zig
vi hello.txt
c
zig build
c
which pdflatex
python -u "c:\Users\AZK19\OneDrive\桌面\demo\99.py"
python -u "c:\Users\AZK19\OneDrive\桌面\demo\db.py"
 & 'd:\Python\Python313\python.exe' 'c:\Users\AZK19\.vscode-insiders\extensions\ms-python.debugpy-2024.11.2024082901\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '14692' '--' 'c:\Users\AZK19\OneDrive\桌面\demo\db.py' 
python -u "c:\Users\AZK19\OneDrive\桌面\demo\db.py"
ls
c
s
c
ls
d:\Python\python313\python.exe -m uv pip install ipdb
d:\Python\python312\python.exe -m uv pip install ipdb
d:\Python\python312\python.exe -m uv pip list
d:\Python\python313\python.exe -m uv pip list
d:\Python\python312\python.exe -m uv pip install vpdb
d:\Python\python313\python.exe -m uv pip install vpdb
vi hello.txt
gvim
vi
ls
c
pwd
ls
c
vi
c
vi
vim
rustlings
c
nvims
ns
hx
vi
c
ls
c
s
c
vi
notepad $profile
ls
c
scoop bucket add versions
scoop install versions/zed-nightly
zed
vi
vi hello.go
gvim
vi hello.go
gvim
vi hello.go
c
vi _vimrc
vi
c
nc
vi
gvim
vi
echo $TERM
$TERM
ls
cat $TERM
c
vi _vimrc
vi
gvim
notepad $profile
g
vi
g
ls
lsd
c
lsd
rustlings
rustup component add clippy
rustup update
sudo rustup update
RUST_BACKTRACE=1
sudo rustup update
RUST_BACKTRACE=1 sudo rustup update
sudo rustup update
c
rsutc --version
rustc --version
cargo --version
rustlings
scoop updat
scoop updatee
scoop update
ckls
cls
c
s
c
sd
c
s
c
where zig
which zig
scoop bucket add extras
scoop search zig
scoop uninstall zig
which zig
scoop install zig-dev
which zig
zig version
c
zls version
zls --version
scoop search zls
c
ls
c
scoop install fzf bat ripgrep the_silver_searcher perl universal-ctags
fzf
ripgrep
rg
vi .
vi
vi .
c
ls
rustlings
c
rustlings
scoop upodate
scoop update
c
ls
rustings
rustlings
scoop update
c
s
c
& D:/Python/Python310/python.exe c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.15.2024091601-win32-x64\python_files\printEnvVariablesToFile.py c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.15.2024091601-win32-x64\python_files\deactivate\powershell\envVars.txt
odin
odin version
nvaida
nvdia-smi
cmdf
cmd
scoop update
nvdia-smi
nvcc -V
nvidia
c
& D:/Python/Python310/python.exe c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.15.2024091801-win32-x64\python_files\printEnvVariablesToFile.py c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.15.2024091801-win32-x64\python_files\deactivate\powershell\envVars.txt
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\Q2_Fahrenheit_to_Celsius.zig"
cd C:\Users\AZK19\AppData\Local\zig\o\354dd496a153f0eeca9e0a933eecfec2
ls
ll
lsd
ls -l
c
ls
eza
lsd
c
cd ../..
cd d:\!Workbenches\hP_Code\rust_learning\Code_Rust
c
zig version
zls --version
c
ls
cd hello
c
ls
zig run .\Q2_Fahrenheit_to_Celsius.zig -- 100
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\Q2_Fahrenheit_to_Celsius.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\hello.zig"
zig run .\Q2_Fahrenheit_to_Celsius.zig -- 100
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\Q2_Fahrenheit_to_Celsius.zig"
c
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\Q2_Fahrenheit_to_Celsius.zig"
zig
c
zig version
zls --version
c
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\hello.zig"
nvim
ns
neovide
where neovide
whereis neovide
which neovide
geek
scoop search zls neovide
c
scoop search zls neovide
scoop search neovide
scoop install neovide-dev
neovide
c
winget upgrade
winget update --id Python.Python.3.12
winget update --id CondaForge.Miniforge3
winget update --id Microsoft.NuGet
sudo winget update --id Anaconda.Anaconda3
sudo winget update --id Nvidia.Omniverse
winget update --id Microsoft.VCRedist.2013.x64
sudo winget update --id Microsoft.VCRedist.2013.x64
sudo winget update --id vim.vim.nightly
sudo winget update --id JohnMacFarlane.Pandoc
c
nc
vi .
ls
c
ni init.lua
vi .
ls
lsd
c
luarocks --version
ni lazy.lua
vi .\lazy.lua
nvim
vi .
code-insiders .
code .
code
vscode
nvim
touch lazy.lua
ls
nvim
c
ni flash.lua
nvim
nvim _vimrc
c
nvim
nvim _vimrc
cls
nvim
c
ns
lz
c
ls
cd appdata\local
c
ls
gh repo clone AZKvgkv/nvim-config nvim
lsd
nvim
cd nvim
ls
nvim
c
bat
cd ~
which bat
which fd
which fzf
which ripgrep
which zoxide
which rg
 scoop install ripgrep
scoop update ripgrep
ripgrep
c
rg
rg --version
c
scoop list
scoop update micro
scoop update
scoop update oh-my-posh
c
ls
c
get-Poshthemes
notepad $profile
ls
cd d:\!Workbenches\hP_Code\rust_learning\Code_Rust
c
cd d:\!Workbenches\hP_Code\rust_learning\Code_Rust
c
notepad $profile
ls
cd d:\!Workbenches\hP_Code\rust_learning\Code_Rust
c
c
ls
cd ~
nvim
c
nvim
nvim _vimrc
ls
c
nvim
lz
nvim
lz
c
nvim
lz
c
nvim
lz
nvim
ns
npm cache clean --force
kk
c
which llvm
llvm
c
gcc
gcc --version
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\nvim
Remove-Item $env:LOCALAPPDATA\nvim\.git -Recurse -Force
nvim
c
nvim
notepad $profile
n
notepad $profile
n
c
nvim
gcc --version
cd appdata\local
c
ls
cd nvim-data
ls
cd ..
cd nvim
ls
cd lua
ls
cd .\plugins
ls
rg telescope-fzf-native.nvim
cd ..
ls
rg telescope-fzf-native.nvim
sudo make
make
./v.exe
c
n
which v
ls
c
make
sudo make
mingw
n
gcc --version
make --version
which gcc
cd D:\!Workbenches\20\mingw64
ls
MinGW Installation Manager
cmake --version
cmake
cmake .
n
c
scala
c
v
c
lz
c
kk
n
ns
d
c
notepad $profile
d
c
nvim
ns
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\Project_Go\ch01_hello\main.go"
scoop update oh-my-posh
scoop update
scoop update oh-my-posh
pulsar
d
x
c
s
c
py
pip list
c
s
c
D:\Python\Python313\python.exe -m viztracer  -- d:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection\networks\erfnet.py 
scoop search code-insiders
which code-insiders
scoop install vscode-insiders
which code
which vscode
vscode
scoop install vscode-insiders
cursor
code
which code
Code
which miniforge
which miniforge3
scoop install vscode-insiders
c
scoop install vscode-insiders
winget update
which obsidian
c
ls
c
notepad $profile
ls
c
notepad $profile
ls
c
cd D:\!Workbenches
ls
cd 70
ls
cd .\ziglings-repo
ls
cd .\Ziglings-exercises
c
ls
cd d:\!Workbenches
c
scoop install vscode-insiders
scoop uninstall vscode-insiders
c
cd d:\!Workbenches
ls
cd .\HP_Code
c
ls
d .
pypy
c
s
vi demo.py
python .\demo.py
python
d:\Python\Python312\python.exe -m uv pip install  termcolor
python .\demo.py
py
py .\demo.py
python -u "c:\Users\AZK19\OneDrive\桌面\demo.py"
D:/miniforge3/Scripts/activate
conda activate base
python -u "c:\Users\AZK19\OneDrive\桌面\demo.py"
c
d:\Python\Python312\python.exe -m uv pip install termcolor
python -u "c:\Users\AZK19\OneDrive\桌面\demo.py"
d:\Python\Python313\python.exe -m uv pip install termcolor
python -u "c:\Users\AZK19\OneDrive\桌面\demo.py"
d:\Python\Python312\python.exe -m pip install termcolor
python -u "c:\Users\AZK19\OneDrive\桌面\demo.py"
c
python -u "c:\Users\AZK19\OneDrive\桌面\demo.py"
pypy -u "c:\Users\AZK19\OneDrive\桌面\demo.py"
pypy pip list
c
pypy3 get-pip.py
pypy3 -m pip install termcolor
D:\!Workbenches\20\pypy3.10-v7.3.17-win64\pypy3.exe -m ensurepip
pypy3 -m pip install termcolor
pypy3.exe -m pip install --upgrade pip
pypy3 -m pip install ruff
msys2
msys
msys2
msys
msys64
msys2
MSYS
pwed
pwd
cd c
cd c:
ls
cd C:\msys64
ls
cd usr
cd bin
ls
lsd
which arch
which zstd
gdb --version
which gdb
c
nim --version
nim
c
nim -v
nimble init
nim compile --verbosity:0 --hints:off --run "c:\Users\AZK19\OneDrive\桌面\demo\Test\src\Test.nim"
nim
c
nim compile --verbosity:0 --hints:off --run "c:\Users\AZK19\OneDrive\桌面\demo\Test\src\Test.nim"
nim c --debugger:native "c:\Users\AZK19\OneDrive\桌面\demo\Test\src\Test.nim"
nim
which nim
nim
cd ~
nim
c
which nim
which nimble
code-insiders C:\Users\AZK19\OneDrive\桌面\demo\Test
nim
nim -r .\Test.nimble
D:\\!Workbenches\\20\\nim-2.0.8\\bin/nim c --debugger:native "c:\Users\AZK19\OneDrive\桌面\demo\Test\src\Test.nim"
ls
cd src
ls
Test
Test.exe
.\Test.exe
cv
c
D:\\!Workbenches\\20\\nim-2.0.8\\bin/nim c --debugger:native "c:\Users\AZK19\OneDrive\桌面\demo\Test\src\Test.nim"
nim compile --verbosity:0 --hints:off --run "c:\Users\AZK19\OneDrive\桌面\demo\Test\src\Test.nim"
which nimlangsever
which nimble
cd .nimble
ls
cd bin
ls
which nimlangserver
c
cd ~
which nimlangserver
nim compile --verbosity:0 --hints:off --run "c:\Users\AZK19\OneDrive\桌面\demo\Test\src\Test.nim"
winget install --id Typst.Typst
typst
cd d:\!Workbenches
ls
cd 70
c
ls
pwd
cd ./
cd ../
cd ../../
nim compile --verbosity:0 --hints:off --run "d:\!Workbenches\HP_Code\nim_learning\hello.nim"
nimble refersh
cd ~
c
nimble --help
c
nimble refresh 
nim c -r hello.nim
nim -r hello.nim
x
c
nim
nim r hello.nim
c
get-Poshthemes
c
notepad $profile
ls
c
ls
c
ls
c
s
c
ls
c
dart
c
s
c
lobster
c
php
c
haxe
haxe --version
c
haxe
c
gvim .
ni hello.hx
gvim .
haxe
haxe --main HelloWorld --js HelloWorld.js
haxe --main hello --js hello.js
d .
c
haxe --main hello --js hello.js
c
d .
ls
vi .
c
haxe --main Hello --js Hello.js
d .
haxe --main Hello --js Hello.js
ls
d .\Hello.js
c
ls
haxe --main Hello --lua Hello.lua
ls
haxe --main Hello --py Hello.py
haxe
haxe --main Hello --python Hello.py
ls
c
gvim .
d .
c
ls
pypy .\Hello.py
c
lua
lua run Hello.lua
c
node run Hello.js
ls
c
cls
crystal
c
scoop bucket add crystal-preview https://github.com/neatorobito/scoop-crystal
scoop 
scoop cleanup
scoop list
c
scoop install crystal
c
git
c
which scoop 
cd D:\%Applications\Scoop
ls
cd .\buckets
c
ls
cd .\crystal-preview
ls
yazi
scoop 
scoop bucket remove crystal-preview
scoop bucket rm crystal-preview
c
scoop cleanup all
scoop cleanup -a
micro
c
ls
c
crystal
crystal version
c
ls
c
crystal version
ls
c
d .
crystal
ls
crystal run .\hello.cr
ls
c
ls
d .
ls
c
elm init hello
which elm
elm
elm init hello
c
ls
lsd
cd .\nimcache
ls
cd .\Test_d
ls
c
md demo
cd demo
c
elm init
c
d .
ls
cd src
ls
elm
ele reactor
elm reactor
c
ls
cd ..
cd
ls
d .\.python_history
cd .
cd ..
ls
vi .\help-demo.md
Set-ExecutionPolicy Bypass -Scope Process -Force;[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; try { & ([ScriptBlock]::Create((Invoke-WebRequest https://www.haskell.org/ghcup/sh/bootstrap-haskell.ps1 -UseBasicParsing))) -Interactive -DisableCurl } catch { Write-Error $_ }
c
ghci
cls
d
lz
lvim
notepad $profile
lv
cls
which elm
c
vi _vimrc
gv
c
gvim
notepad $profile
g
  There is a new Nim langserver version available (v1.6.0). 
nimble install nimlangserver
c
sudo nimble install nimlangsever
nimlangsever --version
rg nimlangsever
which nimlangserver
cd C:\Users\AZK19\.nimble\bin
c
ls
cd C:\Users\AZK19\Downloads
ls
sudo move .\nimlangserver.exe C:\Users\AZK19\.nimble\bin
pypy
c
cd D:\!Workbenches
ls
c
yz
ll
c
ls
cd 70
ls
cd .\ziglings-repo
c
ls
cd .\Ziglings-exercises
ls
c
zig build
ls
cd .\exercises
c
zig build
cd ..
cd ../..
ls
c
cd .\HP_Code
ls
cd .\zig_learning
c
ls
cd .\Ziglings-exercises-self
c
ls
zig build
c
cd ~
notepad $profile
c
scoop status
scoop update eza fastfetch gleam oh-my-posh vscodium zed-nightly zig-dev zoxide
zoxide
c
which zoxide
z d:
c
hx
c
g
d
ns
c
which rsvim
where python
whereis python
cmd
z C:\Users\AZK19\OneDrive\桌面
c
z
zz
z
c
ls
g .\12.txt
c
ls
c
s
c
d
winget update
c
cls
notepad $profile
c
notepad $profile
c
d
lz
c
z D:\!Workbenches\HP_Code\julia_learning
lsd
cd .\Code_Julia
ls
c
get-Poshthemes
notepad $profile
cd d:\!Workbenches
cd .\HP_Code
c
z .\zig_learning
ls
cd .\zig_in_self
zig
c
z c:\Users\AZK19\OneDrive\桌面
c
ls
d hello.zig
c
vi hello.zig
zig build
ls
c
md 333
mv .\hello.zig 333
ls
c
cd 333
ls
zig init
d .
zig build
ls
cd zig-out
c
ls
cd bin
ls
333
c
./333
pypy
c
z c:\Users\AZK19\OneDrive\桌面
yz
z c:\Users\AZK19\OneDrive\桌面
yz
ls
c
ls
c
where my python
c
which yazi
yazi --version
tabby
c
scoop update yazi
c
scoop update yazi
hyper
z c:\Users\AZK19\OneDrive\桌面
ls
cls
yz
yazi
c
c
which volta
winget upgrade
z c:\Users\AZK19\OneDrive\桌面
yz
yz .
winget upgrade --id  vim.vim.nightly
winget upgrade --id  Nushell.Nushell
winget upgrade --id  Volta.Volta
winget upgrade --id  OpenJS.NodeJS
c
c
d
c
kk
neovide
nc
c
cls
g
c
code
z c:\Users\AZK19\OneDrive\桌面
yz
vscode
c
code-insiders
echo path
echo $path
cmd
scoop search ocaml
winget search ocmal
anytype
scoop install anytype
anytype
scoop update
scoop status
scoop update cacert oh-my-posh zed-nightly zig-dev
c
d .
elm
c
elm init
lsd
c
lsd
eza
lsd
c
lsd
cd src
lsd
ls
c
elm init
ls
cd src
ls
c
lsd
eza
d hello.cr
c
ls
d
g .
c
code-insiders .
hx .
hx -help
hx health -rust
c
helix --health python
helix --health crystal
helix --health elm
c
crystal "c:\Users\AZK19\OneDrive\桌面\111\hello.cr"
hx .
c
crystal "c:\Users\AZK19\OneDrive\桌面\111\hello.cr"
c
ruby
ruby --help
c
crystal "c:\Users\AZK19\OneDrive\桌面\111\hello.cr"
cls
pypy
c
oh-my-posh upgrade
c
oh-my-posh upgrade
c
scoop update oh-my-posh
c
scoop status
scoop update
oh-my-posh version
oh-my-posh upgrade
oh-my-posh version
c
bun --version
bun 
bun upgrade 
scoop search deno
choco search deno
irm https://deno.land/install.ps1 | iex
c
scoop list
scoop update bun-canary
deno --version
c
which deno
c
scoop update bun-canary
scoop st
scoop status
scoop search bun
scoop uninstall bun-canary
scoop install bun
scoop update eza gleam oh-my-posh zed-nightly zig-dev
c
ruby "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello.rb"
c
ls
c
ls
c
lsd
eza
yz
c
ls
c
d
c
cd d:\!Workbenches
ld
ls
lsd
cd 70
ls
cd .\ziglings-repo
ls
cd .\Ziglings-exercises
c
irb
c
ruby -v
irb
c
z c:\Users\AZK19\OneDrive\桌面
c
ls
c
ld
lsd
cd 111
c
ls
md micro-test
cd .\micro-test
c
ls
c
micro .
micro
ni hello.rb
d .\hello.rb
micro.exe .
c
notepad $profile
z c:\Users\AZK19\OneDrive\桌面
cd 111
cd .\micro-test
C
LS
m .\hello.rb
d .
m
m .
m .\demo.py
 micro -plugin install fzf
which micro
c
 micro -plugin install crystal
 micro -plugin install go
ls
c
go mod init micro-demo
ls
d .
lsd
c
ls
m .\hello.go
m
d .
lz .
c
cd ..
ls
rm -r micro-test
ls
c
scoop update neovide
c
which neovide
scoop update neovide
scoop uninstall neovide
scoop list
c
scoop search neovide-dev
neovide --version
neovide version
c
scoop list
scoop install goneovim
goneovim
scoop search gnvim
which goneovim
goneovim
scoop uninstall goneovim
c
scoop uninstall neovide-dev
scoop install neovide
neovide
git clone https://spacevim.org/git/repos/SpaceVim/ ~/.SpaceVim
c
git clone https://spacevim.org/git/repos/SpaceVim/ ~/.SpaceVim
yz
notepad $profile
svim
yz
git clone https://spacevim.org/git/repos/SpaceVim/ ~/.SpaceVim
svim
notepad $profile
svim
cls
svim
ved
vide
ls
c
d
svim
notepad $profile
sv
notepad $profile
si
notepad $profile
svim
ss
scoop cleanup -a
c
scoop install goneovim
goneovim
c
which goneovim
which neovim
c
d .
goneovim
d .
neovide
goneovim
neovide
which nvim-qt
cd %LOCALAPPDATA%\nvim\ginit.vim
cd %LOCALAPPDATA%\nvim\
cd %LOCALAPPDATA%\nvim
d .
nvim-qt
d .
nvim-qt
d .
nvim-qt
d .
c
cd appdata\local
lsd
cd nvim
c
ls
g .
nvim-qt
neovide
nvy
d
c
cd 101
ls
cd demo
ls
c
zig init
ls
ld
ls
c
zig init
ls
zig build
c
ls
zig run main.zig
d .\main.zig
zig run main.zig
c
pypy .\demo.py
scoop cleanup -a
ls
c
lazygit
ghci
c
d
neovide
c
onyx version
wasmer --version
c
z c:\Users\AZK19\OneDrive\桌面
c
cd demo
ls
lsd
cd .\onyx_project
c
code-insiders .
c
cd .\aoc-2024
ls
cd ..
c
lsd
cd .\my-onyx-project
ls
onyx --help
onyx r main.onyx
onyx r 1.onyx
onyx r main.onyx
onyx r hello.onyx
onyx build hello.onyx -o hello.wasm
onyx build hello.onyx  hello.wasm
onyx
c
onyx build hello.onyx
ls
lsd
c
.\out.wasm
onyx r .\out.wasm
c
which onyx
which wasm
wasmer
c
which wasmer
c
php
which php
c
svim
notepad $profile
c
ss
wezterm
c
s
c
ss
cls
ls
c
d
cls
lv
nm
ns
scoop update
scoop status
scoop update zed-nightly
c
ls
pwd
ls
go run main.go
deno
c
bun
cls
deno --version
c
elixir
c
nm C:\Users\AZK19\AppData\Roaming\nushell\config.nu
nm
c
kk
c
d C:\Users\AZK19\AppData\Roaming\nushell\config.nu
\d C:\Users\AZK19\AppData\Roaming\nushell\config.nu
d C:\Users\AZK19\AppData\Roaming\nushell\config.nu
d
ns
d C:\Users\AZK19\AppData\Roaming\nushell\config.nu
lz
c
d
ns
cls
erlang
gleam
gleam update
which gleam
cd d
cd d:
c
gleam update
which gleam
cd D:\%Applications\Scoop\
gleam update
lsd
cd apps
ls
cd .\gleam
c
ls
cd .\1.5.1
LS
ls
c
lsd
gleam update
scoop update gleam
c
scoop list
scoop install elixir
elixir --version
c
ls
c
iex
c
scoop
c
iex
c
elixir
c
elixir --help
c
iex.bat
cmd
c
elixirc
erlang --version
scoop install erlang
scoop update erlang
scoop uninstall erlang
scoop install erlang
erlang
erl --version
c
iex.bat
scoop list
glazewm
scoop uninstall glazewm
c
scoop uninstall elixir
scoop install elixir
elixir
c
scoop uninstall goneovim
v run "d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\array_initialization.v"
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\array_initialization.v
v run "d:\!Workbenches\HP_Code\v_learning\Code_V\Base\ch4_types\array_initialization.v"
c
neovide .
lsd
cd .\vlang-project
ls
cd .\part01
c
lsd
d .
nc .
v run "d:\!Workbenches\HP_Code\v_learning\vlang-project\part01\array.v"
v run "d:\!Workbenches\HP_Code\v_learning\vlang-project\part01\init_assign.v"
v run "d:\!Workbenches\HP_Code\v_learning\vlang-project\part01\hello.v"
v run d:\!Workbenches\HP_Code\v_learning\vlang-project\part01\hello.v
pwd
ls
c
v init hello
cat v.mod
c
ls
eza
lsd
c
ls
cat .\.gitignore
c
ls
c
cd 101
ls
c
git clone https://github.com/vlang/ved
lsd
ls
cd vde
cd ved
ls
c
ls
v .
./vde
./ved
ls
lsd
ved
.\ved
ls
cd ..
ls
rm -r ved
ls
cd ved
ls
cd ../..
ls
cd .\zig_learning
ls
cd .\Ziglings-exercises-self
fullter
c
dart
c
which dart
c
scala
c
erl --version
c
code-insiders
d
dart version
dart -- version
dart --version
c
vscodium
codium
dart "c:\Users\AZK19\OneDrive\桌面\111\hello.dart"
dart --version
c
dart --version
which dart
dart --version
c
cd 111
c
lsd
ls
eza
ls
c
lsd
node run demo.js
node
c
codium .
node "c:\Users\AZK19\OneDrive\桌面\111\demo.js"
c
deno "c:\Users\AZK19\OneDrive\桌面\111\demo.js"
bun "c:\Users\AZK19\OneDrive\桌面\111\demo.js"
node "c:\Users\AZK19\OneDrive\桌面\111\demo.js"
node .\node_test.js
c
node .\node_test.js
c
node demo.js
bun demo.js
deno demo.js
deno run demo.js
bun run demo.js
node demo.js
c
deno run demo.js
c
node demo.js
bun run demo.js
deno run demo.js
c
scala "c:\Users\AZK19\OneDrive\桌面\111\hello.scala"
mix new e-demo
which elcir
which elxir
mix
elixir
scoop uninstall elixir
c
gleam
c
ls
g .\CS_Learning.sln
cd .\ConsoleApp-process
ls
g .\Demo.cs
& D:/Python/Python313/python.exe d:/~Code/dash/example.py
& D:/Python/Python310/python.exe c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.15.2024092702-win32-x64\python_files\printEnvVariablesToFile.py c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.15.2024092702-win32-x64\python_files\deactivate\powershell\envVars.txt
python -u "d:\~Code\dash\example.py"
d:\python\Python313\python.exe -m pip list
d:\python\Python313\python.exe -m venv dash-env
cd d:\python\Python313\
ls
lsd
ls
c
pip list
pip install dash
c
pip install uv
uv tool install pandas
pip list
uv list
uv pip list
c
cls
lsd
ls
pip install pandas
cls
uv pip install pandas
uv 
uv -n
c
uv
uv init
uv init hello
c
python -u "d:\~Code\hello\hello.py"
uv run "d:\~Code\hello\hello.py"
uv init dash_project
uv init hello
rm -r hello
sudo rm -r hello
sudo rm -r -f hello
sudo rm -r -Force hello
c
uv init hello1
python -u "d:\~Code\dash\example.py"
python -u "d:\~Code\dashBase\test-01-proplus.py"
c
python -u "d:\~Code\dashBase\test-01.py"
python -u "d:\~Code\dashBase\test-01-proplus.py"
python -u "d:\~Code\dashBase\test-01.py"
sudo rm -r -Force dash
rm -r dashBase
c
cd ..\~Code\dash_project
ls
c
ni app.py
python -u "d:\~Code\dash_project\app.py"
uv run app.py
c
python -u "d:\~Code\dash_project\app.py"
lsd
c
ni app.py
python -u "d:\~Code\app.py"
ls
c
cd ..\~Code\pythonProject_01
ls
cat .\main.py
c
cd ../
ls
cs
c
ss
c
pypy -u "d:\~Code\app.py"
c
py -u "d:\~Code\app.py"
python -u "d:\~Code\app.py"
c
ls
pypy list
pypy pip list
pypy -m  pip list
pypy -m  pip install rich
c
cls
md dash_project
ls
c
cd ..\~Code\dash_project
ls
c
md basic
ni layout.py
c
ls
c
ls
cd basic
c
ls
python -u .\01_layout.py
c
python -u "d:\~Code\pythonProject00\main.py"
c
ls
cd ..
cd ../..
cd D:\~Code
c
ls
cd ..\~Code\pythonProject00
c
ls
cd ..\..\~Code\pythonProject00\第二桶
c
ls
pypy -u 002.py
c
pypy -u 002.py
c
pypy -u 002.py
uv pip install matplotlib
pip list
c
python -u "d:\~Code\pythonProject_01\data_spell_py\ipy\01.py"
c
python -u "d:\~Code\pythonProject_01\data_spell_py\ipy\01.py"
python --help
c
& D:/~Code/.venv/Scripts/python.exe d:/~Code/pythonProject_01/data_spell_py/ipy/01.py
c
& D:/Python/Python310/python.exe c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.15.2024092702-win32-x64\python_files\printEnvVariablesToFile.py c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.15.2024092702-win32-x64\python_files\deactivate\powershell\envVars.txt
python -u "d:\~Code\pythonProject_01\data_spell_py\ipy\01.py"
cls
python -u "d:\~Code\pythonProject_01\data_spell_py\ipy\01.py"
c
python -u "d:\~Code\pythonProject_01\data_spell_py\ipy\01.py"
d:\python\Python312\python.exe -m pip list
c
cd ..\~Code\pythonProject_01
ls
cd ..\..\~Code\pythonProject_01\data_spell_py\ipy
ls
c
python .\01.py
c
d:\python\Python312\python.exe -u .\01.py
d:\python\Python312\python.exe .\01.py
ls
cd .venv
ls
c
pip list
cls
cd ..
cd ..\~Code\pythonProject_01
ls
cd ..\..\~Code\pythonProject_01\data_spell_py
ls
c
cd ..\..\..\~Code\pythonProject_01\data_spell_py\AI-base
ls
c
python -u "d:\~Code\pythonProject_01\AZK\Py&deeplearning\Part 1\Matplotlib-使用示例.py"
d:\python\Python312\python.exe -m pip list
d:\python\Python312\python.exe -m pip install matplotlib
d:\python\Python312\python.exe -m pip update matplotlib
pip --help
c
d:\python\Python312\python.exe -m pip uninstall matplotlib
d:\python\Python312\python.exe -m pip install matplotlib
d:\python\Python312\python.exe .\Matplotlib-使用示例.py
python -u "d:\~Code\dash_project\basic\01_layout.py"
activate
conda activate d:\~Code\.conda
python -u "d:\~Code\dash_project\basic\01_layout.py"
c
conda activate d:\~Code\.conda
conda list
c
conda
c
conda list
c
conda activate d:\~Code\.conda
pip list
pip install uv
pip list
pip install dash
c
code-insiders .
c
pip list
c
cls
python -u "d:\~Code\dash_project\basic\01_layout.py"
pip install Plotly
conda activate d:\~Code\.conda
conda install Plotly
python -u "d:\~Code\dash_project\basic\01_layout.py"
conda install pandas
python -u "d:\~Code\dash_project\basic\01_layout.py"
c
conda
ls
c
conda list
c
pwd
activate
conda activate d:\~Code\.conda
conda activate d:\\~Code\\.conda
bash
conda activate d:\\~Code\\.conda
conda list
c
conda activate --info
conda info --envs
conda activate D:\miniforge3\
conda info --envs
conda activate D:\\~Code\\.conda
conda info --envs
conda activate D:\\~Code\.conda
conda info --envs
c
& d:/~Code/.venv/Scripts/Activate.ps1
c
ls
c
pip list
pip install uv
ls
c
pip list
ls
uv pip install matplotlib
cd ..\..\..\~Code\pythonProject_01\data_spell_py\AI-base
c
ls
pypy hello.py
py hello.py
c
py hello.py
pypy hello.py
py hello.py
c
python -u "d:\~Code\dash_project\basic\01_layout.py"
& d:/~Code/.venv/Scripts/Activate.ps1
python -u "d:\~Code\dash_project\basic\01_layout.py"
c
py hello.py
pip list
uv pip install dash
c
py hello.py
pypy hello.py
c
python -u "d:\~Code\dash_project\basic\01_layout.py"
uv pip install pandas
python -u "d:\~Code\dash_project\basic\01_layout.py"
c
& d:/~Code/.venv/Scripts/Activate.ps1
c
python -u "D:\~Code\pythonProject_01\AZK\blog.py"
cls
& d:/~Code/.venv/Scripts/Activate.ps1
scoop st
scoop status
scoop update
c
s
c
notepad $profile
f
juliaup
ls
c
d
scoop search micromamba
choco search micromamba
Invoke-Expression ((Invoke-WebRequest -Uri https://micro.mamba.pm/install.ps1).Content)
micromamba --version
micromamba self-update
micromamba --help
winget install prefix-dev.pixi
d:\python\Python312\python.exe -m pip install 'xonsh[full]'
xonsh
bat
which bat
c
z c:\Users\AZK19\OneDrive\桌面
c
cd 111
ls
x
c
pixi
c
pixi init
ls
bat .\pixi.toml
c
ls
md py-pixi-demo
cd .\py-pixi-demo
pixi init
c
ls
c
d:\python\Python312\python.exe -m pip install polars
c
code-insiders .
python -u "c:\Users\AZK19\OneDrive\桌面\111\py-pixi-demo\demo.py"
c
d:\python\Python312\python.exe .\demo.py
py
d:\python\Python313\python.exe -m pip install polars
python -u "c:\Users\AZK19\OneDrive\桌面\111\py-pixi-demo\demo.py"
cd ..
ls
cargo new pixi-demo
ls
cd .\pixi-demo
ls
c
code-insiders .
cd ..
ls
rm -r .\pixi-demo
ls
rm -r -f .\pixi-demo
sudo rm -r -Force .\pixi-demo
ls
cargo add polars -F lazy
ls
c
cargo new pixi-demo
cargo add polars -F lazy
cd .\pixi-demo
cargo add polars -F lazy
ls
c
code-insiders .
cd "c:\Users\AZK19\OneDrive\桌面\111\pixi-demo\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
cargo run 
cd src
ls
cargo run .\main.rs
c
py
ipython
c
cd ..
ls
bat .\demo.js
c
lz
c
code
svim
c
z c:\Users\AZK19\OneDrive\桌面
cd 111
c
notepad $profile
ss .
ss
z
x
c
z c:\Users\AZK19\OneDrive\桌面
cd 111
ls
lsd
eza
ls
ss demo.js
ss
notepad $profile
d .
c
notepad $profile
c
m
c
scoop cleanup -a
zig version
c
go version
c
winget updae
winget upgrade
c
go env
c
go get -u github.com/gin-gonic/gin
c
cd D:\!Workbenches\H
cd D:\!Workbenches\HP_Code
ls
cd .\go_learning
c
ls
Go-Gin
c
lsd
ls
md Go_Gin
ls
c
cd .\Go_Gin
ls
c
go mod init go-gin
ls
go get -u github.com/gin-gonic/gin
c
ls
bat .\go.mod
bat go.sum
c
d .
c
code
code-insiders .
codeium .
codium .
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\main.go"
c
code-insiders .
c
ls
cd ..
ls
bat .\readME.md
c
bat .\config
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\src\ch01-HelloWorld\main.go"
c
codeium .
codium .
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\Project_Go\ch01_hello\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\Project_Go\ch02_datatypes\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch01-HelloWorld\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch02-Types\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch03-Input\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch03-Input\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch04-For-range\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch04-For-range\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\CRM\main\main.go"
c
c
Get-ChildItem env: | Out-File "C:\Users\AZK19\AppData\Local\Temp\tmp-25712sUqsUWvavx58.txt"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\Init\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\Anonymous\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\Closure\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\Defer\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\Systerm_func\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\Systerm_func\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\Systerm_func\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\Systerm_func_date\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch05-Function\Systerm_func_in\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch06-Error-handling\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch06-Error-handling\Self-err\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch06-Error-handling\Self-err\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch07-Array\Intro\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch07-Array\Intro-pro\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch07-Array\Intro-pro\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch07-Array\Initialize\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch07-Array\Two-dim-array\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch08-Slice\Intro\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch08-Slice\Define\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch08-Slice\Using\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch09-Map\Intro\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch09-Map\Using\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Struct\Define\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Struct\Using\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Struct\Tranfer\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Method\Intro\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Method\Intro-pro\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Method\Diff\main.go"
go mod init awesomeProject
go mod tidy
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Struct-Ins-field\main.go"
go run "D:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Struct-Ins-field\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Struct-Ins-field\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Struct-Ins-field\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Struct-Ins-field\main\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Encapsulation\main\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Encapsulation\main\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Struct-Ins-package\main\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Inherit\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Inherit\main.go"
g
scoop update
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Interface\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Interface\notice01\main.go"
scoop install procexp
scoop search procexp
scoop search procexp.exe
winget search procexp
winget install procexp
procexp
scoop install greenshot
greenshot
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Interface\notice02\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch10-OOP\Interface\notice02\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\io-intro\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\io-intro\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\io-intro\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\io-intro\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\main.go"
scoop search powertoys
winget install --id Microsoft.PowerToys --source winget
procexp
winget install --id Microsoft.PowerToys --source winget
winget upgrade
c
sudo reboot
c
sfc /scannow
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /restorehealth
sfc /scannow
vi
scoop update
procexp
c
s
c
f
c
f
c
f
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\io-intro\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\io-intro\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\io-intro\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\write\main.go"
z c:\Users\AZK19\OneDrive\桌面
cd 111
ls
vi demo.js
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\copy\main.go"
ni hello.py
g .\hello.py
ls
c
vi .\hello.py
g
d .
c
ls
go mod init ok
d .
ls
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch11-File\copy\main.go"
ls
c
go run main.go
c
procexp
scoop update
odin version
vi
vim
vi
ls
c
pwd
ls
c
d
vi _vimrc
ls
c
vi
vi _vimrc
vi
echo -e "\e[6 q"  # 竖线光标
Write-Host "`e[6 q"
Write-Host "`e[4 q"
vi _vimrc
g _vimrc
vi _vimrc
:qa
winpty vim
scoop search winpty
scoop install winpty
winpty vim
which winpty
winpty.exe vim
c
vi
g
g _vimrc
vi
c
winpty
winpty powershell
scoop uninstall winpty
c
scoop cleanup -a
vim
cmd
get-help
set-psreadlineoption-editmode vim
c
Get-PSReadLineKeyHandler -Bound
notepad $profile
g
vi
c
d
hx
c
vim
nu
vim
C
F
f -l ubuntu
c
f -l ubuntu
f -l arch
f -l fedora
f -l mint
f -l endevaouros
f -l pop_os
f -l debian
c
f
c
cmd
starship preset pastel-powerline -o ~/.config/starship.toml
cmd
scoop cleanup -a
scoop update
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case1\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case1\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case1\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case1\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case2\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case2\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case3\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case3\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case4\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case4\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case5\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case5\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case5\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case6-channel\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case6-channel\case-loop\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case7\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case7\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case8\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case8\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case9\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case9\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case9\defer+recover\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case9\defer+recover\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case9\defer+recover\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch12-Coroutine\case9\defer+recover\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch13-TCP\client\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch13-TCP\server\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch13-TCP\client\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch13-TCP\server\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch13-TCP\client\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch13-TCP\server\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch13-TCP\client\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch13-TCP\server\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch13-TCP\client\main.go"
c
winget upgrade
pypy
c
d:\python\Python313\python.exe --version
d:\python\Python313\python.exe
c
which v
v up
c
which v
c
scoop update
choco update
choco upgrade
choco upgrade -a
choco --help
c
choco list
which python3 3.12.4
c
cmd
which node
D:\nodejs\node.exe -v
c
d
ns
cms
cmd]
cmd
lvim
c
notepad $profile
ll
c
python -u "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\hello.py"
c
C3
c3
c
cd d:\!Workbenches
ll
cd .\20
ls
cd .\c3-windows-Release
ls
c3c --version
scoop search c3c
c3c --help
c
ls
c3c --v
c3c --version
c
cd demo | c3c compile main.c3
cd src | c3c c main.c3
cd src | c3c compiler main.c3
c
ls
c3c compiler main.c3
c
c3c run main.c3
cd ../..
ls
rm -r -f .\demo
rm -r .\demo
ls
c
ls
c3c compiler main.c3
c3c compile .\main.c3
./main
c
c3c run .\main.c3
./main
c
c3c init myc3project
cd .\myc3project
code-insiders .
c3c run
c3c build
./build/myc3project
c
ll
c
ls
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case1\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case2\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case3\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case4\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case4\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case5\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case5\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case5\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case5\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case5\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Base_Self\awesomeProject\ch14-Reflect\case6\main.go"
c
vim _vimrc
wsl
c
wsl -l -v
c
vim
vi
g
d
c
vi
scoop 
c
nu
scoop update
which firefox-nightly
c
ls
c
ls
c
ls
c
ll
ls
ll
c
ls
c
vim
ls
c
cls
c
ls
c
vi
ls
c
ls
c
get-poshthemes
notepad $profile
c
cd D:\!Workbenches\HP_Code\rust_learning\Code_Rust
c
cd D:\!Workbenches\HP_Code\rust_learning\Code_Rust
c
cd D:\!Workbenches\HP_Code\rust_learning\Code_Rust
c
ls
c
vi
g
vim
ls
c
nvy
l
c
ll
nvy
./nvy
npm
c
cd D:\!Workbenches
ld
ll
cd 70
ld
ls
c
cd 6066
c
yz
cd 60
cd .. | cd 60
cd 60
ls
cls
git clone https://github.com/microsoft/vscode.git
ls
rm -r .\vscode
ls
cd .\vscode
ls
cd ..
ls
c
yz
git clone https://github.com/aaz-a/vscode.git
cd vscode
git checkout main
git pull https://github.com/microsoft/vscode.git main
c
ls
c
npm install
d C:\Users\AZK19\AppData\Local\npm-cache\_logs\2024-10-13T06_05_05_497Z-debug-0.log
ll
cd .\AppData\Local
c
cd npm-cache
ls
ll
c
ls
c
ll
c
git clean -xfd
npm install
which node
where node
cmd
c
cd d:nodejs
ls
node 
node --version
cd ~
node
volta
volta list
vlota install node
volta install node
volta install node@22.9.0
node --version
volta list
cmd
cls
node
node --version
c
git clean -xfd
npm install
nvm --version
nvim
nvm
c
curl --version
wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
npm audit fix
npm audit fix --force
npm audit fix
npm audit fix --force
.\scripts\code.bat
c
ls
.\scripts\code-cli.bat
.build\electron\Code - OSS.exe
".build\electron\Code - OSS.exe"
c
git clone https://github.com/aaz-a/vscode.git
yarn
which yarn
cmd
yarn --version
c
winget install Schniz.fnm
fnm
fnm env --use-on-cd | Out-String | Invoke-Expression
c
winget install Schniz.fnm
fnm env --use-on-cd | Out-String | Invoke-Expression
fnm use --install-if-missing 22
node -v
npm -v
c
volta list
where volta
which volta
winget uninstall volta
ls
c
yarn
c
which yarn
c
scoop search volta
scoop install volta
(& volta completions powershell) | Out-String | Invoke-Expression
yarn --version
c
ls
c
yarn install
node install
node
npm -v
c
fnm
c
fnm use --install-if-missing 22
node
c
fnm use --install-if-missing 22
fnm env --use-on-cd | Out-String | Invoke-Expression
fnm use --install-if-missing 22
node -v
c
volta list
c
npm -v
c
yarn install
node
scoop uninstall volta
node
c
fnm env --use-on-cd | Out-String | Invoke-Expression
node
c
yarn install
node
node -v
npm -v
c
ls
cd E
cd E:
ls
cd d
ls
cd vscode
ls
c
yarn install
npm -
npm i
npm audit
npm audit fix --force
c
npm install
msvs_config
c
npm config edit
npm i
npm audit fix
npm audit fix --force
c
lvim C:\Users\AZK19\AppData\Roaming\nushell\config.nu:
lvim C:\Users\AZK19\AppData\Roaming\nushell\config.nu
nu
scoop search vscodium
scoop list
scoop uninstall vscodium
scoop install vscodium
reg import
reg import "D:\%Applications\Scoop\apps\vscodium\current\install-context.reg"
reg import "D:\%Applications\Scoop\apps\vscodium\current\install-associations.reg"
bat install-association.reg
bat $'install-association.reg'
ls
c
pwd
scoop list
scoop uninstall zed-nightly
c
lv
cd d:\!Workbenches
ll
cd .\HP_Code
ll
cd .\go_learning
ll
yz
cd .\Go_Base_Self
ls
cd .\awesomeProject
c
ls
lv .
c
f
d
cd "d:\WeChat-Files\WeChat Files\wxid_pfb672ksm7o722\FileStorage\File\2024-10\" ; if ($?) { gcc 109.c -o 109 } ; if ($?) { .\109 }
c
cd "d:\WeChat-Files\WeChat Files\wxid_pfb672ksm7o722\FileStorage\File\2024-10\" ; if ($?) { gcc 109.c -o 109 } ; if ($?) { .\109 }
 & 'c:\Users\AZK19\.vscode\extensions\ms-vscode.cpptools-1.21.6-win32-x64\debugAdapters\bin\WindowsDebugLauncher.exe' '--stdin=Microsoft-MIEngine-In-1a5dvwc4.owu' '--stdout=Microsoft-MIEngine-Out-zvhflubc.c4z' '--stderr=Microsoft-MIEngine-Error-hhtwgafu.el4' '--pid=Microsoft-MIEngine-Pid-ezwdeqvu.qgu' '--dbgExe=D:\!Workbenches\20\mingw64\bin\gdb.exe' '--interpreter=mi' 
ls
.\109-1.exe
cd "c:\Users\AZK19\OneDrive\桌面\109\" ; if ($?) { gcc 109-1.c -o 109-1 } ; if ($?) { .\109-1 }
cd "c:\Users\AZK19\OneDrive\桌面\109\" ; if ($?) { gcc 109-11.c -o 109-11 } ; if ($?) { .\109-11 }
c
cd "c:\Users\AZK19\OneDrive\桌面\109\" ; if ($?) { gcc 109-11.c -o 109-11 } ; if ($?) { .\109-11 }
c
cd "c:\Users\AZK19\OneDrive\桌面\109\" ; if ($?) { gcc 109-1.c -o 109-1 } ; if ($?) { .\109-1 }
cd 'c:\Users\AZK19\OneDrive\桌面\109\output'
& .\'109-11.exe'
g .
vi .
node
fnm
c
sudo fnm env --use-on-cd | Out-String | Invoke-Expression
fnm env --use-on-cd | Out-String | Invoke-Expression
node
which node
z c:\Users\AZK19\OneDrive\桌面
cd 109
vi .
node
winget uninstall Schniz.fnm
choco install nodejs --version="22.9.0"
node
c
node
which node
node -v
npm -v
npm --help
node -v
npm -v
c
fvim
xonsh
cls
ls
md go
cd go
ls
go mod init go
c
go mod init gotest
ls
ni main.go
cd ..
ls
cargo new rust-demo
cd ..
cd .\TimeTest
c
ls
md zig-demo
ls
c
cd .\zig-demo
zig init
ls
c
python demo.py
pypy demo.py
bun run demo.js
deno run demo.js
node run demo.js
c
node demo.js
cd go 
ls
go  run main.go
cd ..
cd zig
c
cd .\zig-demo
ls
cd src
ls
c
zig run main.zig
cd ../..
ls
cd .\rust-demo
ls
cd src
c
ls
cargo run .\main.rs
c
f
c
scoop search screenfetch
pixi global install screenfetch
mamba --version
micromamba --version
micromamba install -c conda-forge screenfetch
micromamba uninstall -c conda-forge screenfetch
micromamba uninstall conda-forge screenfetch
micromamba uninstall conda-forge
micromamba uninstall  screenfetch
micromamba --help
micromamba remove -c conda-forge screenfetch
micromamba remove  conda-forge screenfetch
micromamba remove conda-forge screenfetch
micromamba remove conda-forge
c
micromamba remove\ screenfetch
micromamba remove screenfetch
c
screenfetch
msys2
msys
ls
c
yz
cls
node -v
cl
cls
ls
c
scoop update
 scoop update
git clone https://github.com/dofy/learn-vim.git
ls
cd .\learn-vim\zh-CN
cls
vi .\chapter01.md
g .\chapter01.md
vi _vimrc
cls
ls
ll
cd .\learn-vim\zh-CN
c
ls
c
d .\chapter04.md
lv .\chapter07.md
kk .\chapter07.md
c
ls
cd .\learn-vim\zh-CN
nc .\chapter07.md
cls
ns
cd .\learn-vim\zh-CN
ls
cd .\zh-CN
c
ls
nm .\chapter07.md
nm .\vimrc.vim
cd .\plugins
ls
as .\airline.md
c
g .
ls
c
vim _vimrc
g 
vim _vimrc
g
scoop prefix neovim
which neovim
which nvim
winget search nvim
nvim --version
winget uninstall nvim
scoop install neovim
scoop prefix neovim
c
nvim
nvim --version
nvim -V1 -v
c
z c:\Users\AZK19\OneDrive\桌面
ls
nvy
nvim-qt
c
ls
c
ll
cd demo
c
ls
emacs .
c
ll
d .
c
d
npm install -g tree-sitter-cli
scoop search tree-sittercli
scoop search tree-sitter-cli
npm install -g tree-sitter-cli
npm list -g --depth=0
tree-sitter --version
npm install -g tree-sitter-cli
cls
scoop uninstall nvim
scoop uninstall eonvim
scoop uninstall neovim
npm install -g neovim
winget search nvim
npm install -g neovim
npm fund
neovim 
winget install Neovim Nightly
winget --help
winget install Neovim-Nightly
winget install Neovim_Nightly
winget install --id Neovim.Neovim.Nightly
sudo winget install --id Neovim.Neovim.Nightly
winget install --id Neovim.Neovim.Nightly
sudo winget install --id Neovim.Neovim
nvim --version
neovide
c
d
pypy
pypy -u pip install neovim
pypy --help
c
pypy -m pip install neovim
c
d:\python\Python312\python.exe -m pip install neovim
d:\python\Python313\python.exe -m pip install neovim
c
d
lua
which lua
scoop search lua
scoop search luarocks
luarocks --version
scoop install lua luarocks
luac --version
c
lua --version
lua --v
lua -v
luac -v
luarocks --help
luarocks --version
c
which luarocks
cmd
d
python3 --version
pypy -m pip install neovim
c
d 
which python
whereis python
cmd
d
scoop search lua
lua
cls
lz
c
lz
as
ns
kk
ns
nc
c
ls
c
cls
Install-Module -Name Terminal-Icons -Repository PSGallery
cls
ls
c
get-poshthemes
cls
notepad $profile
c
ls
c
z c:\Users\AZK19\OneDrive\桌面
ls
cd 111
c
ls
llt
c
ll
ll -t
ls -t
ls -tree
ll -tree
c
lsd
ll
eza
c
tree
c
notepad $profile
kk
cls
d
nvim
ns
git --version
which MSYS2
ping baidu.com
ping google.com
cls
google
which nu
nu --version
scoop search nu
winget uninstall nu
winget list
c
winget uninstall --version 
winget uninstall nu
winget uninstall nu --version 0.97.1
nu --version
which nu
c
nu
cls
winget uninstall nu
scoop install nu
nu
which nu
d C:\Users\AZK19\AppData\Roaming\nushell\config.nu
c
vi
pipx
pipx --veresion
c
pipx
scoop install pipx
pipx --veresion
c
scoop install pipx
scoop update pipx
pipx ensurepath
pipx version
which pipx
which pipx | cd 
which pipx | cd ../
cd D:\%Applications\Scoop\shims\
ls
c
ll
pipx version
pipx --help
pipx install poetry
cd ~
pipx install poetry
cls
scoop uninstall pipx
c
pypy -m pip install --user pipx
pipx --version
which pypy
cd D:\!Workbenches\20\pypy3.10-v7.3.17-win64\
ll
cd .\Scripts
ls
cd C:\Users\AZK19\AppData\Roaming\Python\PyPy310\Scripts
ls
c
cls
which pypy
pypy -m pip install pipx
pipx --version
c
d:\python\Python313\python.exe -m pip install pipx
pypy pipx install poetry
pipx install poetry
pipx ensurepath
pipx --version
poetry --version
pipx upgrade poetry
ls
c
ll
c
cargo run .\src\main.rs --release
c
vi
c
nvim
c
nu
Install-Module -Name PSReadLine -Force -SkipPublisherCheck
notepad $profile
Get-History
c
bat .\go.mod
c
go mod init go-iris
ni main.go
d .
ll
go get github.com/kataras/iris/v12@latest
go mod tidy -compat=1.23 # -compat="1.23" for windows.
c
ls
go run .\main.go
ls
c
go run .\main.go
cls
c
cargo run src/main.rs --release
cargo run --release src/main.rs
c
cargo run --release src/main.rs
c
lsc
c
ll
ls
g .\.ideavimrc
go mod init gin-01
c
ll
go get -u github.com/gin-gonic/gin
c
ni main.go
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
vi .
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
ll
bat init.el
bat .emacs
c
ni init.el
d .
emacs
rm -r init.el
ls
c
nu
d C:\Users\AZK19\AppData\Roaming\nushell\config.nu
nu
d .idearc
c
ls
c
nc .ideavimrc
nc
c
nc .ideavimrc
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.11.0\adapter\codelldb.exe' 'terminal-agent' '--connect=9118' 
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.11.0\adapter\codelldb.exe' 'terminal-agent' '--connect=9128' 
c
cargo new a_rust-demo
cd .\a_rust-demo
c
ls
code
c
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.11.0\adapter\codelldb.exe' 'terminal-agent' '--connect=9477' 
which typescript
which javascript
js
c
npm i -g typescript
npm install -g npm@10.9.0
c
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.11.0\adapter\codelldb.exe' 'terminal-agent' '--connect=9639' 
 & 'c:\Users\AZK19\.vscode\extensions\vadimcn.vscode-lldb-1.11.0\adapter\codelldb.exe' 'terminal-agent' '--connect=9763' 
cargo run --help
cargo run --release src/main.rs
cargo run  src/main.rs --release
c
ll
cd .\target
ls
ll
c
ls
cargo run  src/main.rs --release
c
oh-my-posh upgrade
c
scoop status
scoop update bun erlang eza fastfetch llvm marksman oh-my-posh poppler zig-dev
c
scoop status
scoop update LXGWWenKaiMono
c
f
c
f -l pop_os
f -l arch
f -l endevaouros
f -l debian
c
f -l fedora
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
procexp
c
winget update
winget update --include-unknown
winget update --id chrisant996.Clink
winget update --id  Python.Python.3.12
winget update --id Julialang.Julia
winget update --id CondaForge.Miniforge3
winget update --id Git.Git
c
g
htop
c
f
c
ns
c
lv
c
ns
nc
c
ns
c
d
c
f
c
f -l fedora
c
d .idearc
d .ideavimrc
c
cls
vim
cls
pypy  main.py
c
pypy main.py
c
notepad 1.py
python -u "c:\Users\AZK19\OneDrive\桌面\1.py"
scoop seach d
scoop search dlang
scoop search dmd
scoop install dmd
d --version
dmd --version
dmd
dmd --version
dmd2 --version
rdmd
scoop install dmd
dmd --version
rdmd --version
c
z c:\Users\AZK19\OneDrive\桌面
ll
cd 111
ll
dub init hello
ls
cd hello
ls
d .
cd ..
ls
rm -r hello
ls
c
dub init dlang-project
c
ls
cd .\dlang-project
c
ls
code-insiders .
cd "c:\Users\AZK19\OneDrive\桌面\111\dlang-project\source\" ; if ($?) { dmd app.d } ; if ($?) { .\app }
scoop cleanup -a
c
rye
scoop search rye
scoop install rye
z c:\Users\AZK19\OneDrive\桌面
cd 111
rye init rye-project
rye sync
cd .\rye-project
rye sync
ll
tree
ll
cd src
ls
cd ..
d .
c
pypy first.py
c
pypy first.py
pypy .\second.py
pypy first.py
pypy .\second.py
pypy first.py
pypy .\second.py
python -u "c:\Users\AZK19\OneDrive\桌面\111\pythonProject\first_module.py"
python -u "c:\Users\AZK19\OneDrive\桌面\111\pythonProject\second_module.py"
python -u "c:\Users\AZK19\OneDrive\桌面\111\pythonProject\first_module.py"
python -u "c:\Users\AZK19\OneDrive\桌面\111\pythonProject\second_module.py"
c
python -u "c:\Users\AZK19\OneDrive\桌面\111\pythonProject\second_module.py"
c
python -u "c:\Users\AZK19\OneDrive\桌面\111\pythonProject\second_module.py"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin01\main.go"
c
cd D:\!Workbenches\HP_Code\go_learning
ls
cd .\Go_Gin
c
ls
md TestGin02
cd .\TestGin02
c
ls
go mod init gin-02
pwd
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part01\main.go"
go get -u github.com/gin-gonic/gin
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part01\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part01\main.go"
pypy
c
python -u "c:\Users\AZK19\OneDrive\桌面\111\pytyonProject\main.py"
c
python -u "c:\Users\AZK19\OneDrive\桌面\111\pytyonProject\main.py"
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/111/pytyonProject/main.py
echo $SHELL
c
pwsh
cmd
python -u "c:\Users\AZK19\OneDrive\桌面\111\pytyonProject\main.py"
mypy main.py
pwd
c
ls
c
vim
c
g .\config
scoop st
scoop status
ping google.com
c
ls
c
md 123
cd 123
ls
c
ni f.py
ni s.py
g .
c
ll
pypy .\f.py
pypy .\s.py
g .
pypy .\f.py
pypy .\s.py
cd ..
ls
rm -r 123
c
g
scoop status
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part02\main.go"
scoop status
ping google.com
c
scoop update
c
scoop update
c
winget source list
scoop update
git --version
which git
scoop config git-path ''
scoop config git-path 'D:\Git\cmd\git.exe'
scoop update
which git
scoop config git-path 'D:\Git\cmd\git.exe'
scoop update
scoop config git-path
scoop config git-path ''
scoop config git-path
scoop config git-path 'D:\Git\cmd\git.exe'
c
git config --system http.sslcainfo "D:\Git\mingw64\ssl\certs\ca-bundle.crt"
scoop update
git config --system http.sslcainfo "D:\Git\mingw64\ssl\certs\ca-bundle.crt"
scoop update
$env:Path -split ';' | Where-Object { $_ -like '*UGit*' }
scoop update
git config --system http.sslcainfo "D:\Git\mingw64\ssl\certs\ca-bundle.crt"
cd d:\git
ls
$oldPath = [Environment]::GetEnvironmentVariable('Path', 'User')
$newPath = ($oldPath -split ';' | Where-Object { $_ -notlike '*UGit*' }) -join ';'
[Environment]::SetEnvironmentVariable('Path', $newPath, 'User')
$env:Path -split ';' | Format-Table -AutoSize
$oldPath = [Environment]::GetEnvironmentVariable('Path', 'User')
$newPath = ($oldPath -split ';' | Where-Object { $_ -ne 'C:\Users\AZK19\AppData\Local\Volta\bin' }) -join ';'
[Environment]::SetEnvironmentVariable('Path', $newPath, 'User')
c
scoop update
$env:GIT_SSL_CAINFO="$(scoop prefix git)\mingw64\ssl\certs\ca-bundle.crt"
[environment]::setEnvironmentVariable('GIT_SSL_CAINFO', $env:GIT_SSL_CAINFO, 'User')
$env:GIT_SSL_CAINFO="D:Git\mingw64\ssl\certs\ca-bundle.crt"
 [environment]::setEnvironmentVariable('GIT_SSL_CAINFO', $env:GIT_SSL_CAINFO, 'User')
scoop update
c
which git
scoop search git
c
git --version
scoop update
cmd
scoop install git
which git
git config --global credential.helper manager
D:\%Applications\Scoop\apps\git\current\install-context.reg
D:\%Applications\Scoop\apps\git\current\install-file-associations.reg
scoop config git-path
scoop config
scoop config git-path $Git
scoop which git
scoop config git-path ""
scoop config
scoop which git
scoop config git-path "$(scoop which git)"
scoop which git
c
github cli
geek
scoop status
scoop config
it config --global http.sslVerify false
git config --global http.sslVerify false
scoop config
scoop status
scoop update
git config --global http.sslCAInfo ""
git config --global http.sslBackend schannel
git config --global http.sslVerify true
scoop update
c
scoop status
scoop update bun erlang eza fastfetch git llvm nu oh-my-posh rye startship zig-dev
scoop update starship
c
scoop status
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part02\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part02\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part02\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part02\main.go"
cls
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part02\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part02\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part02\main.go"
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part03\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part03\main.go"
vi _vimrc
winget update
gcc --version
g++ --version
which gcc
which g++
gcc
gcc --help
gcc -v
winget update NVIDIA Omniverse Launcher 1.8.7
winget update --id Nvidia.Omniverse
c
md 123
cd 123
c
ni main.py
g .\main.py
pypy main.py
cd ..
ls
rm -r 123
python -u "c:\Users\AZK19\OneDrive\桌面\111\dec-py\main.py"
c
python -u "c:\Users\AZK19\OneDrive\桌面\111\dec-py\main.py"
vi .\geo_anchor_std.json
less .\geo_anchor_std.json
c
more _vimrc
c
type _vimrc
c
Get-Module PSReadLine -ListAvailable
notepad $PROFILE
ls
c
f
fastfetch
c
ls
c
ll
c
notepad $PROFILE
c
ls
c
pwd
more _vimrc
cls
c
ls
c
cd D:\!Workbenches\
ls
scoop 
scoop cleanup -a
bun 
c
c
pypy
c
ls
c
yz
procexp
ls
c
lsd
ll
c
vi
c
scoop status
scoop update
choco update
choco list
which python 3.12.4
choco --help
c
choco list -lo
choco list -io
choco config get location
choco list -l
choco list -li
choco list -lo -i
choco list --local-only --include-programs
c
choco -h
choco config
choco list --local-only
choco list --detail
cd C:\ProgramData\chocolatey\lib
ls
ll
scoop install versions/zed-nightly
zed
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part04\main.go"
c
go run "d:\!Workbenches\HP_Code\go_learning\Go_Gin\TestGin02\part04\main.go"
ll
go mod init cli
ni main.go
touch todo.go
c
go run .\main.go
c
\go run .\main.go
c
go run .\main.go
go run ./
c
go get github.com/aquasecurity/table
go run ./
c
go run ./
c
go run ./
c
go run ./
c
go run ./
c
ll
touch storage.go
c
go run ./
c
touch command.go
c
go run ./
go run .\main.go
c
go run ./ -list
go run ./ -add "go for work"
go run ./ -list
go run ./ -h
go run ./ -del 2
go run ./ -list
c
go build
cli
c
.\cli.exe -h
.\cli.exe -add "go for a work"
.\cli.exe -l
.\cli.exe -list
c
go build
.\cli.exe -list
.\cli.exe -h
.\cli.exe -toggle 2
.\cli.exe -list
c
scoop search nnn
scoop search thefuck
which pip
c
pip install thefuck
c
& D:/Python/Python312/python.exe
c
scoop config
scoop update
scoop status
scoop update bun eza fzf zig-dev zed-nightly anytype
c
scoop status
& D:/Python/Python310/python.exe c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.17.2024102201-win32-x64\python_files\printEnvVariablesToFile.py c:\Users\AZK19\.vscode-insiders\extensions\ms-python.python-2024.17.2024102201-win32-x64\python_files\deactivate\powershell\envVars.txt
python -u "d:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection\000\project-transformation.py"
pypy list
c
which pypy
cd D:\!Workbenches\20\pypy3.10-v7.3.17-win64
ls
cd .\Scripts
ls
c
cd ~
c
d:\python\Python313\python.exe -u .\project-transformation.py
d:\python\Python313\python.exe -m pip list
& D:/Python/Python313/python.exe d:/!Workbenches/70/Pytorch_Generalized_3D_Lane_Detection/000/project-transformation.py
python -u "d:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection\000\project-transformation.py"
python
which python
c
pip list
c
d:\python\Python313\python.exe
d:\python\Python313\python.exe .\project-transformation.py
ni 1.py
d 1.py
cmd
cmd
python -u "d:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection\000\project-transformation.py"
python
cmd
python
echo %PATH%
[Environment]::SetEnvironmentVariable("PATH", $newPath, [EnvironmentVariableTarget]::Machine)
echo %PATH%
cmd
vim
nvim
[Environment]::SetEnvironmentVariable("PATH", "C:\Windows\System32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0", [EnvironmentVariableTarget]::Machine)
vi
$originalPath = "C:\Program Files\Quarto\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Alacritty\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\HP\OMEN-Broadcast\Common;C:\Program Files\dotnet\;D:\Bandizip\;D:\texlive\2023\bin\windows;%GOPATH\bin%;D:\PDFtk Server\bin\;D:\dart-sdk\bin;D:\Vlang\v;D:\~代码区;D:sca;a3-3.3.1\bin;D:\Java\bin;D:\Groovy\bin;D:\Vls;C:\Program Files\WindowsPowerShell\Scripts\HP.ClientScriptLibrary;D:\Julia-1.10.0\bin;D:\lazygit_0.40.2_Windows_x86_64;C:\Program Files\Vim\vim91;D:\Kotlin\kotlinc\bin;D:\!Workbenches\20\cmake\bin;D:\!Workbenches\20\mingw64\bin;D:\WezTerm;D:\!Workbenches\20\lobster_windows_release\bin;C:\ProgramData\chocolatey\bin;D:\VSCodium\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\!Workbenches\20\c3-windows-Release;D:\Wasmer\bin;D:\Wasmer\globals\wapm_packages\.bin;D:\neovim-qt 0.2.18\bin;D:\GitHub CLI\;C:\Program Files\Go\bin;c:\Users\AZK19\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\Pandoc\;D:\Microsoft VS Code Insiders\bin;D:\HaxeToolkit\haxe;D:\HaxeToolkit\neko;C:\Program Files\PowerShell\7-preview\preview;D:\nodejs\;C:\Program Files\Neovim\bin;C:\Program Files\HP\HP One Agent;D:\%Applications\Scoop\apps\rye\current\shims;D:\%Applications\Scoop\apps\llvm\current\bin;C:\Users\AZK19\.console-ninja\.bin;D:\%Applications\Scoop\persist\rye\shims;D:\%Applications\Scoop\apps\luarocks\current\rocks\bin;D:\%Applications\Scoop\apps\vscodium\current\bin;C:\Users\AZK19\AppData\Local\micromamba;D:\Elm\0.19.1\bin;D:\miniforge3;D:\miniforge3\Library\mingw-w64\bin;D:\miniforge3\Library\usr\bin;D:\miniforge3\Library\bin;D:\miniforge3\Scripts;D:\Python\Python312\Scripts\;D:\Python\Python312\;D:\Python\Python37\Scripts\;D:\Python\Python37\;D:\Python\Python38\Scripts\;D:\Python\Python38\;D:\Python\Python310\Scripts\;D:\Python\Python310\;D:\%Applications\Scoop\apps\yarn\current\global\node_modules\.bin;D:\%Applications\Scoop\apps\yarn\current\bin;D:\Python\Python311\Scripts\;D:\Python\Python311\;D:\Python\Python313\Scripts\;D:\Python\Python313\;C:\Users\AZK19\.emacs.d\bin;D:\Quarto\bin;D:\Python\Python39\Scripts\;D:\Python\Python39\;D:\%Applications\Scoop\shims;D:\Vlang\v\.bin;D:\Ruby32-x64\bin;D:\Python\Python310\Scripts;D:\Python\Python310;D:\Python\Python35\Scripts;D:\Python\Python35;D:\Python\Python37\Scripts;D:\Python\Python37;D:\Python\Python313\Scripts;D:\Python\Python313;C:\Users\AZK19\.cargo\bin;D:\anaconda3;D:\anaconda3\Library\mingw-w64\bin;D:\anaconda3\Library\usr\bin;D:\anaconda3\Library\bin;D:\anaconda3\Scripts;D:\Python\Python36\Scripts;D:\Python\Python36;C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps;D:\Micro;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Helix.Helix_Microsoft.Winget.Source_8wekyb3d8bbwe\helix-24.07-x86_64-windows;C:\Users\AZK19\go\bin;D:\Microsoft VS Code;D:\Hyper\resources\bin;C:\Users\AZK19\.dotnet\tools;D:\Microsoft VS Code\bin;C:\Program Files\nu\bin\;D:\!Workbenches\20\Onyx;D:\!Workbenches\20\Odin;D:\!Workbenches\20\Haskell\ghcup\bin;D:\!Workbenches\60\Focus;D:\!Workbenches\20\pypy3.10-v7.3.17-win64;D:\!Workbenches\20\pypy3.10-v7.3.17-win64\Scripts;D:\!Workbenches\20\nim-2.0.8\bin;C:\Users\AZK19\.nimble\bin;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Typst.Typst_Microsoft.Winget.Source_8wekyb3d8bbwe\typst-x86_64-pc-windows-msvc;D:\Crystal;D:\ghcup\bin;C:\Users\AZK19\.deno\bin;C:\Users\AZK19\AppData\Local\pixi\bin\;C:\Users\AZK19\.pixi\bin;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Microsoft.Sysinternals.ProcessExplorer_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\AZK19\AppData\Roaming\npm;c:\users\azk19\.local\bin"
[Environment]::SetEnvironmentVariable("PATH", $originalPath, [EnvironmentVariableTarget]::Machine)
python
cmd
vi
nvim
python
c
which python
python3 -u "d:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection\000\project-transformation.py"
python3
c
d:\python\Python313\python.exe .\project-transformation.py
[System.Environment]::GetEnvironmentVariable("Path", "Machine")
[System.Environment]::GetEnvironmentVariable("Path", "User")
julia "c:\Users\AZK19\OneDrive\桌面\111\demo.jl"
julia
c
go
c
scoop list
winget list
c
which julia
c
$originalPath = "C:\Program Files\Quarto\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Alacritty\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Program Files\HP\OMEN-Broadcast\Common;C:\Program Files\dotnet\;D:\Bandizip\;D:\texlive\2023\bin\windows;%GOPATH\bin%;D:\PDFtk Server\bin\;D:\dart-sdk\bin;D:\Vlang\v;D:\~代码区;D:scala3-3.3.1\bin;D:\Java\bin;D:\Groovy\bin;D:\Vls;C:\Program Files\WindowsPowerShell\Scripts\HP.ClientScriptLibrary;D:\lazygit_0.40.2_Windows_x86_64;C:\Program Files\Vim\vim91;D:\Kotlin\kotlinc\bin;D:\!Workbenches\20\cmake\bin;D:\!Workbenches\20\mingw64\bin;D:\WezTerm;D:\!Workbenches\20\lobster_windows_release\bin;C:\ProgramData\chocolatey\bin;D:\VSCodium\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\!Workbenches\20\c3-windows-Release;D:\Wasmer\bin;D:\Wasmer\globals\wapm_packages\.bin;D:\neovim-qt 0.2.18\bin;D:\GitHub CLI\;C:\Program Files\Go\bin;c:\Users\AZK19\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\Pandoc\;D:\Microsoft VS Code Insiders\bin;D:\HaxeToolkit\haxe;D:\HaxeToolkit\neko;C:\Program Files\PowerShell\7-preview\preview;D:\nodejs\;C:\Program Files\Neovim\bin;C:\Program Files\HP\HP One Agent;D:\%Applications\Scoop\apps\rye\current\shims;D:\%Applications\Scoop\apps\llvm\current\bin;C:\Users\AZK19\.console-ninja\.bin;D:\%Applications\Scoop\persist\rye\shims;D:\%Applications\Scoop\apps\luarocks\current\rocks\bin;D:\%Applications\Scoop\apps\vscodium\current\bin;C:\Users\AZK19\AppData\Local\micromamba;D:\Elm\0.19.1\bin;D:\miniforge3;D:\miniforge3\Library\mingw-w64\bin;D:\miniforge3\Library\usr\bin;D:\miniforge3\Library\bin;D:\miniforge3\Scripts;D:\Python\Python313\Scripts\;D:\Python\Python313\;D:\Python\Python312\Scripts\;D:\Python\Python312\;D:\Python\Python311\Scripts\;D:\Python\Python311\;D:\Python\Python310\Scripts\;D:\Python\Python310\;D:\Python\Python38\Scripts\;D:\Python\Python38\;D:\Python\Python37\Scripts\;D:\Python\Python37\;D:\Python\Python36\Scripts;D:\Python\Python36;D:\%Applications\Scoop\apps\yarn\current\global\node_modules\.bin;D:\%Applications\Scoop\apps\yarn\current\bin;C:\Users\AZK19\.emacs.d\bin;D:\Quarto\bin;D:\Python\Python39\Scripts\;D:\Python\Python39\;D:\%Applications\Scoop\shims;D:\Vlang\v\.bin;D:\Ruby32-x64\bin;D:\Python\Python35\Scripts;D:\Python\Python35;C:\Users\AZK19\.cargo\bin;D:\anaconda3;D:\anaconda3\Library\mingw-w64\bin;D:\anaconda3\Library\usr\bin;D:\anaconda3\Library\bin;D:\anaconda3\Scripts;C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps;D:\Micro;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Helix.Helix_Microsoft.Winget.Source_8wekyb3d8bbwe\helix-24.07-x86_64-windows;C:\Users\AZK19\go\bin;D:\Microsoft VS Code;D:\Hyper\resources\bin;C:\Users\AZK19\.dotnet\tools;D:\Microsoft VS Code\bin;C:\Program Files\nu\bin\;D:\!Workbenches\20\Onyx;D:\!Workbenches\20\Odin;D:\!Workbenches\20\Haskell\ghcup\bin;D:\!Workbenches\60\Focus;D:\!Workbenches\20\pypy3.10-v7.3.17-win64;D:\!Workbenches\20\pypy3.10-v7.3.17-win64\Scripts;D:\!Workbenches\20\nim-2.0.8\bin;C:\Users\AZK19\.nimble\bin;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Typst.Typst_Microsoft.Winget.Source_8wekyb3d8bbwe\typst-x86_64-pc-windows-msvc;D:\Crystal;D:\ghcup\bin;C:\Users\AZK19\.deno\bin;C:\Users\AZK19\AppData\Local\pixi\bin\;C:\Users\AZK19\.pixi\bin;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Microsoft.Sysinternals.ProcessExplorer_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\AZK19\AppData\Roaming\npm;c:\users\azk19\.local\bin"
[Environment]::SetEnvironmentVariable("PATH", $originalPath, [EnvironmentVariableTarget]::Machine)
$uPath = "D:\Python\Python313\Scripts\;D:\Python\Python313\;D:\Python\Python312\Scripts\;D:\Python\Python312\;D:\%Applications\Scoop\apps\rye\current\shims;D:\%Applications\Scoop\apps\llvm\current\bin;C:\Users\AZK19\.console-ninja\.bin;D:\%Applications\Scoop\persist\rye\shims;D:\%Applications\Scoop\apps\luarocks\current\rocks\bin;D:\%Applications\Scoop\apps\vscodium\current\bin;C:\Users\AZK19\AppData\Local\micromamba;D:\Elm\0.19.1\bin;D:\miniforge3;D:\miniforge3\Library\mingw-w64\bin;D:\miniforge3\Library\usr\bin;D:\miniforge3\Library\bin;D:\miniforge3\Scripts;D:\Python\Python37\Scripts\;D:\Python\Python37\;D:\Python\Python38\Scripts\;D:\Python\Python38\;D:\Python\Python310\Scripts\;D:\Python\Python310\;D:\%Applications\Scoop\apps\yarn\current\global\node_modules\.bin;D:\%Applications\Scoop\apps\yarn\current\bin;D:\Python\Python311\Scripts\;D:\Python\Python311\;C:\Users\AZK19\.emacs.d\bin;D:\Quarto\bin;D:\Python\Python39\Scripts\;D:\Python\Python39\;D:\%Applications\Scoop\shimsD:\Vlang\v\.binD:\Ruby32-x64\binD:\Python\Python35\ScriptsD:\Python\Python35C:\Users\AZK19\.cargo\binD:\anaconda3D:\anaconda3\Library\mingw-w64\binD:\anaconda3\Library\usr\binD:\anaconda3\Library\bin;D:\anaconda3\Scripts;D:\Python\Python36\Scripts;D:\Python\Python36;C:\Users\AZK19\AppData\Local\Microsoft\WindowsApps;D:\Micro;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Helix.Helix_Microsoft.Winget.Source_8wekyb3d8bbwe\helix-24.07-x86_64-windows;C:\Users\AZK19\go\bin;D:\Microsoft VS Code;D:\Hyper\resources\bin;C:\Users\AZK19\.dotnet\tools;D:\Microsoft VS Code\bin;C:\Program Files\nu\bin\;D:\!Workbenches\20\Onyx;D:\!Workbenches\20\Odin;D:\!Workbenches\20\Haskell\ghcup\bin;D:\!Workbenches\60\Focus;D:\!Workbenches\20\pypy3.10-v7.3.17-win64;D:\!Workbenches\20\pypy3.10-v7.3.17-win64\Scripts;D:\!Workbenches\20\nim-2.0.8\bin;C:\Users\AZK19\.nimble\bin;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Typst.Typst_Microsoft.Winget.Source_8wekyb3d8bbwe\typst-x86_64-pc-windows-msvc;D:\Crystal;D:\ghcup\bin;C:\Users\AZK19\.deno\bin;C:\Users\AZK19\AppData\Local\pixi\bin\;C:\Users\AZK19\.pixi\bin;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Microsoft.Sysinternals.ProcessExplorer_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\AZK19\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\AZK19\AppData\Roaming\npm;c:\users\azk19\.local\bin"
[Environment]::SetEnvironmentVariable("PATH", $uPath, [EnvironmentVariableTarget]::User)
julia
python
julia
winget remove --id Julialang.Julia
winget install --id Julialang.Julia
cmd
julia
z c:\Users\AZK19\OneDrive\桌面
c
ll
c
scoop
scoop cleanup -a
cls
c
zed
py
Get-ChildItem Env:
c
$env:Path
notepad
c
fc user.txt m-path.txt
diff
diff user.txt m-path.txt
g .
g -d .\user.txt .\m-path.txt
which julia
which python
oy
c
py
node -v
deno --version
gcc -v
g++ --version
c
javac --version
c
rustc --version
c
vi
cmd
scoop search julia
winget remove --id Julialang.Julia
scoop install julia
winget --help
winget list
which python
c
ls
cls
ll
c
odin --version
c
onyx --version
c
julia
which julia
c
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /restorehealth
 sfc /scannow
python
 d:\python\Python313\python.exe .\project-transformation.py
& D:/Python/Python313/python.exe d:/!Workbenches/70/Pytorch_Generalized_3D_Lane_Detection/000/project-transformation.py
cmd
which miniforge3
which miniforge
& D:/Python/Python313/python.exe d:/!Workbenches/70/Pytorch_Generalized_3D_Lane_Detection/000/project-transformation.py
python -u "d:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection\000\project-transformation.py"
python
scoop list
zoxide --help
c
vi
scoop cleanup -a
vi
vim
procexp --help
procexp
c
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /restorehealth
scoop status
scoop update
c
scoop update bun eza fzf zig-dev zed-nightly anytype
c
zed
scoop cleanup -a
scoop\
scoop
scoop cache
scoop cache -a
c
scoop cache --help
scoop cache show
scoop cache -a
c
scoop cleanup -a
c
nu --version
scoop which nu
c
Set-ExecutionPolicy Bypass -Scope Process -Force;[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; try { & ([ScriptBlock]::Create((Invoke-WebRequest https://www.haskell.org/ghcup/sh/bootstrap-haskell.ps1 -UseBasicParsing))) -Interactive -DisableCurl } catch { Write-Error $_ }
ls
c
nvim
c
julia
Rscript "c:\Users\AZK19\OneDrive\桌面\111\demo-draw\main.r"
c
julia --help
scoop uninstall julia
scoop install julia
c
scoop install julia
julia --version
scoop cleanup -a
scoop update
scoop status
scoop update anytype bun eza innounp llvm vscodium zed-nightly zig-dev
scoop cleanup -a
scoop list
llvm --version
scoop uninstall llvm
scoop install llvm
llvm --version
llvm-arm64
scoop list
scoop status
scoop update
scoop update oh-my-posh
c
winget update
c
winget update
python
py
xc
c
ls
c
get-poshthemes
winget update --id Obsidian.Obsidian
notepad $PROFILE
ls
c
cd D:\!Workbenches\20\pypy3.10-v7.3.17-win64
c
winget update --id vim.vim.nightly
winget update --id GoLang.Go
winget
winget update --id Obsidian.Obsidian
scoop search obsidian
scoop install obsidian
c
scoop install obsidian
 d:\python\Python313\python.exe .\project-transformation.py
scoop install obsidian
obsidian
scoop cleanup -a
c
get-poshthemes
notepad $PROFILE
cd D:\!Workbenches\20\pypy3.10-v7.3.17-win64
cd D:\!Workbenches\
ll
cd 70
ls
cd .\ziglings-repo
ls
cd .\Ziglings-exercises
cd ../..
cd .\Pytorch_Generalized_3D_Lane_Detection
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
ll
c
gh
gh --version
gh auth
gh auth status
c
ls
c
vim _vimrc
scala
c
vi
f
c
wsl -l -v
scala
which scala
c
l
vim
c
ls
c
notepad $profile
ls
c
vi
vi .
lvim .
lvim
lvim .
lvim .
notepad $profile
yz
lvim
lvim .
lvim .\.obsidian.vimrc
c
ls
c
ll
vi
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
ls
c
vi
g
lv
kk
ns
c
cd ?
cd /
cd ~
ll
c
d
c
ls
c
nano
hx
scoop update helix
scoop status
zig versiohn
c
zig version
zls version
zls --version
zls update
c
which zls
scoop status
scoop update zig-dev
which v
v version
vls version
v-analyzer version
v-analyzer --help
v-analyzer check-updates
v --help
v upgrade
v up
v-analyzer clear
v-analyzer clear-cache
c
ll
c
c
v-analyzer version
procexp
c
winget uninstall "windows web experience pack"
c
f
ghci
c
Set-ExecutionPolicy Bypass -Scope Process -Force;[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; try { & ([ScriptBlock]::Create((Invoke-WebRequest https://www.haskell.org/ghcup/sh/bootstrap-haskell.ps1 -UseBasicParsing))) -Interactive -DisableCurl } catch { Write-Error $_ }
ghci
& D:/anaconda3/python.exe c:/Users/AZK19/OneDrive/桌面/111/demo-draw/main.py
c
winget update
c
winget update
c
ping google.com
ll
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\demo.zig"
which vim
c
ls
cd .vim
ls
cd .\plugged
ls
ll
vim _vimrc
vi
vi 
cd .\vimfiles
ls
cd .\plugin
ls
cd .. 
cd .\pluggedls
cd .\plugged
ls
cd .\fittencode.vim
ls
cd doc
ls
vi .\fittencode.vim.txt
cd ~
c
z c:\Users\AZK19\OneDrive\桌面
ls
cd 111
ls
vi .\hello.dart
g .\demo.js
ns
d
z c:\Users\AZK19\OneDrive\桌面|cd 111
cd 111
d .
c
d
ns
c
d
ns
lz
lz
c
ns
nc
ns
git clone https://github.com/nvim-lua/kickstart.nvim.git "${env:LOCALAPPDATA}\Kickstart"
kk
as
git clone --depth 1 https://github.com/AstroNvim/template $env:LOCALAPPDATA\AstroNvim
Remove-Item $env:LOCALAPPDATA\AstroNvim\.git -Recurse -Force
as
scoop cleanup -a
c
f
ni hide-folder-icon.css
g .
lsd
c
as
kk
ns
c
ll
c
scoop cleanup -a
scoop status
scoop update
scoop update oh-my-posh
c
scoop update bun erlang eza fastfetch git llvm nu oh-my-posh rye startship zig-dev
get-poshthemes
notepad $profile
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
zig run "D:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\ch14_Enums.zig"
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\ch14_Enums.zig"
notepad $profile
zig run "d:\!Workbenches\HP_Code\zig_learning\zig_in_self\hello\ch14_Enums.zig"
procexp
py
c
scoop search alacritty
alacritty.exe --version
which vim
wezterm --version
scoop search wezterm
scoop search lobster
lobster --version
lobster version
lobster -V
lobster --help
c
scoop search choco
scoop search chocolatey
scoop search c3
scoop search pandoc
pandoc --version
which code-insiders
scoop search code-insiders
which nvim
nvim --version
scoop search neovim
scoop search elm
scoop install alacritty
reg import "D:\%Applications\Scoop\apps\alacritty\current\install-context.reg"
alacritty.exe --version
which alacritty
alacritty migrate
c
ll
c
cd ~
l
c
ls
c
scoop install wezterm
wezterm
scoop install pandoc
which nvim
which nvim-qt
scoop search vim
vim --version
latex
c
scoop install lobster
lobster
c
scoop search neovim
scoop install neovim
nvim
scoop install neovim-qt
nvim-qt
scoop install elm
elm --version
c
ls
c
vi
d
scoop cleanup -a
c
scoop update starship
c
procexp
odin --version
c3c --version
c
gh repo clone JMoonr/LATR
notepad $profile
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
ll
cd ~
c
scoop search v
c
scoop search v-analyzer
v version
v up
which v-analyzer.exe
v-analyzer.exe --version
v-analyzer.exe --help
v-analyzer check-updates
which v-analyzer.exe
cd d:\vls
ls
.\v-analyzer.exe check-updates
scoop search v-analyzer
cd d:\vls
scoop search v-analyzer
which v
which v-analyzer.exe
v-analyzer up
v-analyzer --version
./ --version
ll
v-analyzer --version
ll
v-analyzer --version
v-analyzer --help
v-analyzer check-updates
v-analyzer --version
v-analyzer up
v-analyzer --version
go --version
c
go version
which go
go env
go version
which go
go env
scoop status
scoop update innounp zed-nightly
scoop status
scoop update oh-my-posh vscodium zig-dev
scoop status
scoop cleanup -a
scoop update
c
code-insiders .
scoop list 
zed
c
get-poshthemes
notepad $profile
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
ll
c
notepad $profile
ls
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
lsd
ll
c
notepad $profile
c
hx
hx --version
which hx
scoop update hx
scoop update helix
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
ll
cd ..
ll
cd latr
c
ll
hx .
hx
c
c
hx
hx
c
hx
lv
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
cd ..
c
ls
cd latr
c
lv .
c
ll
c
vi .
vi
c
vi .\main.py
vi 
vi
ci
v
c
vi
scoop status
scoop update
scoop cleanup -a
c
scoop update
winget update
c
get-poshthemes
notepad $profile
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
cd ..
cd 60
cd ..
cd 60
ls
c
cd ..
ls
cd .\HP_Code
ls
cd .\zig_learning
ls
cd .\Ziglings-exercises-self
winget update --id GoLang.Go
winget update --id vim.vim.nightly
d
n
c
nano
notepad $profile
n
c
f
c
n
scoop update
scoop status
scoop update anytype fzf oh-my-posh zig-dev
scoop cleanup -a
c
scoop --help
scoop cache
c
scoop cache --help
scoop cache rm *
c
ll
c
n
c
scoop cleanup -a
vi
md --help
mkdir --help
c
cmd
nu
cmd
vi
vim
vi
scoop status
c
scoop status
scoop update
c
scoop update hx
scoop update helix
scoop update oh-my-posh
c
scoop update bun erlang eza fastfetch git llvm nu oh-my-posh rye starship zig-dev
:reg
c
vi
scoop status
scoop update obsidian
obsidian --version
c
scoop uninstall zed
which zed
scoop list
scoop uninstall zed-nightly
c
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /restorehealth
sfc /scannow
history
c
vim _vimrc
wget
c
git bash
tabby
which git
vim
kk
d
nvim
ns
c
n
c
n
c
lz
n
ns
kk
ns
c
nm
n
c
ns
git bash
c
which quarto
quarto --version
scoop search quarto
scoop install quarto
c
scoop update
scoop status
scoop update eza fzf oh-my-posh psfzf vscodium zig-dev
c
n
c
n
nm
lz
as
ns
c
n
ns
n
nvim
c
n
lz
nvim
c
ll
c
nvim
nss
ns
c
cmd
c
cmd
which powershell
c
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /restorehealth
 sfc /scannow
c
n
c
n
c
yz
c
n .config
cmd
javac
c
javac --version
vi .
vim _vimrc
cd ~
c
get-poshthemes
notepad $profile
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
C
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
C
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
ll
c
notepad $profile
ll
c
cmd
notepad $profile
cd D:\!Workbenches\
ll
cd 70
cd ..
c
cd 60
ll
cd ../
cd 70
ll
cd .\ziglings-repo\
ls
cd .\Ziglings-exercises\
ll
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
vim --startuptime vim.log
vi
z c:\Users\AZK19\OneDrive\桌面|cd 111
ll
cd 111
c
vi .
vi .\hello.dart
vim --version
vim $HOME\_vimrc
vim $VIM\_vimrc
c
vi
c
z c:\Users\AZK19\OneDrive\桌面
history
get -history
Get-History
c
ll
c
cd demo
ll
cd 99.py
vi .\99.py 
vi .\test.py 
vim $HOME\_vimrc
C
vim main.py
cmd
n .\.config
z c:\Users\AZK19\OneDrive\桌面
cd demo
vi .\main.py
c
n
n .\main.py 
c
n
notepad $profile
tt
c
notepad $profile
o
o --version
Install-Module -Name Terminal-Icons -Repository PSGallery -Force
import-module Terminal-Icons
import-module Terminal-Icons
ll
ls
c
install-module -Name z -Force
z
install-module -Name z -AllowClobber
cls
ll
ls
z d:
ls
z vim
cls
z .fzf
cd ..
cls
notepad $profile
install-module -Name DirColors
c
g --version
c
install-module -Name PSReadLine -AllowPrerelease -Scope CurrentUser -Force -SkipPublisherCheck
Install-Module -Name PSReadLine -Force -SkipPublisherCheck
cls
ll
c
ls
c
notepad $profile
which git
c
notepad $profile
which $profile
c
notepad $profile
cls
ll
c
ns
py
go 
cls
v
v --version
v
c
n .\.wezterm.lua 
c
cls
ll
c
v
cls
kk .\.wezterm.lua 
which powershell
which PowerShell 7.5.0-rc.1
which PowerShell
which pwsh
v
nm .\.wezterm.lua 
v
nc .\.wezterm.lua 
n .\.wezterm.lua 
v
c
n .\.wezterm.lua
cls
vi
n
cls
nu
n .\.wezterm.lua
cls
vi .\.wezterm.lua 
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
ll
cd ..
ll
cd .\ziglings-repo\
cd .\Ziglings-exercises\
ll
cd .\exercises\
ll
cd .\exercises\
ll
n .\001_hello.zig 
cls
nvim
clsw
cls
c
get-poshthemes
c
notepad $profile
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
ll
c
lsd
ll
c
eza
c
ll
c
ll
c
ll
c
ll
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
z c:\Users\AZK19\OneDrive\桌面
ll
c
ll
c
ll
c
vi
c
ll
c
notepad $profile
ll
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
ll
cd ~
ll
c
notepad $profile
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
cls
ll
vi .
ll
md demo
cd demo
c
ni a.py
vi .
n a.py
ns
notepad $profile
c
z c:\Users\AZK19\OneDrive\桌面
cd 111\demo
c
ll
n a.py
ll
vi .\demo.md
c
ni demo.json
kk .\demo.json 
vi .\demo.json 
n .\demo.json 
ns
c
kk
nc
lvim
vim
vi
cls
notepad $profile
echo $profile
ll
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
ll
c
go env
scoop status
c
scoop status
scoop update
scoop update eza fzf oh-my-posh psfzf vscodium zig-dev
scoop cleanup -a
cls
cms
cmd
g clone https://github.com/hardhackerlabs/oh-my-nvim.git
ll
notepad $profile
hn
c
hn
z c:\Users\AZK19\OneDrive\桌面
hn 111
cd ~
cd $appdata
pwd
echo $appdata
cd appdata\local
ll
hn .\hardNvim\
c
hn
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /restorehealth
sfc /scannow
o --version
o
c
f
c
n
kk
c
n .\gitlens.js 
c
scoop update eza fzf oh-my-posh psfzf vscodium zig-dev
scoop update
scoop status
scoop cleanup -a
c
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /restorehealth
sfc /scannow
c
n
ns
c
f
get-poshthemes
c
notepad $profile
ll
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
f
cl
c
lll
c
n
cd D:\!Workbenches\70
ll
cd latr
c
n .
c
which scoop
scoop which scoop
which scoop
notepad $profile
scoop 
scoop config
scoop config --help
scoop config rm git-path
scoop config
which scoop
oh-my-posh init pwsh --config "D:\Applications\Scoop\apps\oh-my-posh\current\themes\amro.omp.json" | Invoke-Expression
c
scoop list
scoop uninstall oh-my-posh
scoop install oh-my-posh
c
Import-Module PSFzf
Set-PsFzfOption -PSReadlineChordProvider 'Ctrl+t' -PSReadlineChordReversedHistory 'Ctrl+r'
oh-my-posh version
which micro
c
n
notepad $profile
nvim
echo $env:SCOOP
Get-Module -Name PSFzf -ListAvailable
which psfzf 
c
scoop list
c
scoop list
n
scoop reset neovim
c
n
obsidian --version
scoop reset neovim
scoop reset
scoop reset --help
scoop reset -a
c
psfzf
scoop reset psfzf
Get-Module PSFzf
Import-Module PSFzf
scoop uninstall psfzf
scoop install psfzf
c
Get-Module PSFzf
c
g
c
g --version
c
fzf
c
ll
c
scoop search vcredist
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /restorehealth
procexp
cd D:\!Workbenches\70\LATR\
ll
c
n .
ns
kk .
c
vi .
c
hx .
c
code
code-insiders .
which dub
c
scoop status
scoop update bun gleam obsidian
c
scoop update bun gleam obsidian
c
scoop status
scoop cleanup -a
c
n .\.config\starship.toml 
cd .\.config\
ll
vi starship-star.toml
ll
clear
notepad $profile
ns
c
ns
c
scoop status
c
scoop status
scoop update
scoop update bun gleam obsidian
scoop update eza fzf oh-my-posh psfzf vscodium zig-dev
c
scoop update
scoop status
marksman --help
c
scoop status
scoop update marksman
c
vi 
vi
n
vi _vimrc
n
c
n
c
scoop reset wezterm
nu
n C:\Users\AZK19\.cache\starship\init.nu
nu
cmd
n .\.config\starship.toml
scoop reset starship
cmd
nu
erlang
scoop list
scoop reset erlang
erl
scoop uninstall erlang
scoop install erlang
procexp
c
erl
erk
erl
c
ll
c
o .
scoop cleanup -a
python
py
c
python3
which python
cls
d:\python\Python314\python.exe
d:\python\Python314\python.exe --help
pip list
d:\python\Python314\python.exe -m pip list
d:\python\Python314\python.exe -m pip install marimo
D:\python\Python314\python.exe -m pip install --upgrade pip
marimo tutorial intro
cls
which vmware
which VMware
cls
scoop search dart-sdk
scoop cache rm *
scoop update
c
scoop search dart-sdk
scoop search dart
dart --version
choco search dart
cls
scoop search scala
scala --version
scoop install scala
scala --version
scala --help
c
scoop search scala3
scoop search groovy
groovy --version
which go
go --version
go version
scoop search go
c
scoop search fnm
fnm --version
winget list
c
typst
which typst
scoop search typst
typst --version
winget uninstall typst
scoop install typst
typst --version
c
scoop install fnm
notepad $profile
scoop install go
go version
haxe --version
haxe --help
cls
gh repo clone JMoonr/LATR
rustc --version
rustc --help
rust 
rustc up
c
rustc upgrade
cargo --help
cargo update
rustc --version
rustup update
c
rustc --version
scoop cleanup -a
scoop cache rm *
c
f
c
dism.exe /online /cleanup-image /scanhealth
cls
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /restorehealth
sfc /scannow
scoop status
scoop update anytype eza llvm  zig-dev
c
f
scoop cache rm *
scoop cleanup -a
c
f
sfc /scannow
dism.exe /online /cleanup-image /scanhealth
dism.exe /online /cleanup-image /checkhealth
dism.exe /online /cleanup-image /restorehealth
scoop cache rm *
scoop cleanup -a
c
scoop update oh-my-posh
c
scoop update
scoop status
scoop update gleam zig-dev
c
scoop cleanup -a
gleam --help
clear
v
clear
scoop status
c
scoop status
scoop update
scoop update gleam zig-dev
scoop status
scoop update anytype bun cacert git oh-my-posh quarto
c
scoop cleanup -a
scoop cache rm *
n .\.config\starship.toml
yz .\.config
n .\.config\
ll
cd .\.config\
c
ll
rm -r .\starship-star.toml 
ll
c
pypy
scoop cache rm *
scoop cleanup -a
c
winget update
which r
r
R
c
r --help
 R
c
winget update
R for Windows 4.3.2 --help
which typst
scoop update typst
scoop status
scoop update
scoop update zig-dev
scoop status
scoop update quarto
c
R
c
ll
cls
set $TERM=xterm-256color
$term
set $TERM=xterm-256color
cls
ll
scoop install macchina
macchina
cls
scoop status
scoop update
scoop update zig-dev
scoop update
scoop status
scoop update eza oh-my-posh
cls
scoop status
scoop upldate
scoop update
scoop update zig-dev
scoop status
scoop update bun
scoop cache rm *
scoop cleanup -a
cc
c
macchina
cls
l
ll
cls
c
get-poshthemes
c
notepad $profile
ll
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
c
cd D:\!Workbenches\70\Pytorch_Generalized_3D_Lane_Detection
cks
cls
vi C:\\Users\\AZK19/.ssh/config
l
c
pwd
vi .\ssh
pwd
cd .\.ssh
c
ll
vi .\config 
cls
php
which php
c
ll
c
cd D:\PhpstormProjects\
ll
cd test
jll
ll
vi .\hello.php 
scoop search php
cls
php -v
cls
scoop status
c
scoop status
scoop update zig-dev
c
scoop update
scoop update zig-dev
scoop status
scoop update 7zip oh-my-posh zig-dev
git bash
git --version
cls
which git
cd D:\Applications\Scoop\shims
ll
c
which yarn
scoop uninstall git
scoop install git
vi .bashrc
vi .\.bash_profile 
scoop install git
git config --global credential.helper manager
D:\Applications\Scoop\apps\git\current\install-context.reg
git --version
cls
sfc /scannow
hx
cls
scoop search 
cls
ll
cls
cd D:\PhpstormProjects\
pwd
ll
cd ..
c
ll
c
cd D:\!Workbenches\
ll
yz ,
yz .
cd 00
cls
ll
c
git clone https://github.com/RustPython/RustPython
cd .\RustPython\
c
ll
c
cargo run --release demo_closures.py
c
cargo run --release demo_closures.py
1
4+9
c
cd ..
ll
rm -r .\RustPython\
rm -rf .\RustPython\
rm -h
rm --help
cd ~
ll
c
scoop status
scoop update
scoop cache rm *
scoop cleanup -a
cls
scoop upodate
scoop update
scoop update zig-dev
c
scoop status
scoop update oh-my-posh
cls
ll
c
scoop status
scoop update
scoop update zig-dev
c
scoop status
scoop gleam go julia
scoop update gleam go julia
scoop cache rm *
scoop cleanup -a
cls
f
macchina
cls
scoop status`

scoop update
scoop update zig-dev
scoop status
scoop update llvm marksman
ll
c
scoop cache rm *
scoop cleanup -a
c
nvim
ns
lz
ns
cls
hx
lll
cls
vi
:qa
ll
cl
cls
scoop 
c
scoop 
scoop alias
scoop cache
scoop homw
scoop home
c
scoop home oh-my-posh
oh-my-posh get shell
cls
vscode
c
scoop update zig-dev
scoop update
scoop status
scoop update erlang eza
scoop status
eza
exa --help
exa
c
eza
exa
scoop cache rm *
scoop cleanup -a
cls
d
n
c
n
ns
scoop status
scoop update
scoop update zig-dev
scoop status
scoop update oh-my-posh
c
get-poshthemes
c
notepad $profile
scoop install nilesoft-shell
shell
scoop uninstall nilesoft-shell
scoop update 
hx
c
n
neovide
ll
cargo new hello_world
cd ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\hello_world\
c
ll
cargo run
 --helpcargo run
c
cargo run --help
cargo help run
c
cargo help run
cargo run -r
c
git status
scoop status
scoop update pandoc
c
n
cls
c
ll
cd .\.config\
ll
notepad $profile
gds
fzf
c
cd ..
n C:\Users\AZK19\AppData\Roaming\nushell\config.nu
cargo new variables
ll
cd ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\variables\
c
ll
cd "d:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\variables\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
cls
pwd
ll
gds
c
cargo run -r
c
cargo run -r
c
cargo run -r
c
cls
ll
cls
pwd
c
f
cls
c
cd D:\!Workbenches\
ll
cd code
cls
yz
csl
cls
lll
cls
notepad $profile
nide
c
ll
n .\vscode-setting.json 
n
n .\vscode-setting.json 
n
n .\vscode-setting.json 
c
ll
pwd
cd D:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\variables
yz
cd ..\
ll
cargo new data_types
ll
mv ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\data_types\ 003data_types
ll
mv ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\hello_world\ 001hello_world
mv ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\variables\ 002variables
cls
ll
git clone https://codeberg.org/AZ123/Rust-learning.git
ll
mv ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\hello_world\ 001hello_world
mv ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\variables\ 002variables
c
cls
ll
cls
cargo new 003data_types
cls
cargo new data_types
mv ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\data_types\ 003data_types
cls
cargo new '003data_types'
cls
cargo run -r
c
z c:\Users\AZK19\OneDrive\桌面
ll
cd todo
c
ls
n .\vscode-setting.json
ll
c
ls
c
pwd
c
ll
c
cd D:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\003data_types
cls
ll
nide .
c
cd D:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\003data_types
nide .
n .
cls
code-insiders
c
cargo run -r
cargo new '004consts_statics'
cargo new 'consts_statics'
ls
rm -rf ..\..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\003data_types\consts_statics\
rm -r ..\..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\003data_types\consts_statics\
ls
cd ..
cls
pwd
gsd
gds
cls
ll
cargo new '004consts_statics'
cargo new 'consts_statics'
cd ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\consts_statics\
c
ls
hx .\Cargo.toml 
cd ..
ll
rm -r ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\consts_statics\
cls
cargo new 'consts_statics' --vcs git
cd ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\consts_statics\
ls
cat .\.gitignore
cargo run -r
ll
ls
cls
cd ..
ls
cls
cargo new 'functions' --vcs git
ls
c
cls
ll
ls
cargo new 'control_flow' --vcs git
ls
cls
git status
cls
which lazygit
cls
 & 'c:\Users\AZK19\.vscode-insiders\extensions\vadimcn.vscode-lldb-1.11.1\adapter\codelldb.exe' 'terminal-agent' '--connect=3096' 
md test
cd .\test\
cls
cargo new learn
cd learn
cls
ll
n .
c
cargo new --help
cargo help new
cls
cargo init --help
cargo init
ls
ll
cls
cargo new learn --vcs none
cd ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\test\learn\
ll
cargo new m --vcs 
cargo new m --help
cargo help new
cargo new my_project --vcs none
cd ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\test\my_project\
ll
cargo new basic
cd basic
cls
ll
n .
hx .
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/TODO/test.py
python -u "c:\Users\AZK19\OneDrive\桌面\TODO\test.py"
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/TODO/test.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/TODO/test.py
cls
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/TODO/test.py
cls
c
 cls
n .
cls
scoop status
scoop update fastfetch rye yazi zig-dev
cls
scoop cache rm *
scoop cleanup -a
cls
f
cls
macchina
cls
git status
cls
c
yz
z c:\Users\AZK19\OneDrive\桌面
yz 
scoop search TortoiseHg
hg
cls
z c:\Users\AZK19\OneDrive\桌面
cd todo
cargo new hg --vcs hg
ls
cd hg
ll
yz
nvdia --smi
nvidia --smi
nvidia -smi
cls
cmd
nvidia-smi
conda info --envs
conda list
cls
c
n
c
n
c
n
c
n
c
n
c
n
lz 
lz
kk
nc
n
lz
n
cls
nvims
ns
n
ls
n
cls
n
lz
n
cls
n
cls
nvy
cls
n
cls
Remove-Item -Path "$env:LOCALAPPDATA\Microsoft\WinGet\*.*" -Recurse -Force
winget --info
winget upgrade --id Microsoft.DesktopAppInstaller
Get-AppxPackage -Name Microsoft.DesktopAppInstaller | Remove-AppxPackage
cls
Get-AppxPackage -Name Microsoft.DesktopAppInstaller | Remove-AppxPackage
winget --info
Remove-Item -Path "$env:LOCALAPPDATA\Microsoft\WinGet\*.*" -Recurse -Force
winget upgrade --id Microsoft.DesktopAppInstaller
winget --info
cls
winget --help
c
scoop update
scoop update zig-dev
c
scoop update
scoop status
scoop update erlang eza scala vscodium
c
n
nvims
ns
cls
ns
n
lz
n
n
ns
n
cls
n
ns
cls
ll
cmake
cmake .
cls
n
cls
vi
scoop status
scoop update
vi
cls
vi
scoop update zig-dev
scoop status
scoop update fzf oh-my-posh
scoop cache rm *
scoop cleanup -a
c
n
c
n
cls
lz
n
cls
ns
kk
nc
nm
notepad $profile
yz
vi
vi 
cls
cd D:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\variables
cd D:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning
cls
ll
cd ..
ll
cd ..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\
cls
git sta
git status
cd ..
git pull https://codeberg.org/AZ123/Rust-learning.git
cls
cd ..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\q
cd ..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\
cls
git pull https://codeberg.org/AZ123/Rust-learning.git
vi .
cls
scoop status
scoop update
scoop update zig-dev
scoop status
scoop update oh-my-posh
c
get-poshthemes\
get-poshthemes
notepad $profile
cls
ll
cls
l
cls
scoop update
cls
scoop update
c
scoop status
scoop update zig-dev
scoop cache rm *
scoop cleanup -a
cls
scoop update
scoop update zig-dev
cls
scoop update
scoop status
scoop update bun fastfetch oh-my-posh-vscodium
scoop update bun fastfetch oh-my-posh vscodium
cd D:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning
ll
cls
git pull
ll
cd basic
ll
cd src
ll
cd .\examples\
ll
cls
git pull https://codeberg.org/AZ123/Rust-learning.git
git status
git pull
git clone https://codeberg.org/AZ123/Rust-learning.git
cd .\Rust-learning\
cls
git branch
cls
cls
which lazygit
lazygit
scoop search btop
scoop install btop
btop
cls
btop
scoop cache rm *
scoop cleanup -a
scoop search markitdown
scoop install  markitdown
scoop install markitdown
choco search manifest
winget search markitdown
cls
cd D:\Python\Python313\
cls
ll
python
python3
py
which py
which python
rye
cls
ll
.\python.exe 
.\python.exe -u pip list
.\python.exe -m pip list
.\python.exe -m pip uv install markitdown
.\python.exe -m uv pip install markitdown
.\python.exe -m uv pip update pip
.\python.exe -m uv pip upgrade pip
.\python.exe -m uv pip --help
.\python.exe -m pip upgrade
.\python.exe -m pip --help
cls
py
which py
d:\python\Python314\python.exe
py
pyw
which pyw
scoop update
cls
c
n
c
scoop update zig-dev
scoop status
scoop update anytype eza marksman oh-my-posh vscodium
scoop cache rm *
scoop cleanup -a
Get-ChildItem env: | Out-File "C:\Users\AZK19\AppData\Local\Temp\tmp-21272tjvDWlO4L26k.txt"
& D:/Python/Python312/python.exe c:/Users/AZK19/OneDrive/桌面/TODO/000.py
scoop update zig-dev
scoop update
scoop status
scoop update llvm oh-my-posh
fuck
cls
n
ns
cls
f
macchina
c
scoop cache rm *
scoop cleanup -a
c
btop
cls
git config
lc
sc
c
py
python
cls
pypy
c
zig init
n ,
n .
pypy
cls
btop
c
z c:\Users\AZK19\OneDrive\桌面
ll
cd todo
c
ls
zig init
ll
yz
cd src
ll
n .
md 12
rm -r 12
cd ..
md 12
cp src 12
cd 12
ll
cd ..
mv build.zig .\build.zig.zon 12
cp build.zig 12
cp .\build.zig.zon  12
cd 12
ll
cd ..
rm -r src
rm -r .\build.zig .\build.zig.zon 
rm -r .\build.zig
rm -r .\build.zig.zon 
cls
ll
cd 12
cls
yz
n ,
n .
cd ..
rm -r 12
ll
md 12
cd 12
c
zig int
zig init
cd src/main
cd .\src\
ll
vi .
cls
zig build
ll
ls
zig run
zig run .\main.zig 
cls
c
n
lz
n
lz
cls
c
n
notepad $profile
c
scoop status
scoop update\
scoop update
scoop update zig-dev
scoop status
scoop update bun oh-my-posh vscodium yazi
ya
yz
ya help
yz --help
cls
z c:\Users\AZK19\OneDrive\桌面
ll
cls
md 12
cd 12
cls
cargo new test
cargo new tt
ll
cls
cd tt
n .
ls
cls
cargo run -r
cd ..
ll
cd ..
rm -r 12
rm -f 12
f
cls
ll
cls
puthon
fuck
which fuck
d:\miniforge3
cd d:\miniforge3
cls
ll
.\python.exe -m pip list
.\python.exe -m pip uninstall thefuck
cks
cls
scoop search thefuck
cls
zig init
ll
cd src
ll
cd ..\
ll
pwd
zig run "d:\!Workbenches\zig--vim--pro\src\main.zig"
zig build test
ll
"D:\Applications\Scoop\shims\zig.EXE" build run
ll
zig build test
zig build
cd .\zig-out\bin
ll
.\zig--vim--pro.exe 
cls
zig init
zig build
cd .\zig-out\bin
.\A-Zig.exe 
cls
zig init
c
ll
md editor/buffer.zig
md editor/cursor.zig
md editor/mode.zig
md ui/terminal.zig
md ui/status.zig
md io/file.zig
md io/input.zig
md history/undo.zig
md search/finder.zig
md highlight/syntax.zig
md highlight/theme.zig
md config/setting.zig
ni readME.md
cls
ll
ls
eza
cls
Get-ChildItem env: | Out-File "C:\Users\AZK19\AppData\Local\Temp\tmp-49040p1vPi3I7B35.txt"
scoop cache rm *
scoop cleanup -a
cls
btop
gh extension install github/gh-copilot
gh extension upgrade gh-copilot
gh copilot explain "sudo apt-get"
gh auth login
gh copilot explain "sudo apt-get"
which v
v up
v
cls
ll
cls
n
yazi
ls
cls
ll
c
f
cls
odin --version
cls
cd d:
cls
ll
cls
eza
cd ~代码区
c
ls
c
lsd
cd .\~Rust_vscode\
ls
cd .\Codeberg-code\
cls
ll
cd .\Rust-learning\
cls
git pull https://codeberg.org/AZ123/Rust-learning.git
c
n .
ni main.rs
n .
cargo run -r
cls
rustc main.rs
main
.\main.exe 
cls
rustc --help
c
rustc run main.rs
rustc -r main.rs
rustc main.rs
.\main.exe
n .
rustc .\datatypes.rs 
.\datatypes.exe 
cls
cd "c:\Users\AZK19\OneDrive\桌面\jk\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
cd "c:\Users\AZK19\OneDrive\桌面\jk\" ; if ($?) { rustc datatypes.rs } ; if ($?) { .\datatypes }
rustc "C:\Users\AZK19\OneDrive\桌面\jk\datatypes.rs" -o "C:\Users\AZK19\AppData\Local\Temp\simple-runner\a" && "C:\Users\AZK19\AppData\Local\Temp\simple-runner\a"
git init
cd "c:\Users\AZK19\OneDrive\桌面\jk\" ; if ($?) { rustc datatypes.rs } ; if ($?) { .\datatypes }
cd "d:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\basic\src\file\" ; if ($?) { rustc option_and_results.rs } ; if ($?) { .\option_and_results }
cd "d:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\basic\src\" ; if ($?) { rustc main.rs } ; if ($?) { .\main }
v run d:\!Workbenches\HP_Code\v_learning\Vlang_basic_project\demo\src\main.v
code
gh repo clone AZKvgkv/Code_V
c
pwd
ls
cls
v init
git status
c
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Basic\ch01_hello.v
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Basic\ch02_functions.v
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Basic\ch02_functions.vsh
v run "d:\!Workbenches\HP_Code\v_learning\Code_V\Basic\ch02_functions.vsh"
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Basic
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Basic\ch02_functions.v
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Basic\dd.vsh
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Basic\ch02_functions.v
v run d:\!Workbenches\HP_Code\v_learning\Code_V\Basic\ch02_functions.vsh
git clone https://github.com/AZKvgkv/Code_V.git
git status
git push
git config --global user.name
git credential-manager clear
git push
cls
git push
scoop cache rm *
scoop cleanup -a
cls
c
n 
n
cls
d
deb
cls
cargo new my_package
c
cargo new auth_service --lib
c
pwd
ls
cd ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\auth_service\
cls
ll
cargo install cargo-modules
which cargo-modules.exe
scoop cache rm *
scoop cleanup -a
c
cargo modules generate tree
cargo-modules generate tree
cls
cargo modules generate tree
cargo-modules --help
cargo-modules structure
c
cd D:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning
cls
git pull
git status
git pull
cls
git pull 
cls
c
scoop status
scoop update
scoop update zig-dev
Get-Contcls
c
scoop status
notepad $profile
scoop update bun neovim nu oh-my-posh pandoc
git.exe --version
cls
cls
scoop cache rm *
scoop cleanup -a
c
notepad $profile
Install-Module -Name z -Scope CurrentUser
scoop status
scoop update
c
scoop update zig-dev
scoop status
scoop update
cls
scoop update
scoop update zig-dev
scoop status
scoop update bun
cls
scoop cache rm *
scoop cleanup -a
cargo-modules structure
ls
cd ..\..\..\..\~代码区\~Rust_vscode\Codeberg-code\Rust-learning\auth_service\
cls
cargo-modules structure
c
cargo-modules structure
scoop update
dlw
cls
& D:/Python/Python314/python.exe Untitled-1
wsl --list -v
c
wsl --list -v
wsl --unregister Ubuntu-24.04
wsl --unregister Arch
wsl --list -v
cls
wsl --list -v
wsl --unregister Ubuntu-24.04
wsl --list -v
wsl --shutdown
wsl --export Fedora E:\WSL2\fedora-backup.tar
wsl --unregister Fedora
wsl --import Fedora E:\WSL2\Fedora E:\WSL2\fedora-backup.tar
del E:\WSL2\fedora-backup.tar
wsl --shutdown
f
wsl --list -v
wsl --shutdown
wsl --list -v
c
scoop update
scoop update zig-dev
c
scoop status
scoop update eza fastfetch
c
f
scoop cache rm *
scoop cleanup -a
f
cls
pwd
ll
c
cargo new bank -lib
cargo new bank --lib
cls
c
scoop status
scoop update
vi
c
ls
cd bank
cls
cargo run
cargo test
cls
scoop update 
scoop update zig-dev
c
wsl --list -v
wsl --shutdown
wsl --export openSUSE-Tumbleweed E:\WSL2\opensuse-backup.tar
wsl --unregister openSUSE-Tumbleweed
wsl --import openSUSE-Tumbleweed E:\WSL2\openSUSE E:\WSL2\opensuse-backup.tar
del E:\WSL2\opensuse-backup.tar
wsl --list -v
cls
wsl --unregister openSUSE-Tumbleweed
kk
pwd
cd appdata\local
c
ls
cd .\Kickstart\
cls
ls
ll
kk
c
kk
c
kk
gh repo clone hendrikmi/dotfiles
c
kk
git status
:qa
c
kk
cd C:\Users\AZK19\OneDrive\桌面\dotfiles\nvim
ls
pwd
notepad $profile
tt
c
tv
notepad $profile
hn
cls
scoop update zig-dev
scoop update
c
scoop status
scoop update cacert zig-dev
scoop uninstall zig-dev
scoop install zig-dev
scoop install zig
cls
scoop install zig-dev
scoop update
scoop update versions
scoop install  versions
scoop install zig-dev
which scoop
cls
scoop update
scoop config proxy
scoop install zig-dev
scoop config
scoop config proxy
scoop uninstall zig-dev
scoop update
scoop config proxy localhost:7890
scoop install zig-dev
ipconfig /flushdns
scoop install zig-dev
scoop status
scoop cleanup -a
scoop cache rm *
cls
c
ls
cargo new pro
cargo new pro --git
cargo new --help
c
cargo new pro
scoop update
scoop update zig-dev
scoop status
scoop cache rm *
scoop cleanup -a
c
kk
d
n
ns
c
git clone https://gitee.com/Python_Ai_Road/eat_pytorch_in_20_days
"d:/00_20_pytorch/eat_pytorch_in_20_days/.venv/Scripts/python.exe -m pip install ipykernel -U --force-reinstall"
d:/00_20_pytorch/eat_pytorch_in_20_days/.venv/Scripts/python.exe -m pip install ipykernel -U --force-reinstall
python --version
pip list
pip install torch
python -m pip install --upgrade pip
pip install numpy
c
cd .\eat_pytorch_in_20_days\
c
pip install torch
pip list
pip install torch
pip uninstall torch
cls
which julia
python --version
pip install torchkeras
pip install numpy
pip uninstall torchkeras
c
pip install torchkeras
jupyter kernelspec list
jupyter kernelspec remove julia-1.10
sudo jupyter kernelspec remove julia-1.10
jupyter kernelspec list
sudo jupyter kernelspec remove julia-1.10.0-1.10
jupyter kernelspec list
cls
pip install pandas matplotlib
pip install scipy
pip install tqdm
pip install requests
pip install sklearn
pip install scikit-learn
btop
c
scoop search btop
scoop uninstall btop
scoop install btop-lhm
btop
scoop search simplenore
scoop search simplenote
scoop install simplenote
simplenote
c
cd D:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning
ls
cargo new orphan_rules
gh auth login
fls
c
scoop update zig-dev
scoop status
scoop update eza
scoop cache rm *
scoop cleanup -a
scoop update zed
scoop update helix
hx
vi .
hx .
hx --health
c
hx --health
c
cd D:\~代码区\~Rust_vscode\Codeberg-code\Rust-learning
hx .
c
md az_nvim
cd .\az_nvim\
c
notepad $profile
az
aa
zz
az
n
c
az
c
n
ns
az
az
lz
az
vi .
n .
az
c
az
n
which lua
which luarocks
scoop uninstall lua
which luarocks
scoop install lua5.1
scoop search lua
scoop install lua-for-windows
which luarocks
scoop uninstall luarocks
which luarocks
c
lua -v
luarocks --version
luarocks --help
c
which luarocks
scoop install luarocks
scoop cache rm *
scoop cleanup -a
az
scoop install luarocks
lua -v
c
which lua
az
scoop uninstall luarocks
scoop uninstall lua
lua -v
c
az
scoop uninstall lua-for-windows
scoop install lua-for-windows
luarocks help
c
az
luarocks --version
luarocks update
luarocks help
scoop cache rm *
scoop cleanup -a
cls
c
cargo new lifetime
rg
az
c
c
lz
n
c
ns
az
az
c
az
n
az
ls
cmake
 .cmake
cmake .
.\Makefile 
cmake .\Makefile 
luarocks --version
lua -v
luarocks install plenary.nvim
c
az
which lua
which luarocks
lua -v
luarocks --version
n
scoop install luarocks
az
scoop search luarocks
scoop uninstall lua-for-windows
lua -v
c
scoop search luarocks
az
c
az
scoop uninstall lua
scoop install lua-for-windows
az
scoop uninstall lua-for-windows
scoop install lua
cls
scoop cache rm *
scoop cleanup -a
lvim
scoop status
scoop update helix neovide oh-my-posh quarto zig-dev
hx
scoop cache rm *
scoop cleanup -a
c
scoop uninstall vscodium
scoop install vscodium
c
cls
ll
c
n
c
scoop cache rm *
scoop cleanup -a
c
csl
cls
c
az
c
az
c
az
luarocks --version
lua -v
luarocks --version
scoop install luarocks
scoop update luarocks 
luarocks
luarock
lua
luarocks --version
scoop uninstall lua
c
which typst
which winget
scoop search winget
winget --version
procexp
which procexp
scoop search procexp
pypy
which pypy
which odin
c
which winget
which nu
which nim
c
which lua
scoop install lua
scoop install luarocks
luarocks --version
luarocks
scoop cleanup -a
scoop cache rm *
scoop install luarocks
luarocks --version
c
az
luarocks install plenary.nvim
which lua
which luarocks
luarocks config lua_interpreter D:\Applications\Scoop\shims\lua.exe
az
scoop info lua
luarocks install plenary.nvim
luarocks --local  config lua_interpreter D:\Applications\Scoop\shims\lua.exe
luarocks --local  config variables.LUA D:\Applications\Scoop\shims\lua.exe
c
scoop info
which scoop
scoop config
which java
scoop search java
which groovy
groovy --version
c
which anytype
c
pypy 1.py
c
pypy 1.py
cls
which neovide
cls
scoop cleanup -a
git clone 
c
git clone https://github.com/AZ08867/30-Days-Of-Python.git
c
n
az
kk
lvim
c
scoop status
c
ll
cls
scoop update gleam zig-dev
scoop ca
scoop cache rm *
scoop cleanup -a
c
du
dust
scoop install dust
z c:\Users\AZK19\OneDrive\桌面
c
dust
c
scoop install duf
duf
c
scoop install bottom
btm
c
scoop install exa
eza
eza -l
ll
c
ls -l
c
notepad $profile
la
c
c
bat
which bat
c
scoop install httpie
http
http -v github.com
# Install httpie
choco install httpie
choco upgrade 
Remove-Item "$env:ChocolateyInstall\cache\*" -Recurse -Force
which choco
choco config list
Remove-Item "$env:TEMP\*" -Recurse -Force
c
scoop install hpyerfine
scoop cache rm *
c
duf
dust
cs
c
f
c
& D:/Python/Python314/python.exe d:/!Workbenches/502/az08867_github_code/30-Days-Of-Python/01_Day_Introduction/helloworld.py
& D:/Python/Python312/python.exe d:/!Workbenches/502/az08867_github_code/30-Days-Of-Python/01_Day_Introduction/helloworld.py
c
scoop update
c
scoop update zig-dev
scoop status
c
cargo new box
cargo new box_pointer
c
zls version
zls --version
which zls
scoop uninstall zls
c
zig version
scoop search zls
scoop bucket add extras
scoop uninstall zig
scoop uninstall zig-dev
scoop install zig
v --version
which v
v-analyzer --version
v-analyzer up
which v-analyzer
v-analyzer up --nightly
c
which v-analyzer
which v-analyzer.exe
c
scoop bucket add versions
scoop install versions/v-weekly
v --version
v-analyzer up
v-analyzer --version\
v-analyzer --version
c
scoop cache rm *
scoop cleanup -a
scoop install copyq
copyq
c
scoop cache rm *
scoop cleanup -a
scoop update
c
scoop status
scoop update bat bun eza fastfetch
c
bun
cls
scoop cache rm *
scoop cleanup -a
cls
c
curl.exe -L -C - "https://d.pcs.baidu.com/file/eedcce261k94fe2fddca7cdb28bce082?fid=1542741441-250528-831425786010430&rt=pr&sign=FDtAERK-DCb740ccc5511e5e8fedcff06b081203-thsBzlEUKXQPyNNvtoRUNO%2Bt6X8%3D&expires=8h&chkbd=0&chkv=0&dp-logid=857192814360946282&dp-callid=0&dstime=1736506793&r=740264392&vuk=1542741441&origin_appid=15195230&file_type=0" -o "apollo_anchor3dlane_iter.pth" -A "pan.baidu.com" -b "BDUSS=1FRXItNndPRTF5aThjWkkxT29VcFlZZFBpQUl6RUVTdFpJU3VramhJbnhzWjFuSVFBQUFBJCQAAAAAAAAAAAEAAAATWx7wyq7Su7XjMTMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEkdmfxJHZnbi"
vim .
ni init.el
vim .
rm -f .\init.el~ 
c
scoop update
c
scoop status
scoop update bat
scoop status
c
ls
c
ll
c
eza
c
nvim
c
az
c
hx --version
c
pypy
c
f
which vscodium
which vscodium-insider
which vscodium-insiders
c
julia --version
scoop status
scoop config proxy
scoop config proxy default
scoop config proxy
c
scoop status
scoop config http_proxy http://your_proxy:port
scoop config https_proxy https://your_proxy:port
scoop status
scoop config proxy
c
scoop status
scoop config http_proxy http://127.0.0.1:7890
scoop config https_proxy https://127.0.0.1:7890
scoop status
scoop config proxy https://127.0.0.1:7890
scoop config proxy
scoop config proxy localhost:7890
scoop status
scoop update
c
scoop update zig
scoop status
scoop update oh-my-posh startship
c
scoop install zvm zigup
zvm --help
zigup --help
c
zig zen
c
scoop cache rm *
scoop cleanup -a
c
node "d:\%pro_git\my-repo\JavaScript-code\myFirst-JS-project\array.js"
ls
c
ls
c
nvim
c
which v
which v-analyzer
c
which v
v run "d:\!Workbenches\HP_Code\v_learning\Code1_V\Base\ch1_hello.v"
c
which v-analyzer
scoop search v-analyzer
curl -o install.vsh https://raw.githubusercontent.com/v-analyzer/v-analyzer/main/install.vsh; v run install.vsh; del install.vsh
which v-analyzer
c
git clone https://github.com/v-analyzer/v-analyzer.git
cd .\v-analyzer\
c
ls
v build.vsh
c
cp --help
cp
cp -h
lazygit version
lazygit --version
which lazygit
lazygit --version
c
which v-analyzer
c
v-analyzer up
.\v-analyzer.exe up
which v-analyzer
c
v-analyzer up
scoop search vls
which v-analyzer
c
v download -RD https://raw.githubusercontent.com/vlang/v-analyzer/main/install.vsh
which v-analyzer
which v
v --version
v env -print-path
v help
v where
echo %VROOT%
echo $VROOT
v doctor
v up
which v
c
v doctor
scoop install ffmpeg 7zip jq poppler fd ripgrep fzf zoxide imagemagick
z c:\Users\AZK19\OneDrive\桌面
yz
ffmpeg
c
z c:\Users\AZK19\OneDrive\桌面
yz .
c
which yazi
which ziggup
which zigup
scoop uninstall yazi
yz
c
which git
yz
yazi
notepad $profile
yz
c
winget search microsoft.windows-terminal-dev
yz
z c:\Users\AZK19\OneDrive\桌面
yz
z c:\Users\AZK19\OneDrive\桌面
yz .
notepad $profile
z c:\Users\AZK19\OneDrive\桌面
yz .
z c:\Users\AZK19\OneDrive\桌面
yz
c
ls
c
yz
notepad $profile
z c:\Users\AZK19\OneDrive\桌面
yazi
yz
ls
c
nvim
az
c
ls
c
ls
c
cd d
c
ls
c
get-poshthemes
c
ls
c
c
notepad $profile
c
git clone https://codeberg.org/ziglings/exercises.git
c
cd D:\!Workbenches\HP_Code\zig_learning\
ls
cd .\exercises\
c
zig version
zls version
zls --version
c
zig build
c
cmd
c
git tag
git checkout v0.13.0
cls
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
zls --version
which zls
scoop update zls
scoop status
which v
scoop update fastfetch pandoc starship v-weekly
scoop cache rm *
scoop cleanup -a
c
scoop update v
which v
v --version
scoop uninstall v-weekly
which v
scoop install v
v 
v --version
c
zig build
c
zig build
c
zig build
which zls
cd D:\Applications\Scoop\
yz
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
ls
c
scoop search jai
scoop update
scoop status
scoop update alacritty git llvm vscodium
c
ls
lz .
c
lz
ls
c
cls
notepad $profile
ls
c
notepad $profile
ls
c
get-poshthemes
c
notepad $profile
c
notepad $profile
scoop install busybox
vi
c
scoop cache rm *
scoop cleanup -a
c
scoop cleanup -a
c
git --version
c
scoop install gsudo
c
scoop cache rm *
c
notepad $profile
ls
c
scoop intall terminal-icons
scoop install terminal-icons
c
hd
az
hd
az
c
Get-InstalledModule
Install-Module -Name PowerShellGet -Force
c
Install-Module -Name PowerShellGet -Force
Install-Module PSReadLine
Update-Module PSReadLine -Force
Install-Module PSReadLine
c
note
ls
c
Install-Module PSReadLine
Get-InstalledModule
Install-Module PSReadLine
c
Install-Module PSReadLine
notepad $profile
Get-PSReadLineOption
c
$psversiontable
c
touch
c
get-poshthemes
c
notepad $profile
z c:\Users\AZK19\OneDrive\桌面
c
ls
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
c
zig builf
zig build
c
scoop upodate
scoop update
notepad $profile
scoop status
scoop update bun eza go lazygit
Set-PSReadLineOption -EditMode Emacs
Get-PSReadLineOption
notepad $profile
scoop status
scoop cache rm *
scoop cl
scoop cleanup -a
c
scoop update  *
c
notepad $profile
c
zig build
c
zig build
c
zig build
c
zig build
c
zig build
"D:\Applications\Scoop\shims\zig.EXE" build run
c
zig build
c
cls
c
scoop update
scoop status
scoop update bun erlang eza fzf helix innounp julia neovim-qt scala simplenote vscodium zvm
c
scoop status
scoop update eza fzf helix julia scala zvm
c
scoop status
scoop update neovim-qt simplenote vscodium innounp LXGWWenKaiMono
c
scoop status
scoop update erlang
c
vi
lz
c
ls
c
ns
lvim
c
nvim
c
ls
c
notepad $profile
n
nvims
c
ns
c
nvim
n
notepad $profile
n
cls
c
f
c
macchina
c
n
c
scoop status
scoop update
scoop status
scoop update fastfetch oh-my-posh vscodium
c
scoop status
odin --version
c
scoop status
scoop update
c
scoop status
scoop update bun
cx
c
ls
python 6.py
vi 6.py
python 6.py
vi 6.py
kk 6.py
python 6.py
kk 6.py
python 6.py
kk 6.py
c
python 6.py
c
ni 1.go
kk 1.go
c
scoop update
c
scoop status
scoop update bun
c
scoop update
c
scoop status
scoop update
scoop status
scoop update eza neovim obsidian
c
which odin
yz D:\!Workbenches\20\Odin\
scoop cache rm *
scoop cleanup -a
c
which odin
c
f
odin run .
c
cd 01
c
ls
c
odin run .
odin run main.odin
odin run main.odin -file
x
c
odin run main.odin -file
c
odin --help
c
odin build
odin build .
c
ls
c
go run .\iteration.go 
cargo run .\iteration.rs
rustc .\iteration.rs 
c
rustc .\iteration.rs 
ls
.\iteration.exe 
c
cd hello
ls
cargo new iteration
c
cd ..
ls
c
ls
cd hello
c
ls
cd .\iteration\
c
ls
cargo run 
ls
rm -f .\hello\
rm -rf .\hello\
rm .\hello\
c
pypy .\iteration.py 
c
pypy .\iteration.py 
ls
c
ls
pypy .\iteration.py 
c
ipython
& D:/Python/Python314/python.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/iteration.py
c
& D:/Python/Python314/python.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/iteration.py
c
& D:/Python/Python314/python.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/iteration.py
c
& D:/Python/Python314/python.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/iteration.py
c
notepad $profile
notepad3 $profile
notepad $profile
which pypy
C
c
notepad $profile
elevate
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/iteration.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/iteration.py
notepad $profile
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/iteration.py
c
 & 'd:\!Workbenches\20\pypy3.10-v7.3.17-win64\pypy.exe' 'c:\Users\AZK19\.vscodium-insiders\extensions\ms-python.debugpy-2024.14.0-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '14659' '--' 'C:\Users\AZK19\OneDrive\桌面\hello\code_python\iteration.py' 
c
odin run .
c
ls
 & 'd:\!Workbenches\20\pypy3.10-v7.3.17-win64\pypy.exe' 'c:\Users\AZK19\.vscodium-insiders\extensions\ms-python.debugpy-2024.14.0-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '8944' '--' 'C:\Users\AZK19\OneDrive\桌面\hello\code_python\iteration.py' 
 c:; cd 'c:\Users\AZK19\OneDrive\桌面\hello\code_python'; & 'd:\!Workbenches\20\pypy3.10-v7.3.17-win64\pypy.exe' 'c:\Users\AZK19\.vscodium-insiders\extensions\ms-python.debugpy-2024.14.0-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '8965' '--' 'C:\Users\AZK19\OneDrive\桌面\hello\code_python\iteration.py' 
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/iteration.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/iteration.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/iteration.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe C:\Users\AZK19\OneDrive\桌面\hello\code_python\recursion.py 
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/recursion.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/recursion.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/recursion.py
cls
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/recursion.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/recursion.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/recursion.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/recursion.py
 & 'd:\!Workbenches\20\pypy3.10-v7.3.17-win64\pypy.exe' 'c:\Users\AZK19\.vscodium-insiders\extensions\ms-python.debugpy-2024.14.0-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '10212' '--' 'C:\Users\AZK19\OneDrive\桌面\hello\code_python\recursion.py' 
 c:; cd 'c:\Users\AZK19\OneDrive\桌面\hello\code_python'; & 'd:\!Workbenches\20\pypy3.10-v7.3.17-win64\pypy.exe' 'c:\Users\AZK19\.vscodium-insiders\extensions\ms-python.debugpy-2024.14.0-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '10226' '--' 'c:\Users\AZK19\OneDrive\桌面\hello\code_python\recursion.py' 
c
scoop update *
scoop status
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/recursion.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/recursion.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/recursion.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe C:\Users\AZK19\OneDrive\桌面\hello\code_python\time_complexity.py 
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe C:\Users\AZK19\OneDrive\桌面\hello\code_python\time_complexity.py 
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/time_complexity.py
 & 'd:\!Workbenches\20\pypy3.10-v7.3.17-win64\pypy.exe' 'c:\Users\AZK19\.vscodium-insiders\extensions\ms-python.debugpy-2024.14.0-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '3439' '--' 'c:\Users\AZK19\OneDrive\桌面\hello\code_python\time_complexity.py' 
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe C:\Users\AZK19\OneDrive\桌面\hello\code_python\time_complexity.py 
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe C:\Users\AZK19\OneDrive\桌面\hello\code_python\time_complexity.py 
 & 'd:\!Workbenches\20\pypy3.10-v7.3.17-win64\pypy.exe' 'c:\Users\AZK19\.vscodium-insiders\extensions\ms-python.debugpy-2024.14.0-win32-x64\bundled\libs\debugpy\adapter/../..\debugpy\launcher' '3505' '--' 'c:\Users\AZK19\OneDrive\桌面\hello\code_python\time_complexity.py' 
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe C:\Users\AZK19\OneDrive\桌面\hello\code_python\time_complexity.py 
notepad $profile
az
c
luarocks --version
z C:\Users\AZK19\AppData\Local\azNvim
ls
c
md lua
git clone https://github.com/nvim-neorocks/rocks.nvim.git lua/rocks
c
ls
ll
c
ls
cd lua
ls
cd ..
ls
vi init.lua
cat .\init.lua 
c
bat .\init.lua 
c
az
ls
cd lua
ls
cd .\rocks\
ls
c
cd ..
luajit
lua
scoop search luajit
scoop install luajit
ls
cp rocks ..
ls
cd ..
ls
rm lua
rm -f lua
luajit --version
c
ls
yz .
ls
c
az
which make
scoop install make
az
scoop info lua
scoop install lua@5.1
c
which lua
scoop uninstall lua
which luarocks
c
scoop search lua
scoop install lua51
c
az
c
luarocks --version
c
scoop cache rm *
scoop cleanup -a
c
notepad $profile
z C:\Users\AZK19\AppData\Local\azNvim
cd ..
yz
az
:q
c
az -u NORC
az -u NORC -c "source https://raw.githubusercontent.com/nvim-neorocks/rocks.nvim/master/installer.lua"
notepad $profile
a --version
c
a
a --version
c
a -u NORC -c "source https://raw.githubusercontent.com/nvim-neorocks/rocks.nvim/master/installer.lua"
lua
scoop info lua51
lua -v
luarocks --version
a -u NORC -c "source https://raw.githubusercontent.com/nvim-neorocks/rocks.nvim/master/installer.lua"
c
scoop uninstall luarocks
scoop bucket add neorocks-scoop https://github.com/nvim-neorocks/rocks-scoop.git
scoop install neorocks-scoop/luarocks
scoop uninstall lua
scoop uninstall lua51
c
scoop install neorocks-scoop/luarocks
scoop uninstall neorocks-scoop/luarocks
scoop install neorocks-scoop/luarocks
c
a -u NORC -c "source https://raw.githubusercontent.com/nvim-neorocks/rocks.nvim/master/installer.lua"
c
ls
c
z C:\Users\AZK19\AppData\Local\azNvim
ls
yz
ls
vi init.lua
a
notepad
luarocks --lua-version=5.1 --tree <C:\Users\AZK19\AppData\Local\azNvim-data/rocks> --server='https://nvim-neorocks.github.io/rocks-binaries/' install rocks.nvim
luarocks --lua-version=5.1 --tree C:\Users\AZK19\AppData\Local\azNvim-data/rocks --server='https://nvim-neorocks.github.io/rocks-binaries/' install rocks.nvim
a
c
ls
c
az
c
f
551-191
400-112
c
scoop cache rm *
scoop cleanup -a
c
z C:\Users\AZK19\AppData\Local\azNvim
yz
c
notepad $profile
az
c
rust
c
which rustc
c
macchina
c
f
c
scoop info lua
luajit --version
luajit -v
c
notepad $profile
c
scoop update *
scoop status
c
scoop info
c
scoop --help
scoop which python
scoop which nu
which nu
c
which make
scoop which make
cls
notepad $profile
c
notepad $profile
$global:ProgressPreference = 'SilentlyContinue'
c
notepad $profile
c
scoop update oh-my-posh starship
c
get-poshthemes
c
notepad $profile
c
z C:\Users\AZK19\AppData\Local\azNvim
z c:\Users\AZK19\OneDrive\桌面
z c:\Users\AZK19\OneDrive\桌面
eza -l
c
z c:\Users\AZK19\OneDrive\桌面
ll
eza -l
eza
notepad $profile
c
scoop info emacs
c
emacs
c
az
c
nvims
ns
c
which foucs
c
scoop update *
c
scoop cache rm *
scoop cleanup -a
c
pypy
c
ls
c
ll
c
notepad $profile
gds 
c
z c:\Users\AZK19\OneDrive\桌面
gds
copypath
c
cd ~
c
$profile
c
$profile
c
clear
$env:USERPROFILE
$profile
notepad $profile
gds
z c:\Users\AZK19\OneDrive\桌面
gds
c
ns
notepad $profile
ls
c
notepad $profile
Measure-Command { . $PROFILE }
$profile
notepad $profile
Measure-Command { . $PROFILE }
scoop cache rm *
scoop cleanup -a
Measure-Command { . $PROFILE }
notepad $profile
Measure-Command { . $PROFILE }
c
ls
c
Measure-Command { . $PROFILE }
which make
c
Measure-Command { . $PROFILE }
notepad $profile
notepad $profile
c
nvim
c
ls
c
z c:\Users\AZK19\OneDrive\桌面
ls
ls -l
lsd
lsd -l
ll
c
notepad $profile
ll
c
ll
c
ll
c
emacs --version
c
scoop cleanup -a
scoop cache rm *
c
Measure-Command { . $PROFILE }
c
ls
c
z c:\Users\AZK19\OneDrive\桌面
ls
c
nvim
c
notepad $profile
$profile
Measure-Command { . $PROFILE }
measure-Command { . $PROFILE }
clear
measure-Command { . $PROFILE }
Measure-Command { . $PROFILE }
ls
c
ls
c
z c:\Users\AZK19\OneDrive\桌面
ls
ll
lsd -l
c
ls
lsd -l
c
ls
z c:\Users\AZK19\OneDrive\桌面
Measure-Command { . $PROFILE }
z c:\Users\AZK19\OneDrive\桌面
ls
lsd
lsd -l
ll
c
Measure-Command { . $PROFILE }
c
ls
c
code-insiders
c
z c:\Users\AZK19\OneDrive\桌面
eza
eza -l
c
ls
c
n
ns
c
ns
c
notepad $profile
az
c
az
c
notepad $profile
kk
c
choco -h
c
ns
c
as
kk
c
nm
lz
c
n
az
as
n kk
n as
n lz
c
n
c
ns
c
notepad $profile
n
ns
c
n
ns
c
ns
ns nm
ns
c
ns
lvim
az
ns LazyVim
c
kk
Measure-Command { . $PROFILE }
c
az
ns
ns az
n
ns
n
nvim
n
ns kk
n
notepad $profile
Measure-Command { . $PROFILE }
c
n
ns kk
n
ls
c
ns
ns n
lvim
which lvim
c
Measure-Command { . $PROFILE }
c
ns nm
c
yz
z C:\Users\AZK19\AppData\Local
yz
notepad $profile
c
ns
notepad $profile
which scoop
copypath
c
z c:\Users\AZK19\OneDrive\桌面
touch 2.txt
ls
rm .\2.txt 
ls
c
gds
Get-DirectorySize 
c
z c:\Users\AZK19\OneDrive\桌面
gds
c
which lvim
which scoop
which nu
which python
which pypy
c
scoop info llvm
c
z c:\Users\AZK19\OneDrive\桌面
ls
ni 1.go
c
copyfile 1.go
z c:\Users\AZK19\OneDrive\桌面
copyfile 1.go
copyfile -h
copyfile c:\Users\AZK19\OneDrive\桌面\1.go
z c:\Users\AZK19\OneDrive\桌面
ls
ns kk 1.go
vi 1.go
c
ls
copyfile 1.go
copypath
c
M
c
Measure-Command { . $PROFILE }
notepad $profile
Measure-Command { . $PROFILE }
c
z c:\Users\AZK19\OneDrive\桌面
gds
c
z c:\Users\AZK19\OneDrive\桌面
gds
c
notepad $profile
Measure-Command { . $PROFILE }
c
z c:\Users\AZK19\OneDrive\桌面\
c
ls
ni 1.go
ns
az
ns az 1.go
copyfile 1.go
copypath
c
Measure-Command { . $PROFILE }
c
scoop update *
scoop update eza gleam lobster nu vscodium
c
scoop status
scoop update erlang vscodium
c
scoop cache rm *
scoop cleanup -a
c
scoop update *
c
ccc
c
Measure-Command { . $PROFILE }
c
scoop cache rm *
scoop cleanup -a
c
ls
c
scoop update *
c
scoop status
scoop update zoxide
scoop update pandoc
c
vim
c
ns
c
vi
vi _vimrc
de=longest:full
set si ai ci cinkeys-=0
set backspace=indent,eol,start
set fileformats=unix,dos,mac
set statusline=%F
set number
set relativenumber
set cursorline
set clipboard+=unnamed
set tabstop=4
set shiftwidth=4
set expandtab
set smartindent
set autoindent
set mouse=a
set hlsearch
set incsearch
set t_Co=256
set wildmenu
set timeoutlen=100
set termguicolors
set showcmd
set cmdheight=1
" 基础键位映射`
let g:mapleader ="\<Space>"`
let g:maplocalleader = ","`
inoremap jk <Esc>`^`
`
" 窗口切换
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l
" ESC清除搜索高亮`
nmap <Esc> :noh<CR>`
`
" 搜索优化
nmap n gn
nmap N gN
" 插件管理`
call plug#begin()`
Plug 'mhinz/vim-startify'                " 启动页
Plug 'vim-airline/vim-airline'           " 状态栏`
Plug 'vim-airline/vim-airline-themes'    " 状态栏主题
Plug 'morhetz/gruvbox'                   " 配色方案`
Plug 'tpope/vim-surround'                " 快速修改括号/引号
Plug 'easymotion/vim-easymotion'         " 快速跳转`
Plug 'tpope/vim-commentary'              " 快速注释
Plug 'voldikss/vim-floaterm'             " 浮动终端`
call plug#end()`
`
" 界面设置
set guioptions-=m
set guioptions-=T
set guioptions-=l
set guioptions-=L
set guioptions-=r
set guioptions-=R
set guifont=FantasqueSansM_Nerd_Font:h16
set guioptions-=e
" 配色方案`
colorscheme gruvbox`
set background=dark`
`
" airline 配置
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
" 浮动终端配置`
map <C-t> :FloatermToggle<CR>`
tmap <C-t> <C-\><C-n>:FloatermToggle<CR>`
`
" Windows特定配置
" 打开当前目录`
noremap <leader>e :!start explorer %:p:h<CR>`
" 打开CMD
noremap <leader>f :!start<cr>
" easymotion配置`
map <Leader> <Plug>(easymotion-prefix)`
nmap <leader>ss <Plug>(easymotion-s2)`
`
" 光标样式配置
if has('win32')
    let &t_SI = "\e[6 q"
    let &t_EI = "\e[2 q"
    let &t_SR = "\e[4 q"
endif
" 自动括号匹配`
inoremap ( ()<Esc>i`
inoremap [ []<Esc>i`
inoremap { {}<Esc>i `
inoremap ) <c-r>=ClosePair(')')<CR>`
inoremap ] <c-r>=ClosePair(']')<CR>`
inoremap } <c-r>=CloseBracket()<CR>`
inoremap " <c-r>=QuoteDelim('"')<CR>
c
vi _vimrc
vi
gvim
vi
c
vi
c
vi
gvim
vi
c
vi
c
z c:\Users\AZK19\OneDrive\桌面\
vi 1.go
vi
z c:\Users\AZK19\OneDrive\桌面\
vi 1.py
vi
vi 1.py
vi
c
vi
gvim
Measure-Command { . $PROFILE }
c
vi
c
vi _vimrc
vi
z c:\Users\AZK19\OneDrive\桌面
vi _vimrc.txt
vi
yz
c
cd ~
c
vi _vimrc
vi
c
z c:\Users\AZK19\OneDrive\桌面
vi 1.py
vi 1.go
vi
cd ~
vi
z c:\Users\AZK19\OneDrive\桌面
vi 1.go
c
cd ~
vi
_vimrc
vi
notepade _vimrc
notepad _vimrc
vi
c
vi
c
vi
vi _vimrc
vi
vi _vimrc
vi
c
notepad _vimrc
vi
notepad _vimrc
vi
vim
vi
vi _vimrc
vi
c
vi
c
Measure-Command { . $PROFILE }
c
vi
notepad _vimrc
vi
yz
c
scoop update *
c
scoop update *
scoop update
scoop status
scoop update anytype eza fzf git vscodium
scoop update eza fzf git
c
scoop update *
c
scoop cache rm *
scoop cleanup -a
c
notepad $profile
vi $profile
get-poshthemes
notepad $profile
z c:\Users\AZK19\OneDrive\桌面
cd D:\!Workbenches\HP_Code\zig_learning\
ls
cd .\zig
cd .\zig_in_self\
c
ls
c
z c:\Users\AZK19\OneDrive\桌面
c
pypy
julia
c
which vscodium
c
scoop update vscodium
vim
vi _gvimrc
vi _vimrc
gvim
vi _gvimrc
scoop cache rm *
scoop cleanup -a
c
gvim
ns
ns az
c
Measure-Command { . $PROFILE }
c
helix
hx
c
scoop cache rm *
scoop cleanup -a
c
notepad $profile
nvim --version
nvim -V1 -v
c
ls
c
Measure-Command { . $PROFILE }
c
wsl --list -v
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/array.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/array.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/array.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/array.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/array.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/array.py
c
ls
vim .
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe C:\Users\AZK19\OneDrive\桌面\hello\code_python\linked_list.py 
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/linked_list.py
c
scoop update *
scoop cache rm *
scoop cleanup -a
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/linked_list.py
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/list.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/list.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/list.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/list.py
x
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/list.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/stack.py
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/linkedlist_stack.py
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/array_stack.py
c
ns
:q
c
ns n
ns lz
ns n
cls
ns n
c
ns
ns n
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/hash_map.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/hash_map.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/hash_map.py
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/array_hash_map.py
c
notepad $profile
Measure-Command { . $PROFILE }
Measure-Command { . $PROFILE }
c
Measure-Command { . $PROFILE }
c
Measure-Command { . $PROFILE }
c
vim ~/.config/starship.toml
cd ~/.config
ls
vim ~/.config/starship.toml
c
ls
c
ls
c
ls
starship preset jetpack -o ~/.config/starship.toml
cd ~/.config
ls
vim ~/.config/starship.toml
c
ls
c
nvim
ls
c
ls
c
ls
c
ls
c
starship preset gruvbox-rainbow -o ~/.config/starship.toml
c
starship preset bracketed-segments -o ~/.config/starship.toml
c
cd D:\!Workbenches\HP_Code\zig_learning\
starship preset tokyo-night -o ~/.config/starship.toml
c
Measure-Command { . $PROFILE }
c
scoop update *
scoop cache rm *
scoop cleanup -a
c
z c:\Users\AZK19\OneDrive\桌面
ls
yz
c
vim
cd d:\Python\Python314
c
cd D:\!Workbenches\HP_Code\
ls
cd .\go_learning\
ls
c
cd ~
c
starship preset pastel-powerline -o ~/.config/starship.toml
c
starship preset jetpack -o ~/.config/starship.toml
c
exa
exa --help
exa -l
c
lsd -l
c
z c:\Users\AZK19\OneDrive\桌面
c
ll
lsd -l
exa -l
fd hello
procs
c
scoop search procs
scoop install  procs
procs
sd
grex
scoop search grex
scoop install grex
c
notepad $profile
c
pwd
c
Measure-Command { . $PROFILE }
c
z c:\Users\AZK19\OneDrive\桌面
yz
which obsidian
obsidian --version
c
scoop search obsidian
scoop which obsidian
scoop uninstall obsidian
scoop install obsidian
obsidian --version
scoop which obsidian
obsidian
c
d
f
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/array_list_code.py
c
& D:/!Workbenches/20/pypy3.10-v7.3.17-win64/pypy.exe c:/Users/AZK19/OneDrive/桌面/hello/code_python/array_list_code.py
c
Measure-Command { . $PROFILE }
c
ls
c
scoop update *
c
scoop cache rm *
scoop cleanup -a
c
vim ~/.config/starship.toml
c
vim ~/.config/starship.toml
c
vim ~/.config/starship.toml
ls
c
notepad $profile
c
c
$profile
vi $profile
notepad $profile
Measure-Command { . $PROFILE }
notepad $profile
Measure-Command { . $PROFILE }
ns
Measure-Command { . $PROFILE }
c
notepad $profile
Measure-Command { . $PROFILE }
ns
ns az
Measure-Command { . $PROFILE }
c
pypy
python
c
z d:\Python\Python314
ls
.\python.exe 
z ~
c
M
Measure-Command { . $PROFILE }
c
Measure-Command { . $PROFILE }
c
az
ns az
ns az .\.config\starship.toml 
c
ns az .\.config\starship.toml 
c
vi C:\Users\AZK19\AppData\Roaming\nushell\env.nu
vi C:\Users\AZK19\AppData\Roaming\nushell\config.nu 
cls
ns kk .\.config\starship.toml 
c
ns kk .\.config\starship.toml 
c
ns kk .\.config\starship.toml 
c
ns kk .\.config\starship.toml 
vi C:\Users\AZK19\AppData\Roaming\nushell\config.nu 
ns kk .\.config\starship.toml 
c
z c:\Users\AZK19\OneDrive\桌面
z d:\Python\Python314
z D:\!Workbenches\70\
exa -l
z 'D:\!Workbenches\HP_Code\zig_learning\zig_in_self\'ls
z 'D:\!Workbenches\HP_Code\zig_learning\zig_in_self\'
ls
z ~
notepad  .\.config\starship.toml 
ls
c
cd D:\!Workbenches\HP_Code\zig_learning\
c
notepad  .\.config\starship.toml 
cd D:\!Workbenches\HP_Code\zig_learning\
Measure-Command { . $PROFILE }
c
z c:\Users\AZK19\OneDrive\桌面
z 'D:\!Workbenches\HP_Code\zig_learning\zig_in_self\'
c
starship preset pastel-powerline -o ~/.config/starship.toml
c
cd ~
c
starship preset tokyo-night -o ~/.config/starship.toml
c
Measure-Command { . $PROFILE }
c
Measure-Command { . $PROFILE }
c
ls
c
z 'D:\!Workbenches\HP_Code\zig_learning\zig_in_self\'
ls
yz
c
scoop update *
choco upgrade
scoop status
c
Measure-Command { . $PROFILE }
c
hx
c
starship preset nerd-font-symbols -o ~/.config/starship.toml
c
ls
c
z c:\Users\AZK19\OneDrive\桌面
ls
c
ll 
z 'D:\!Workbenches\HP_Code\zig_learning\zig_in_self\'
c
z ~
c
starship preset pastel-powerline -o ~/.config/starship.toml
starship preset bracketed-segments -o ~/.config/starship.toml
z 'D:\!Workbenches\HP_Code\zig_learning\zig_in_self\'
starship preset nerd-font-symbols -o ~/.config/starship.toml
c
z ~
c
vim ~/.config/starship.toml
c
cls
c
cc
c
ls
c
Measure-Command { . $PROFILE }
c]
c
ns
ns kk .\.config\starship.toml
ns nc
pwd
z C:\Users\AZK19\AppData\Roaming\
ls
yz
ns nc .\alacritty\alacritty.toml 
c
ls
c
z ~
c
Measure-Command { . $PROFILE }
c
ns
c
scoop install superfile
c
z c:\Users\AZK19\OneDrive\桌面
ll
z c:\Users\AZK19\OneDrive\桌面
spf
c
notepad $profile
 $profile
Measure-Command { . $PROFILE }
M
Measure-Command { . $PROFILE }
c
Measure-Command { . $PROFILE }
c
scoop update *
c
scoop cache rm *
scoop cleanup -a
c
ls
c
nvim
ns
scoop search lua
lua
which lua
c
scoop cache rm *
scoop cleanup -a
c
yz
z C:\Users\AZK19\AppData\Local
yz
nvim
ns
c
Measure-Command { . $PROFILE }
c
nvim
hx
c
& D:/Python/Python310/python.exe c:\Users\AZK19\.trae\extensions\ms-python.python-2025.0.0-universal\python_files\printEnvVariablesToFile.py c:\Users\AZK19\.trae\extensions\ms-python.python-2025.0.0-universal\python_files\deactivate\powershell\envVars.txt
ll
gsd .
c
gds .
gds .\.history\
gds .\.mypy_cache\
c
cc
c
Measure-Command { . $PROFILE }
c
Measure-Command { . $PROFILE }
c
Measure-Command { . $PROFILE }
c
Measure-Command { . $PROFILE }
c
scoop update *
c
Measure-Command { . $PROFILE }
c
Measure-Command { . $PROFILE }
c
Measure-Command { . $PROFILE }
pwd
c
echo $path
echo $PATH
$PATH
c
beef
which beef
c
pipx list
which pipx
c
pypy
rustup update
 rusts --version
 rustc --version
rust
rustc
rustc --edition 
rustc --edition 2024
rustc --edition 2021
c
z c:\Users\AZK19\OneDrive\桌面
history
Get-History 
z %userprofile%\documents\
z c:\Users\AZK19\
c
ls
c
exa -l
c
cd .\Documents\
ls
ll
yz
pwd
cd .\OneDrive\文档\
c
ls
yz
get-content C:\Users\AZK19\OneDrive\文档\WindowsPowerShell
get-content C:\Users\AZK19\Documents\
get-content 'C:\Users\AZK19\Documents\Pear Files\'c
c
which fzf
vim C:\Users\AZK19\.Rhistory
rm  C:\Users\AZK19\.Rhistory
vim C:\Users\AZK19\.Rhistory
vim C:\Users\AZK19\AppData\Local\History
yz C:\Users\AZK19\AppData\Local\History
ls C:\Users\AZK19\AppData\Local\History
c
scoop update *
c
Measure-Command { . $PROFILE }
c3
c
yz D:\!Workbenches\20
c3c
c3c --version
scoop search c3c
scoop install  c3c
scoop install c3c
scoop install c3
c3c --version
c3 --version
c
c3c --version
c
luajit -v
c
lua -v
which lua
c
scoop update *
scoop cache rm *
scoop cleanup -a
c
cc
c
nvim
Measure-Command { . $PROFILE }
emacs
ls
c
f
c
clear
z c:\Users\AZK19\
z c:\Users\AZK19\OneDrive\桌面
ll
z ~
cls
Measure-Command { . $PROFILE }
c
ns as
ns as .\.config\starship.toml 
c
ns
c
ns
lvim
c
lvim
c
lvim +LvimUpdate +q
lvim
Invoke-WebRequest https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/uninstall.ps1 -UseBasicParsing | Invoke-Expression
which lvim
notepad $profile
Invoke-WebRequest https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/uninstall.ps1 -UseBasicParsing | Invoke-Expression
c
notepad $profile
Invoke-WebRequest https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/uninstall.ps1 -UseBasicParsing | Invoke-Expression
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
cls
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
pwsh
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
winget 
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex
pwsh -c "iwr https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.ps1 -UseBasicParsing | iex"
pwsh -c "`$LV_BRANCH='release-1.4/neovim-0.9'; iwr https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.4/neovim-0.9/utils/installer/install.ps1 -UseBasicParsing | iex"
lvim
cls
z c:\Users\AZK19\OneDrive\桌面
git clone https://github.com/LunarVim/LunarVim.git
ls
ll
yz 
lvim
notepad $profile
hx --version
winget --help
winget list
which fnm
which procexp
scoop search procexp
lvim
xonsh
Measure-Command { . $PROFILE }
c
scoop update *
scoop status
ls
c
cls
c
cc
c
scoop update
scoop update *
scoop cache rm *
scoop cleanup -a
c
z c:\Users\AZK19\OneDrive\桌面
ls
c
ls
ll
c
Measure-Command { . $PROFILE }
c
procexp
pypy
c
rustc
c
scoop cache rm *
scoop cleanup -a
c
z c:\Users\AZK19\OneDrive\桌面
vi 1.go
c
Measure-Command { . $PROFILE }
scoop update *
scoop status
scoop cache rm *
scoop cleanup -a
c
vi
nvim
c
ns
n
c
ns
cls
git clone https://github.com/fanlumaster/FanyLazyvim.git
cd .\FanyLazyvim\
cls
ls
scoop install bottom
scoop update *
scoop update bottom
scoop status
c
bottom
bt
tt
scoop update bottom
htop
btop
btm
cls
git clone https://github.com/LazyVim/starter $env:LOCALAPPDATA\nvim
Remove-Item $env:LOCALAPPDATA\nvim\.git -Recurse -Force
nvim
c
ns
nvim
ns
c
cd ~/.local/share/nvim/lazy/cmp-fuzzy-buffer/deps/blink_cmp_fuzzy
cd %LOCALAPPDATA%\nvim-data\lazy\cmp-fuzzy-buffer\deps\blink_cmp_fuzzy
cd appdata\localnvim-data\lazy
cd appdata\local\nvim-data\lazy
ls
cd cmp-fuzzy-buffer\deps\blink_cmp_fuzzy
cd cmp-fuzzy-buffer
c
ls
c
cd ~
scoop install ast-grep
sg --help
sg -V
c
cls
nvim
cls
f
nvim
cls
nvim
ns
nvim
:q
nvim
winget -v
winget list
winget features
winget list
which winget
scoop search winget
scoop install winget-preview
winget list
c
which winget
winget search microsoft.windows-terminal-dev
winget search neovim
cls
which winget
z D:\Applications\Scoop
ls
cd .\apps\
ls
cd .\winget-preview\
c
ls
cd .\1.10.40\
ls
yz
c
scoop which winget
scoop uninstall winget-preview
scoop search winget
scoop install wingetcreate
winget
whcih winget
which winget
wingetcreate
winget -v
winget update
wingetcreate update
cls
pypy
cls
c
scoop update *
scoop cache rm *
scoop cleanup -a
cls
nvim
ns
ns lz
ns
c
scoop update *
c
scoop status
ls
c
get-poshthemes
c
get-poshthemes
notepad $profile
Measure-Command { . $PROFILE }
z D:\Applications\Scoop
yz
which yz
which yazi
Measure-Command { . $PROFILE }
c
scoop update *
scoop cache rm *
scoop cleanup -a
which odin
odin --version
odin version
z D:\!Workbenches\20\Odin\
cls
ls
git pull
ll
z c:\Users\AZK19\OneDrive\桌面
git clone https://github.com/odin-lang/Odin.git
ll
ls
cls
git clone https://github.com/odin-lang/Odin.git
cd .\Odin\
ls
build.bat release
.\build.bat  release
.\build.bat 
yz
bat .\build.bat 
scoop search odin
cd ..
rm .\Odin\
rm -f .\Odin\
rm -rf .\Odin\
rm -r .\Odin\
yz
scoop install odin
odin version
scoop install odin
scoop which odin
scoop install odin-dev
cd ~
cls
scoop install odin-dev
scoop install odin
c
scoop bucket add versions
scoop install versions/odin
cd D:\Applications\Scoop\
scoop install versions/odin
cd .\apps\odin\
scoop install versions/odin
cd ..
scoop install versions/odin
cd ~
scoop install versions/odin
c
\scoop install versions/odin
scoop install versions/odin
dart --version
scoop install main/dart
odin version
which odin
odin version
crystal --version
whcih crystal
which crystal
scoop install main/crystal
crystal --version
ruby --version
scoop bucket add versions
scoop install versions/zed-nightly
zed
cls
scoop uninstall versions/zed-nightly
c
vi 1.py
pypy 1.py
c
pypy 1.py
vi 1.py
pypy 1.py
c
pypy 1.py
vi 1.py
cls
nvim
cls
scoop update *
scoop cache rm *
scoop cleanup -a
c
scoop search alacrity
scoop search alacritty
scoop uninstall alacritty
scoop install alacritty
alacritty
ls
c
alacritty
ls
c
nvim
cls
zig init
nvim .
vi .
ns
ns nc .
& "D:\Applications\Scoop\shims\zig.EXE" build run
scoop which zig
scoop list | grep z
alacritty
z D:\Applications\Scoop
yz
zvm --help
zigup --help
c
& "D:\Applications\Scoop\shims\zig.EXE" build run
vim
c
uv
which uv
scoop update *
zls --version
scoop update zls
zig version
code
c
cls
c
code-insiders
c
elixir
c
$profile
z C:\Users\AZK19\OneDrive\文档\PowerShell
yz
Get-History
z C:\Users\AZK19\文档\PowerShell
z C:\Users\AZK19\文档\
z C:\Users\AZK19\Documents\
yz
Get-Content (Get-PSReadlineOption).HistorySavePath 
(Get-PSReadlineOption).HistorySavePath
cd C:\Users\AZK19\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\
yz
ll
notepad $profile
cd C:\Users\AZK19\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\
yz
scoop cache rm *
scoop cleanup -a
cd C:\Users\AZK19\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\
yz
pwd
